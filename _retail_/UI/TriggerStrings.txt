//***************************************************************************
[TriggerEventStrings]

// Special events not defined in common.j,
// handled internally by the editor
MapInitializationEvent="Инициализация карты"
MapInitializationEvent="Инициализация карты"
MapInitializationEventHint="Событие происходит во время старта карты."


// Destructible events
TriggerRegisterDeathEvent="Разрушаемый объект уничтожен"
TriggerRegisterDeathEvent=~Разрушаемый объект," уничтожен" 
TriggerRegisterDeathEventHint="Используйте 'Обработчик События - Умирающий Разрушаемый' чтобы обращаться к разрушаемому объекту."

TriggerRegisterDestDeathInRegionEvent="Разрушаемые объекты уничтожены в области"
TriggerRegisterDestDeathInRegionEvent="Разрушаемые объекты уничтожины в ",~области,""
TriggerRegisterDestDeathInRegionEventHint="Будут задействованы только первые 64 разрушаемых объектов в области, где зарегистрировано это событие."


// Dialog events
TriggerRegisterDialogEventBJ="Нажата кнопка диалога"
TriggerRegisterDialogEventBJ="Диалоговая кнопка нажата ",~Dialog
TriggerRegisterDialogEventBJHint=


// Game events
TriggerRegisterGameStateEventTimeOfDay="Время суток"
TriggerRegisterGameStateEventTimeOfDay="время суток становится ",~Operation," ",~Time
TriggerRegisterGameStateEventTimeOfDayHint="В игровых сутках 24 часа."

TriggerRegisterVariableEvent="Значение действительного числа"
TriggerRegisterVariableEvent=~Variable," становится ",~Operation," ",~Value
TriggerRegisterVariableEventHint="Это относится только к переменным 'действительное число'."

TriggerRegisterGameLoadedEventBJ="Загрузка игры"
TriggerRegisterGameLoadedEventBJ="Сохранённая игра загружена"
TriggerRegisterGameLoadedEventBJHint=

TriggerRegisterGameSavedEventBJ="Сохранение игры"
TriggerRegisterGameSavedEventBJ="Игра была сохранена"
TriggerRegisterGameSavedEventBJHint=

TriggerRegisterShowSkillEventBJ="Нажата кнопка изучения таланта"
TriggerRegisterShowSkillEventBJ="Нажата кнопка 'способности' у героя"
TriggerRegisterShowSkillEventBJHint="Это событие можно использовать только в карте для одного игрока."

TriggerRegisterBuildSubmenuEventBJ="Нажата кнопка построить здание"
TriggerRegisterBuildSubmenuEventBJ="Нажата кнопка 'построить здание'"
TriggerRegisterBuildSubmenuEventBJHint="Это событие можно использовать только в карте для одного игрока."

TriggerRegisterGameEvent="Случайный турнир"
TriggerRegisterGameEvent="Должен быть закончен ",~Event Type
TriggerRegisterGameEventHint="Это событие происходит только во время автоматических турнирных игр на Battle.net."


// Player events
TriggerRegisterPlayerChatEvent="Напечатал сообщение в чате"
TriggerRegisterPlayerChatEvent=~Player," напечатал такое сообщение ",~Text," как ",~Match Type
TriggerRegisterPlayerChatEventHint="Используйте 'Обработчик События - Введенное/совпавшее сообщение' чтобы обращаться к сообщению, как к введенному/совпавшему.  Используйте 'Обработчик События - Переключение Игрока' чтобы обращаться к игроку, который напечатал сообщение."

TriggerRegisterPlayerEventEndCinematic="Нажата кнопка Escape"
TriggerRegisterPlayerEventEndCinematic=~Player," нажал клавишу Escape"
TriggerRegisterPlayerEventEndCinematicHint=

TriggerRegisterPlayerSelectionEventBJ="Событие выделения"
TriggerRegisterPlayerSelectionEventBJ=~Player," ",~Selects/Deselects," отряд"
TriggerRegisterPlayerSelectionEventBJHint=

TriggerRegisterPlayerKeyEventBJ="Событие клавиатуры"
TriggerRegisterPlayerKeyEventBJ=~Player," ",~Presses/Releases," ",~Key," клавишу"
TriggerRegisterPlayerKeyEventBJHint=

TriggerRegisterPlayerStateEvent="Свойства"
TriggerRegisterPlayerStateEvent=~Player," ",~Property," становится ",~Operation," ",~Value
TriggerRegisterPlayerStateEventHint=

TriggerRegisterPlayerEventAllianceChanged="Изменение союза (любое)"
TriggerRegisterPlayerEventAllianceChanged=~Player," изменяет настройки союза"
TriggerRegisterPlayerEventAllianceChangedHint=

TriggerRegisterPlayerAllianceChange="Изменение союза (уточнённое)"
TriggerRegisterPlayerAllianceChange=~Player," изменяет настройки союза ",~Alliance Type
TriggerRegisterPlayerAllianceChangeHint=

TriggerRegisterPlayerEventVictory="Победа"
TriggerRegisterPlayerEventVictory=~Player," заканчивает игру победителем"
TriggerRegisterPlayerEventVictoryHint=

TriggerRegisterPlayerEventDefeat="Поражение"
TriggerRegisterPlayerEventDefeat=~Player," заканчивает игру проигравшим"
TriggerRegisterPlayerEventDefeatHint=

TriggerRegisterPlayerEventLeave="Покинул игру"
TriggerRegisterPlayerEventLeave=~Player," покинул игру"
TriggerRegisterPlayerEventLeaveHint="Это событие происходит независимо от того, каким образом игрок покинул игру."


// Timer events
TriggerRegisterTimerEventSingle="Времени прошло"
TriggerRegisterTimerEventSingle="Прошло ",~Time," секунд"
TriggerRegisterTimerEventSingleHint=

TriggerRegisterTimerEventPeriodic="Периодическое событие"
TriggerRegisterTimerEventPeriodic="Каждые ",~Time," секунд игрового времени"
TriggerRegisterTimerEventPeriodicHint=

TriggerRegisterTimerExpireEventBJ="Таймер истекает"
TriggerRegisterTimerExpireEventBJ=~Timer," истекает"
TriggerRegisterTimerExpireEventBJHint="Таймер истекает, когда он доходит до 0.  Повторяющиеся таймеры истекают, когда доходят до 0.  Используйте 'Обработчик События - Истек Таймер' чтобы обращаться к таймеру, который истек."


// Unit events
TriggerRegisterUnitEvent="Событие боевой единицы"
TriggerRegisterUnitEvent=~Unit," ",~Event
TriggerRegisterUnitEventHint=

TriggerRegisterPlayerUnitEventSimple="Событие боевой единицы (игрок)"
TriggerRegisterPlayerUnitEventSimple=~Player," ",~Event
TriggerRegisterPlayerUnitEventSimpleHint=

TriggerRegisterAnyUnitEventBJ="Событие боевой единицы (общее)"
TriggerRegisterAnyUnitEventBJ="Кто-то ",~Event
TriggerRegisterAnyUnitEventBJHint=

TriggerRegisterEnterRectSimple="Боевая единица вошла в область"
TriggerRegisterEnterRectSimple="Боевая единица вошла в область ",~Region
TriggerRegisterEnterRectSimpleHint="Используйте 'Реакция на событие - Входящая боевая единица' чтобы обращаться к боевой единице, вошедшей в область."

TriggerRegisterLeaveRectSimple="Боевая единица покинула область"
TriggerRegisterLeaveRectSimple="Боевая единица покинула область ",~Region
TriggerRegisterLeaveRectSimpleHint="Используйте 'Реакция на событие - Покидающая боевая единица' чтобы обращаться к боевой единице, покинувшей область."

TriggerRegisterUnitInRangeSimple="Боевая единица в радиусе"
TriggerRegisterUnitInRangeSimple="Боевая единица в радиусе ",~Range," ",~Unit
TriggerRegisterUnitInRangeSimpleHint="Используйте 'Реакция на событие - Инициирующая боевая единица' чтобы обращаться к боевой единице, которая вошла в область действия."

TriggerRegisterUnitLifeEvent="Жизнь"
TriggerRegisterUnitLifeEvent=~Unit," жизнь становится ",~Operation," ",~Value
TriggerRegisterUnitLifeEventHint=

TriggerRegisterUnitManaEvent="Мана"
TriggerRegisterUnitManaEvent=~Unit," мана становится ",~Operation," ",~Value
TriggerRegisterUnitManaEventHint=


//***************************************************************************
[TriggerConditionStrings]

OperatorCompareBoolean="Логическое сравнение"
OperatorCompareBoolean=~Value," ",~Operator," ",~Value
OperatorCompareBooleanHint=

OperatorCompareAbilityId="Сравнение способностей"
OperatorCompareAbilityId=~Value," ",~Operator," ",~Value
OperatorCompareAbilityIdHint=

OperatorCompareBuffId="Сравнение заклинаний/эффектов"
OperatorCompareBuffId=~Value," ",~Operator," ",~Value
OperatorCompareBuffIdHint=

OperatorCompareDestructible="Сравнение разрушаемого"
OperatorCompareDestructible=~Value," ",~Operator," ",~Value
OperatorCompareDestructibleHint=

OperatorCompareDestructableCode="Сравнение разрушаемого (тип)"
OperatorCompareDestructableCode=~Value," ",~Operator," ",~Value
OperatorCompareDestructableCodeHint=

OperatorCompareButton="Сравнение диалоговых кнопок"
OperatorCompareButton=~Value," ",~Operator," ",~Value
OperatorCompareButtonHint=

OperatorCompareGameDifficulty="Сравнение сложности игры"
OperatorCompareGameDifficulty=~Value," ",~Operator," ",~Value
OperatorCompareGameDifficultyHint=

OperatorCompareGameSpeed="Сравнение скорости игры"
OperatorCompareGameSpeed=~Value," ",~Operator," ",~Value
OperatorCompareGameSpeedHint=

OperatorCompareHeroSkill="Сравнение уровня героя"
OperatorCompareHeroSkill=~Value," ",~Operator," ",~Value
OperatorCompareHeroSkillHint=

OperatorCompareInteger="Сравнение целого числа"
OperatorCompareInteger=~Value," ",~Operator," ",~Value
OperatorCompareIntegerHint=

OperatorCompareItem="Сравнение предмета"
OperatorCompareItem=~Value," ",~Operator," ",~Value
OperatorCompareItemHint=

OperatorCompareItemType="Сравнение предмета (класс)"
OperatorCompareItemType=~Value," ",~Operator," ",~Value
OperatorCompareItemTypeHint=

OperatorCompareItemCode="Сравнение предмета (тип)"
OperatorCompareItemCode=~Value," ",~Operator," ",~Value
OperatorCompareItemCodeHint=

OperatorCompareMeleeDifficulty="Сравнение ИИ"
OperatorCompareMeleeDifficulty=~Value," ",~Operator," ",~Value
OperatorCompareMeleeDifficultyHint=

OperatorCompareOrderCode="Сравнение приказа"
OperatorCompareOrderCode=~Value," ",~Operator," ",~Value
OperatorCompareOrderCodeHint=

OperatorComparePlayer="Сравнение игрока"
OperatorComparePlayer=~Value," ",~Operator," ",~Value
OperatorComparePlayerHint=

OperatorComparePlayerColor="Сравнение цвета игрока"
OperatorComparePlayerColor=~Value," ",~Operator," ",~Value
OperatorComparePlayerColorHint=

OperatorComparePlayerControl="Сравнение управления игроком"
OperatorComparePlayerControl=~Value," ",~Operator," ",~Value
OperatorComparePlayerControlHint=

OperatorComparePlayerSlotStatus="Сравнение статуса слота игрока"
OperatorComparePlayerSlotStatus=~Value," ",~Operator," ",~Value
OperatorComparePlayerSlotStatusHint=

//OperatorComparePoint="Сравнение предмета"
//OperatorComparePoint=~Value," ",~Operator," ",~Value
//OperatorComparePointHint=

OperatorCompareRace="Сравнение расы"
OperatorCompareRace=~Value," ",~Operator," ",~Value
OperatorCompareRaceHint=

OperatorCompareReal="Сравнение действительного числа"
OperatorCompareReal=~Value," ",~Operator," ",~Value
OperatorCompareRealHint=

//OperatorCompareRegion="Сравнение области"
//OperatorCompareRegion=~Value," ",~Operator," ",~Value
//OperatorCompareRegionHint=

OperatorCompareString="Сравнение строки"
OperatorCompareString=~Value," ",~Operator," ",~Value
OperatorCompareStringHint="Чтобы две строки были равны, нужно, чтобы у них была одинаковая длина и содержание."

OperatorCompareTechCode="Сравнение улучшений (тип)"
OperatorCompareTechCode=~Value," ",~Operator," ",~Value
OperatorCompareTechCodeHint=

OperatorCompareTrigger="Сравнение триггеров"
OperatorCompareTrigger=~Value," ",~Operator," ",~Value
OperatorCompareTriggerHint=

OperatorCompareUnit="Сравнение боевой единицы"
OperatorCompareUnit=~Value," ",~Operator," ",~Value
OperatorCompareUnitHint=

OperatorCompareUnitCode="Сравнение боевой елиницы (тип)"
OperatorCompareUnitCode=~Value," ",~Operator," ",~Value
OperatorCompareUnitCodeHint=

OperatorCompareTerrainType="Сравнение почвы"
OperatorCompareTerrainType=~Value," ",~Operator," ",~Value
OperatorCompareTerrainTypeHint=

GetBooleanAnd="И"
GetBooleanAnd=~Condition 1," и ",~Condition 2
GetBooleanAndHint=

GetBooleanOr="Или"
GetBooleanOr=~Condition 1," ИЛИ ",~Condition 2
GetBooleanOrHint=

AndMultiple="И - Несколько условий"
AndMultiple="И - Все условия истинны"
AndMultipleHint="Условия И для этой функции в главном экране."

OrMultiple="Или - Несколько условий"
OrMultiple="Или - любое из условий истинно"
OrMultipleHint="Условия Или для этой функции в главном экране."


//***************************************************************************
[TriggerActionStrings]

DoNothing="Ничего не делать"
DoNothing="Ничего не делать"
DoNothingHint=

CommentString="Комментарий"
CommentString="<= ",~Comment Text," =>"
CommentStringHint=

CustomScriptCode="Личный сценарий"
CustomScriptCode="Личный сценарий: ",~Script Code
CustomScriptCodeHint="Введите одну строку кода.  Пример: 'call RemoveLocation(GetUnitLoc(udg_unit))'"

TriggerSleepAction="Ждать"
TriggerSleepAction="Ждать ",~Time," секунд"
TriggerSleepActionHint="Длительность этой паузы задаётся в секундах реального времени."

PolledWait="Ждать (Игровое время)"
PolledWait="Ждать ",~Time," игровых секунд"
PolledWaitHint="Длительность этой паузы задаётся в секундах игрового времени. Это ожидание может длиться немного дольше."

WaitForCondition="Ждать условие"
WaitForCondition="Ждать пока ",~Condition,", проверяя каждые ",~Interval," секунд"
WaitForConditionHint=

WaitForSoundBJ="Ждать звук"
WaitForSoundBJ="Ждать звук ",~Sound," за ",~Time," секунд от окончания игры"
WaitForSoundBJHint="Это действие выполняется только если сейчас играет звук. Если звук ещё не начался, или уже закончился, то это действие не выполняется."


// Specially handled by the editor
SetVariable="Установить переменную"
SetVariable="Установить ",~Variable," = ",~Value
SetVariableHint=


// Specially handled by the editor
ReturnAction="Пропустить оставшиеся действия"
ReturnAction="Пропустить оставшиеся действия"
ReturnActionHint="Это заставляет сценарий пропустить все оставшиеся действия."


// Specially handled by the editor
IfThenElseMultiple="Если / Тогда / Иначе, (несколько функций)"
IfThenElseMultiple="Если (все условия истинны) тогда (запуск операции) иначе (если нет, то запуск этого)"
IfThenElseMultipleHint="Добавьте условия и действия к этой функции в главном экране."

// Specially handled by the editor
IfThenElse="Если / Тогда / Иначе"
IfThenElse="Если ",~Condition," то делать ",~Action," иначе ",~Action
IfThenElseHint=

// Specially handled by the editor
ForLoopAMultiple="Для каждого числа A, делать несколько действий
ForLoopAMultiple="Для каждого (Числа A) от ",~Start," до ",~End,", делать (действия)"
ForLoopAMultipleHint=

// Specially handled by the editor
ForLoopBMultiple="Для каждого числа B, делать несколько действий
ForLoopBMultiple="Для каждого (Числа B) от ",~Start," до ",~End,", делать"
ForLoopBMultipleHint=

// Specially handled by the editor
ForLoopVarMultiple="Для каждой Переменной Integer, Совершать Операции
ForLoopVarMultiple="Для каждого (Числа ",~Variable,") от ",~Start," до ",~End,", делать"
ForLoopVarMultipleHint="Цикл использует глобальную переменную."

// Specially handled by the editor
ForLoopA="Для каждого числа A, делать"
ForLoopA="Для каждого (числа A) от ",~Start," до ",~End,", делать ",~Action
ForLoopAHint=

// Specially handled by the editor
ForLoopB="Для каждого числа B, делать"
ForLoopB="Для каждого (числа B) от ",~Start," до ",~End,", делать ",~Action
ForLoopBHint=

// Specially handled by the editor
ForLoopVar="Для каждой переменной Integer, совершать операции"
ForLoopVar="Для каждого (Числа ",~Variable,") от ",~Start," до ",~End,", делать ",~Action
ForLoopVarHint="Цикл использует глобальную переменную."


// AI actions
StartMeleeAI="Начать сценарий поведения ИИ"
StartMeleeAI="Начать сценарий поведения для ",~Player,": ",~Script
StartMeleeAIHint="Это нужно использовать только для игроков компьютеров. Когда пользуетесь этим действием, советуем включить 'Фиксированные настройки игрока' в свойствах."

StartCampaignAI="Начать сценарий кампании"
StartCampaignAI="Начать сценарий кампании для ",~Player,": ",~Script
StartCampaignAIHint="Это нужно использовать только для игроков компьютеров. Когда пользуетесь этим действием, советуем включить 'Фиксированные настройки игрока' в свойствах."

CommandAI="Послать команду"
CommandAI="Послать ",~Player," команду ИИ (",~Command,", ",~Data,")"
CommandAIHint="Это действие для внутреннего Использования в сценариях ИИ."

RemoveGuardPosition="Игнорировать положение стража"
RemoveGuardPosition="Игнорировать ",~Unit,"'s положение стража"
RemoveGuardPositionHint="Это действие предписывает ни использовать, ни заменять место этого отряда.  Это не имеет действия на Героев и на крестьян."

RemoveAllGuardPositions="Игнорировать положение всех стражей"
RemoveAllGuardPositions="Игнорировать положение стражей всех отрядов ",~Player," "
RemoveAllGuardPositionsHint="Это действие предписывает ни использовать, ни заменять место этого отряда.  Это не имеет действия на Героев и на крестьян.."

RecycleGuardPosition="Использовать положение стража"
RecycleGuardPosition="Использовать ",~Unit,"'s положение стража"
RecycleGuardPositionHint="Это действие заставляет ИИ использовать место, ранее занимаемое отрядом."

LockGuardPosition="Закрыть положение стража"
LockGuardPosition="Закрыть положение стража ",~Unit
LockGuardPositionHint="Это действие не дает ИИ изменять положение стража."

// Animation actions
SetUnitAnimation="Воспроизводить анимацию боевой единицы"
SetUnitAnimation="Воспроизводить анимацию ",~Unit," ",~Animation Name," "
SetUnitAnimationHint=

SetUnitAnimationWithRarity="Воспроизвести анимацию боевой единицы (укажите частоту)"
SetUnitAnimationWithRarity="Воспроизвести анимацию ",~Unit," ",~Animation Name,", используя только  ",~Rarity," повторов"
SetUnitAnimationWithRarityHint=

QueueUnitAnimationBJ="Анимацию в очередь"
QueueUnitAnimationBJ="Анимацию ",~Unit," ",~Animation Name," в очередь"
QueueUnitAnimationBJHint=

ResetUnitAnimation="Сбросить анимацию"
ResetUnitAnimation="Сбросить ",~Unit," анимацию"
ResetUnitAnimationHint="Устанавливает анимацию боевой единицы в исходное положение."

AddUnitAnimationPropertiesBJ="Добавить/Удалить анимацию боевой единицы"
AddUnitAnimationPropertiesBJ=~Add/Remove," ",~Tag," анимацию ",~Unit
AddUnitAnimationPropertiesBJHint=

SetUnitLookAt="Отключить изменения лицевой части"
SetUnitLookAt="Отключить изменения ",~Unit," ",~Source," лица ",~Unit,", сдвиг на (",~X,", ",~Y,", ",~Z,")"
SetUnitLookAtHint="Тело персонажа будет повернуто в цели, пока не произойдет событие 'Сбросить поворот туловища'.  Сдвиг (X, Y, Z) отсчитывается от ног объекта."

ResetUnitLookAt="Сбросить поворот туловища"
ResetUnitLookAt="Сбросить ",~Unit,"'s Поворот туловища"
ResetUnitLookAtHint="Возвращает поворот туловища в исходное положение."

SetUnitScalePercent="Изменить размер боевой единицы"
SetUnitScalePercent="Изменить ",~Unit,"'s размер до (",~X,"%, ",~Y,"%, ",~Z,"%) первоначального размера"
SetUnitScalePercentHint="Значения масштаба применены к (Длине, Ширине и Высоте)."

SetUnitVertexColorBJ="Изменить окраску боевой единицы"
SetUnitVertexColorBJ="Изменить окрасу верха ",~Unit,"'s на (",~Red,"%, ",~Green,"%, ",~Blue,"%) с ",~Transparency,"% прозрачности"
SetUnitVertexColorBJHint="Цвета (Красный, Зелёный, Синий)."

SetUnitTimeScalePercent="Установить скорость анимации боевой единицы"
SetUnitTimeScalePercent="Изменить Скорость анимации ",~Unit," на ",~Percent,"% от начально скорости"
SetUnitTimeScalePercentHint="Чтобы вернуть скорость к первоначальной, установите её на 100%."

SetUnitTurnSpeedBJ="Изменить Скорость поворота боевой единицы"
SetUnitTurnSpeedBJ="Изменить Скорость поворота ",~Unit," на ",~Value
SetUnitTurnSpeedBJHint="Это значение определяет скорость разворота боевой единицы. Скорости могут принимать значения от 0 до 1, меньшие числа символизируют меньшую скорость поворота."

SetUnitBlendTimeBJ="Скорость Перемещения боевой единицы"
SetUnitBlendTimeBJ="Изменить ",~Unit," время перемещения ",~Value
SetUnitBlendTimeBJHint="Определяет, с какой скоростью части туловища боевой единицы будут перемещаться в данном направлении."

SetUnitFlyHeightBJ="Изменить Высоту полёта"
SetUnitFlyHeightBJ="Изменить Высоту полёта ",~Unit," до ",~Height," при ",~Rate
SetUnitFlyHeightBJHint="Только летающие и парящие отряды могут изменять высоту полёта."

SetUnitPropWindowBJ="Изменить Угол Окна Свойств"
SetUnitPropWindowBJ="Изменить Угол Окна Свойств ",~Unit," на ",~Angle
SetUnitPropWindowBJHint=

SetDestructableAnimationBJ="Воспроизвести Анимацию Разрушения"
SetDestructableAnimationBJ="Воспроизвести ",~Destructible,"'s ",~Animation Name," анимацию"
SetDestructableAnimationBJHint=

QueueDestructableAnimationBJ="В очередь Анимацию Разрушения"
QueueDestructableAnimationBJ="В очередь ",~Destructible,"'s ",~Animation Name," анимацию"
QueueDestructableAnimationBJHint=

SetDestAnimationSpeedPercent="Изменить Скорость Анимации Разрушения "
SetDestAnimationSpeedPercent="Изменить ",~Destructible,"'s скорость анимации ",~Percent,"% начальной скорости"
SetDestAnimationSpeedPercentHint="Чтобы вернуть скорость к начальной, установите её до 100%."

SetDoodadAnimationRectBJ="Воспроизвести Анимацию Не Персонажей в Регионе"
SetDoodadAnimationRectBJ="Воспроизвести ",~Animation Name," анимацию для всех предметов типа ",~Doodad Type," в квадрате ",~Rect
SetDoodadAnimationRectBJHint=

SetDoodadAnimationBJ="Воспроизвести Анимацию Не Персонажей в Радиусе"
SetDoodadAnimationBJ="Воспроизвести ",~Animation Name," анимацию для всех предметов ",~Doodad Type," в радиусе ",~Radius," центра ",~Point
SetDoodadAnimationBJHint=


// Camera actions
CameraSetupApplyForPlayer="Применить Объект Камеры (Время)"
CameraSetupApplyForPlayer="",~Apply Method," ",~Camera Object," для ",~Player," на ",~Time," секунд"
CameraSetupApplyForPlayerHint=

PanCameraToTimedLocForPlayer="Переместить Камеру (Временно)"
PanCameraToTimedLocForPlayer="Переместить Камеру для ",~Player," к ",~Point," на ",~Time," секунд"
PanCameraToTimedLocForPlayerHint=

PanCameraToTimedLocWithZForPlayer="Переместить Камеру с интерполированной высотой (Время)"
PanCameraToTimedLocWithZForPlayer="Переместить Камеру для ",~Player," на ",~Point," на высоту ",~Z," над землей на ",~Time," секунд"
PanCameraToTimedLocWithZForPlayerHint="Камера не будет погружаться под землю при перемещении по маршруту."

SmartCameraPanBJ="Переместить Камеру при необходимости (время)"
SmartCameraPanBJ="Переместить Камеру при необходимости для ",~Player," к ",~Point," на ",~Time," секунд"
SmartCameraPanBJHint="Если камера очень далеко, она переключится, а не переместится.  Если камера очень близко, то запрос на перемещение будет пропущен."

SetCameraFieldForPlayer="Установить поле камеры (время)"
SetCameraFieldForPlayer="Установить ",~Player,"'s камеру ",~Field," на ",~Value," на ",~Time," секунд"
SetCameraFieldForPlayerHint=

RotateCameraAroundLocBJ="Вращать камеру вокруг точки"
RotateCameraAroundLocBJ="Вращать камеру на угол ",~Angle," вокруг ",~Point," для ",~Player," в течение ",~Time," секунд"
RotateCameraAroundLocBJHint=

SetCameraTargetControllerNoZForPlayer="Прикрепить камеру к отряду"
SetCameraTargetControllerNoZForPlayer="Прикрепить Камеру для ",~Player," к отряду ",~Unit,", расстояние (",~X,", ",~Y,") используя ",~Rotation Source
SetCameraTargetControllerNoZForPlayerHint="Цель камеры находится на расстоянии (X, Y) от центра подошв отряда."

SetCameraOrientControllerForPlayerBJ="Закрепить ориентацию камеры отряда"
SetCameraOrientControllerForPlayerBJ="Закрепить ориентацию камеры для ",~Player," к ",~Unit,", сдвиг на (",~X,", ",~Y,")"
SetCameraOrientControllerForPlayerBJHint=

SetCinematicCameraForPlayer="Воспроизвести Запись"
SetCinematicCameraForPlayer="Воспроизвести для ",~Player," из ",~Camera File," "
SetCinematicCameraForPlayerHint=

StopCameraForPlayerBJ="Остановить камеру"
StopCameraForPlayerBJ="Остановить камеру ",~Player
StopCameraForPlayerBJHint=

ResetToGameCameraForPlayer="Сбросить камеру игры"
ResetToGameCameraForPlayer="Сбросить камеру для ",~Player," в стандартный вид на ",~Time," секунд"
ResetToGameCameraForPlayerHint=

CameraSetSmoothingFactorBJ="Изменить сглаживающий фактор камеры"
CameraSetSmoothingFactorBJ="Изменить сглаживающий фактор камеры на ",~Factor
CameraSetSmoothingFactorBJHint=

CameraResetSmoothingFactorBJ="Сбросить сглаживающий фактор камеры"
CameraResetSmoothingFactorBJ="Сбросить сглаживающий фактор камеры"
CameraResetSmoothingFactorBJHint=

CameraSetFocalDistance="Применить размытие изображения экрана"
CameraSetFocalDistance="Применить размытие изображения экрана ",~Distance
CameraSetFocalDistanceHint="Значение устанавливается от 0 до 100."

CameraSetSourceNoiseForPlayer="Повернуть по горизонтали"
CameraSetSourceNoiseForPlayer="Повернуть камеру по горизонтали для ",~Player," с увеличением ",~Magnitude," и скоростью ",~Velocity
CameraSetSourceNoiseForPlayerHint="Будет поворачивать камеру до тех пор, пока не вызовут событие 'Камера - сбросить игровую камеру' или 'Камера - прекратить поворот камеры'."

CameraSetTargetNoiseForPlayer="Вращать цель камеры"
CameraSetTargetNoiseForPlayer="Вращать Цель Камеры  для ",~Player," с увеличением ",~Magnitude," и скоростью ",~Velocity
CameraSetTargetNoiseForPlayerHint="Будет поворачивать камеру до тех пор, пока не вызовут событие 'Камера - Сбросить игровую камеру' или 'Камера - прекратить поворот камеры'."

CameraSetEQNoiseForPlayer="Трясти камеру"
CameraSetEQNoiseForPlayer="Трясти камеру для ",~Player," с увеличением ",~Magnitude
CameraSetEQNoiseForPlayerHint="Будет трясти камеру до тех пор, пока не вызовут событие 'Камера - сбросить игровую камеру' или 'Камера - прекратить тряску/поворот камеры'"

CameraClearNoiseForPlayer="Прекратить тряску/поворот камеры "
CameraClearNoiseForPlayer="Прекратить Тряску/Поворот Камеры для ",~Player
CameraClearNoiseForPlayerHint="Это прекращает действие  'Камера - вращать камеру' или 'Камеру - трясти камеру'."

AdjustCameraBoundsForPlayerBJ="Расширить/сузить границы камеры"
AdjustCameraBoundsForPlayerBJ=~Расширить/сузить," границы камеры для ",~Player," на запад ",~West,", на восток ",~East,", на север ",~North,", и на юг ",~South
AdjustCameraBoundsForPlayerBJHint=

SetCameraBoundsToRectForPlayerBJ="Установить границы камеры"
SetCameraBoundsToRectForPlayerBJ="Установить границы камеры для ",~Player," на ",~Region
SetCameraBoundsToRectForPlayerBJHint="Это фиксирует камеру на определённом регионе. Изменение границы камеры не изменит масштаба камеры.  Приметь это нужно только когда камера обращена на север."

SetCameraQuickPositionLocForPlayer="Установить область для клавиши пробел"
SetCameraQuickPositionLocForPlayer="Установить область для клавиши пробел для ",~Player," в ",~Point
SetCameraQuickPositionLocForPlayerHint="Область пробела - это место, в которое перемещается камера, когда игрок нажимает пробел."


// Cinematic actions
TransmissionFromUnitWithNameBJ="Передача от Отряда"
TransmissionFromUnitWithNameBJ="Послать передачу ",~Player Group," от ",~Unit," по имени ",~Name,": Воспроизвести ",~Sound," и показать ",~Message,".  Изменить продолжительность: ",~Method," ",~Time," секунд и ",~Wait/Don't Wait
TransmissionFromUnitWithNameBJHint="Длительность 'Без звука'  5 секунд."

TransmissionFromUnitTypeWithNameBJ="Передача от Отряда-Типа"
TransmissionFromUnitTypeWithNameBJ="Послать передачу ",~Player Group," от ",~Player," ",~Unit-Type," по имени ",~Name," в ",~Point,": Воспроизвести ",~Sound," и показать ",~Message,".  Изменить продолжительность: ",~Method," ",~Time," секунд и ",~Wait/Don't Wait
TransmissionFromUnitTypeWithNameBJHint="Длительность 'Без звука'  5 секунд."

ForceCinematicSubtitlesBJ="Показывать субтитры принудительно"
ForceCinematicSubtitlesBJ="Показывать субтитры принудительно ",~On/Off
ForceCinematicSubtitlesBJHint="Субтитры будут отображаться на экране даже в том случае, если они отключены в настройках."

CinematicModeBJ="Кинематографический режим"
CinematicModeBJ="Кинематографический режим ",~On/Off," для  ",~Player Group
CinematicModeBJHint=

CinematicModeExBJ="Кинематографический режим (Время)"
CinematicModeExBJ="Кинематографический режим ",~On/Off," для ",~Player Group," на ",~Time," секунд"
CinematicModeExBJHint=

CinematicFadeBJ="Фильтр Снижения Яркости"
CinematicFadeBJ=~Fade Type," на ",~Duration," секунд с текстурой ",~Texture," и цветом (",~Red,"%, ",~Green,"%, ",~Blue,"%) с ",~Transparency,"% прозрачности"
CinematicFadeBJHint="Цвета (Красный, Зелёный, Синий). 100% прозрачный отряд полностью невидим."

CinematicFilterGenericBJ="Расширенный Фильтр"
CinematicFilterGenericBJ="Применить фильтр на ",~Duration," секунд используя ",~Blending Method," на текстуре ",~Texture,", начиная с цвета (",~Red,"%, ",~Green,"%, ",~Blue,"%) и ",~Transparency,"% прозрачности и заканчивая цветом (",~Red,"%, ",~Green,"%, ",~Blue,"%) и ",~Transparency,"% призрачности"
CinematicFilterGenericBJHint="Цвета (Красный, Зелёный, Синий). 100% прозрачный отряд полностью невидим."

DisplayCineFilterBJ="Показать/Скрыть фильтр"
DisplayCineFilterBJ=~Show/Hide," фильтр"
DisplayCineFilterBJHint=

PingMinimapLocForForce="Поиск на мини-карте"
PingMinimapLocForForce="Показать на мини-карте ",~Player Group," в ",~Point," в течение ",~Duration," секунд"
PingMinimapLocForForceHint=

PingMinimapLocForForceEx="Поиск на мини-карте с цветом"
PingMinimapLocForForceEx="Показать на мини-карте ",~Player Group," в ",~Point," в течение ",~Duration," секунд, используя ",~Style," цвет поиска ("~Red,"%, ",~Green,"%, ",~Blue,"%)"
PingMinimapLocForForceExHint="Цвета - Красный, Зеленый, Синий. Внимание, отметка всегда красная."

UnitAddIndicatorBJ="Мерцающий индикатор речи отряда"
UnitAddIndicatorBJ="Мерцающий индикатор речи отряда ",~Unit," цвета (",~Red,"%, ",~Green,"%, ",~Blue,"%) с ",~Transparency,"% прозрачности"
UnitAddIndicatorBJHint="Цвета - Красный, Зеленый, Синий. 100% прозрачный - полностью невидим."

DestructableAddIndicatorBJ="Мерцающий индикатор речи для Разрушаемых"
DestructableAddIndicatorBJ="Мерцающий индикатор речи ",~Destructible," цвета (",~Red,"%, ",~Green,"%, ",~Blue,"%) с ",~Transparency,"% прозрачности"
DestructableAddIndicatorBJHint="Цвета - Красный, Зеленый, Синий. 100% прозрачный - полностью невидим."

ItemAddIndicatorBJ="Мерцающий индикатор речи для предмета"
ItemAddIndicatorBJ="Мерцающий индикатор речи для ",~Item," цвета (",~Red,"%, ",~Green,"%, ",~Blue,"%) с ",~Transparency,"% прозрачности"
ItemAddIndicatorBJHint="Цвета - Красный, Зеленый, Синий. 100% прозрачный - полностью невидим."

ClearTextMessagesBJ="Очистить Текст Сообщения"
ClearTextMessagesBJ="Очистить Текст Сообщения для ",~Player Group
ClearTextMessagesBJHint=

ShowInterfaceForceOff="Скрыть интерфейс"
ShowInterfaceForceOff=""Скрыть интерфейс для ",~Player Group,": выключение через ",~Duration," секунд"
ShowInterfaceForceOffHint=

ShowInterfaceForceOn="Показывать интерфейс"
ShowInterfaceForceOn="Показывать интерфейс для ",~Player Group,": включение через ",~Duration," секунд"
ShowInterfaceForceOnHint=

SetUserControlForceOff="Отключить контроль игроку"
SetUserControlForceOff="Отключить контроль игроку для ",~Player Group
SetUserControlForceOffHint=

SetUserControlForceOn="Включить контроль игроку"
SetUserControlForceOn="Включить контроль игроку для ",~Player Group
SetUserControlForceOnHint=

EnableOcclusionBJ="Включить/Выключить преграды"
EnableOcclusionBJ=~Включить/Отключить," преграды для ",~Player Group
EnableOcclusionBJHint="Когда этот режим включён, боевые единицы, которых заслоняют деревья, будут видны."

EnableWorldFogBoundaryBJ="Включить/Выключить обрезку краев"
EnableWorldFogBoundaryBJ=~Включить/Отключить," Обрезку краев для ",~Player Group
EnableWorldFogBoundaryBJHint=


// Countdown Timer actions
StartTimerBJ="Запустить таймер"
StartTimerBJ="Запустить ",~Timer," как ",~One-Shot/Repeating," таймер, который истечёт через ",~Time," секунд"
StartTimerBJHint=

PauseTimerBJ="Остановить"
PauseTimerBJ=~Pause/Resume," ",~Timer
PauseTimerBJHint=

CreateTimerDialogBJ="Создать Окно Таймера"
CreateTimerDialogBJ="Создать окно таймера  для ",~Timer," с названием ",~Title
CreateTimerDialogBJHint="Окна таймера нельзя показывать при инициализации Карты."

DestroyTimerDialogBJ="Уничтожить Окно Таймера"
DestroyTimerDialogBJ="Уничтожить ",~Timer Window
DestroyTimerDialogBJHint=

TimerDialogDisplayForPlayerBJ="Скрыть/Показать Окно Таймера для игрока"
TimerDialogDisplayForPlayerBJ=~Show/Hide," ",~Timer Window," для ",~Player
TimerDialogDisplayForPlayerBJHint="Окна таймера нельзя показывать при инициализации Карты."

TimerDialogDisplayBJ="Скрыть/Показать Окно Таймера"
TimerDialogDisplayBJ=~Show/Hide," ",~Timer Window
TimerDialogDisplayBJHint="Окна таймера нельзя показывать при инициализации Карты."

TimerDialogSetTitleBJ="Изменить Название Окна Таймера"
TimerDialogSetTitleBJ="Изменить название ",~Timer Window," на ",~Title
TimerDialogSetTitleBJHint=

TimerDialogSetTitleColorBJ="Изменить Цвет Окна Таймера"
TimerDialogSetTitleColorBJ="Изменить цвет названия окна таймера ",~Timer Window," на (",~Red,"%, ",~Green,"%, ",~Blue,"%) с ",~Transparency,"% прозрачностью"
TimerDialogSetTitleColorBJHint="Цвета (Красный, Зелёный, Синий). 100% прозрачный отряд полностью невидим."

TimerDialogSetTimeColorBJ="Изменить Цвет Времени в Окне Таймера"
TimerDialogSetTimeColorBJ="Изменить цвет времени ",~Timer Window," на (",~Red,"%, ",~Green,"%, ",~Blue,"%) с ",~Transparency,"% прозрачности"
TimerDialogSetTimeColorBJHint="Цвета (Красный, Зелёный, Синий). 100% прозрачный отряд полностью невидим."

//TimerDialogSetSpeedBJ="Установить Скорость Окна Таймера "
//TimerDialogSetSpeedBJ="Установить скорость ",~Timer Window," в ",~Factor," раз больше или меньше нормальной"
//TimerDialogSetSpeedBJHint=


// Destructable actions
CreateDestructableLoc="Создать"
CreateDestructableLoc="Создать ",~Destructible-Type," в ",~Point," с лицом ",~Direction," с масштабом ",~Scale," и вариацией ",~Variation
CreateDestructableLocHint="Угол поворота задаётся в градусах, где 0 - восток, 90 - север, 180 - запад, 270 - юг. Используйте 'Последний созданный разрушаемый объект', чтобы обратиться к разрушаемому объекту."

CreateDeadDestructableLocBJ="Создать (мёртвого)"
CreateDeadDestructableLocBJ="Создать мёртвого ",~Destructible-Type," в ",~Point," в направлении ",~Direction," с масштабом ",~Scale," и вариацией ",~Variation
CreateDeadDestructableLocBJHint="Угол поворота задаётся в градусах, где где 0 - восток, 90 - север, 180 - запад, 270 - юг. Используйте 'Последний Созданный Объект', чтобы обратиться к Объекту."

KillDestructable="Убить"
KillDestructable="Убить ",~Destructible
KillDestructableHint=

RemoveDestructable="Удалить"
RemoveDestructable="Удалить ",~Destructible
RemoveDestructableHint=

DestructableRestoreLife="Возродить"
DestructableRestoreLife="Возродить ",~Destructible," с ",~Value," жизни и ",~Show/Hide," анимацию рождения"
DestructableRestoreLifeHint=

ShowDestructableBJ="Скрыть/Показать"
ShowDestructableBJ=~Show/Hide," ",~Destructible
ShowDestructableBJHint="Скрытые объекты не показываются, но влияют на видимость и прохождение."

SetDestructableLifePercentBJ="Установить здоровье (В процентах)"
SetDestructableLifePercentBJ="Установить здоровье ",~Destructible," до ",~Percent,"%"
SetDestructableLifePercentBJHint=

SetDestructableLife="Установить здоровье (Значение)"
SetDestructableLife="Установить здоровье ",~Destructible," в ",~Value
SetDestructableLifeHint=

SetDestructableMaxLifeBJ="Установить Макс здоровье"
SetDestructableMaxLifeBJ="Установить макс здоровье ",~Destructible," до ",~Value
SetDestructableMaxLifeBJHint=

ModifyGateBJ="Открыть/Закрыть/Уничтожить Ворота"
ModifyGateBJ=~Open/Close/Destroy," ",~Gate
ModifyGateBJHint=

ChangeElevatorWalls="Открыть/Закрыть Подъемные Стены"
ChangeElevatorWalls=~Open/Close," ",~Walls," ",~Elevator
ChangeElevatorWallsHint=

ChangeElevatorHeight="Установить Высоту Подъема"
ChangeElevatorHeight="Установить высоту  ",~Elevator," до ",~Height
ChangeElevatorHeightHint=

SetDestructableInvulnerableBJ="Сделать Уязвимым/Неуязвимым"
SetDestructableInvulnerableBJ="Сделать ",~Destructible," ",~Invulnerable/Vulnerable
SetDestructableInvulnerableBJHint=

SetDestructableOccluderHeight="Установить высоту препятствия"
SetDestructableOccluderHeight="Установить высоту препятствия",~Destructible," равной ",~Height
SetDestructableOccluderHeightHint=

EnumDestructablesInRectAllMultiple="Выбрать всё разрушаемое в регионе и произвести множественные действия"
EnumDestructablesInRectAllMultiple="Выбрать всё разрушаемое в ",~Region," и произвести (Действия)"
EnumDestructablesInRectAllMultipleHint="Используйте 'Выбранное разрушаемое' для ссылки на каждый разрушаемый объект при его выборе. Работает для всего разрушаемого в регионе, включая мёртвых разрушаемых. Действия ожидания не используются в этой функции. Добавьте действия к этой функции на главном экране."

EnumDestructablesInCircleBJMultiple="Выбрать всё Разрушаемое в круге и произвести множественные действия"
EnumDestructablesInCircleBJMultiple="Выбрать всё разрушаемое в радиусе ",~Radius," ",~Point," и произвести (Действия)"
EnumDestructablesInCircleBJMultipleHint="Используйте 'Выбранное разрушаемое' для ссылки на каждый разрушаемый объект при его выборе. Работает для всего разрушаемого в регионе, включая мёртвых разрушаемых. Действия ожидания не используются в этой функции. Добавьте действия к этой функции на главном экране."

EnumDestructablesInRectAll="Выбрать всё Разрушаемое в регионе и произвести действие"
EnumDestructablesInRectAll="Выбрать всё разрушаемое в ",~Region," и произвести ",~Action
EnumDestructablesInRectAllHint="Используйте 'Выбранное разрушаемое' для ссылки на каждый разрушаемый объект при его выборе. Работает для всего разрушаемого в регионе, включая мёртвых разрушаемых. Действия ожидания не используются в этой функции."

EnumDestructablesInCircleBJ="Выбрать всё Разрушаемое в круге и произвести действие"
EnumDestructablesInCircleBJ="Выбрать всё разрушаемое в радиусе ",~Radius," ",~Point," и произвести ",~Action
EnumDestructablesInCircleBJHint="Используйте 'Выбранное разрушаемое' для ссылки на каждый разрушаемый объект при его выборе. Работает для всего разрушаемого в регионе, включая мёртвых разрушаемых. Действия ожидания не используются в этой функции."


// Dialog actions
DialogDisplayBJ="Показать"
DialogDisplayBJ=~Show/Hide," ",~Dialog," для ",~Player
DialogDisplayBJHint="Диалоговые окна не могут отображаться при инициализации карты."

DialogSetMessageBJ="Смена названия"
DialogSetMessageBJ="Смена названия ",~Dialog," на ",~Title
DialogSetMessageBJHint=

DialogAddButtonBJ="Создать кнопку диалогового окна"
DialogAddButtonBJ="Создать кнопку диалогового окна для ",~Dialog," с отметкой ",~Text
DialogAddButtonBJHint="Для отображения кнопок создайте после них триггер 'Показать'"

DialogClearBJ="Очистить"
DialogClearBJ="Очистить ",~Dialog
DialogClearBJHint="Стирает название и все кнопки для указанного диалогового окна."


// Environment actions
AddWeatherEffectSaveLast="Создать погодный эффект"
AddWeatherEffectSaveLast="Создать в ",~Region," погодный эффект ",~Weather Id
AddWeatherEffectSaveLastHint=

EnableWeatherEffect="Включить/Выключить погодный эффект"
EnableWeatherEffect="Переключить ",~Weather Effect," ",~On/Off
EnableWeatherEffectHint="Вы можете создавать погодные эффекты через действие 'Окружение - Создать погодный эффект'."

RemoveWeatherEffectBJ="Удалить погодный эффект"
RemoveWeatherEffectBJ="Удалить ",~Weather Effect
RemoveWeatherEffectBJHint=

TerrainDeformationCraterBJ="Создать деформацию рельефа: Кратер"
TerrainDeformationCraterBJ="Создать на ",~Duration," секунд ",~Type," деформацию-кратер в ",~Point," с радиусом ",~Radius," и глубиной ",~Depth
TerrainDeformationCraterBJHint="Используйте 'Последняя созданная деформация местности' для ссылки на эту деформацию местности. Глубина может быть отрицательной для выпуклостей. Постоянные деформации не сохраняются в сохраненных файлах игры."

TerrainDeformationRippleBJ="Создать деформацию рельефа: Рябь"
TerrainDeformationRippleBJ="Создать на ",~Duration," секунд ",~Type," деформацию рябь в ",~Point," с начальным радиусом ",~Radius,", конечным радиусом ",~Radius,", и глубиной ",~Depth,", используя ",~Time," второй волны и интервал ",~Distance," между волнами"
TerrainDeformationRippleBJHint="Используйте 'Последняя созданная деформация местности' для ссылки на эту деформацию местности."

TerrainDeformationWaveBJ="Создать деформацию рельефа: Волна"
TerrainDeformationWaveBJ="Создать на ",~Duration," секунд деформацию-волну от ",~Source," до ",~Target," с радиусом ",~Radius,", глубиной ",~Depth," и ",~Delay," секунд задержкой между волнами"
TerrainDeformationWaveBJHint="Используйте 'Последняя созданная деформация местности' для ссылки на эту деформацию местности. Глубина может быть отрицательной для выпуклостей."

TerrainDeformationRandomBJ="Создать деформацию рельефа: Случайная"
TerrainDeformationRandomBJ="Создать на ",~Duration," секунд случайную деформацию в ",~Point," с радиусом ",~Radius,", используя глубины между ",~Minimum," и ",~Maximum,", с обновлением каждые ",~Update Interval," секунд"
TerrainDeformationRandomBJHint="Используйте 'Последняя созданная деформация местности' для ссылки на эту деформацию местности."

TerrainDeformationStopBJ="Прекратить деформацию рельефа"
TerrainDeformationStopBJ="Прекратить ",~Terrain Deformation," на ",~Duration," секунд"
TerrainDeformationStopBJHint="Деформация будет плавно сведена до нуля на указанное время."

TerrainDeformStopAll="Прекратить все деформации рельефа"
TerrainDeformStopAll="Мгновенно прекратить все активные деформации местности"
TerrainDeformStopAllHint="В том числе все деформации местности, косвенно вызванные заклинаниями или способностями."

SetWaterDeforms="Деформация Воды Включить/Выключить"
SetWaterDeforms="Деформация воды ",~On/Off
SetWaterDeformsHint="Когда это включено, деформации рельефа также будут применяться к любой воде над рельефом. Это не работает с постоянными деформациями."

SetTerrainTypeBJ="Изменить Текстуру Рельефа"
SetTerrainTypeBJ="Изменить текстуру рельефа ",~Location," на ",~Terrain Type," используя вариацию ",~Variation," в регионе размером ",~Area," и формой ",~Shape
SetTerrainTypeBJHint="Используйте значение вариации - 1, чтобы установить случайную вариацию."

SetTerrainPathableBJ="Преобразовать маршрут местности"
SetTerrainPathableBJ="Установить маршрут ",~Location," тип ",~Pathing,", который ",~On/Off
SetTerrainPathableBJHint=

SetWaterBaseColorBJ="Установить цвет закраски воды"
SetWaterBaseColorBJ="Изменить цвет закраски воды на (",~Red,"%, ",~Green,"%, ",~Blue,"%) с ",~Transparency,"% прозрачностью"
SetWaterBaseColorBJHint="Цвет указывается в формате (Красный, Зелёный, Синий). На 100% прозрачная вода - невидимая вода."

SetSkyModel="Установить небо"
SetSkyModel="Установить небо как ",~Sky
SetSkyModelHint=

SetTerrainFogExBJ="Установить туман"
SetTerrainFogExBJ="Установить туман стиля ",~Style,", z-начало ",~Z-Start,", z-конец ",~Z-End,", плотности ",~Density," и цвета (",~Red,"%, ",~Green,"%, ",~Blue,"%)"
SetTerrainFogExBJHint="Цвет указывается в формате (Красный, Зелёный, Синий)."

ResetTerrainFogBJ="Сброс тумана"
ResetTerrainFogBJ="Сброс тумана до значений по умолчанию"
ResetTerrainFogBJHint=

SetBlightRectBJ="Создать/Удалить пораженный болезнью регион"
SetBlightRectBJ=~Create/Remove," Болезнь растений для ",~Player," в ",~Region
SetBlightRectBJHint=

SetBlightRadiusLocBJ="Создать/Удалить пораженный болезнью круг"
SetBlightRadiusLocBJ=~Create/Remove," Болезнь растений для ",~Player," от ",~Point," с радиусом ",~Radius
SetBlightRadiusLocBJHint=


// Text Tag actions
CreateTextTagLocBJ="Создать парящий текст в точке"
CreateTextTagLocBJ="Создать парящий текст, гласящий ",~Message," в ",~Point," с высотой ",~Z,", используя размер шрифта ",~Size,", цвет (",~Red,"%, ",~Green,"%, ",~Blue,"%) и ",~Transparency,"% прозрачность"
CreateTextTagLocBJHint=

CreateTextTagUnitBJ="Создать парящий текст над боевой единицей"
CreateTextTagUnitBJ="Создать парящий текст, гласящий ",~Message," над ",~Unit," с высотой ",~Z,", используя размер шрифта ",~Size,", цвет (",~Red,"%, ",~Green,"%, ",~Blue,"%) и ",~Transparency,"% прозрачность"
CreateTextTagUnitBJHint="Парящий текст, созданный таким образом, не передвигается вместе с боевой единицей."

DestroyTextTagBJ="Уничтожить"
DestroyTextTagBJ="Уничтожить ",~Floating Text
DestroyTextTagBJHint=

ShowTextTagForceBJ="Показать/Скрыть"
ShowTextTagForceBJ=~Show/Hide," ",~Floating Text," для ",~Player Group
ShowTextTagForceBJHint=

SetTextTagVelocityBJ="Установить скорость"
SetTextTagVelocityBJ="Установить скорость ",~Floating Text," как ",~Speed," под углом ",~Angle," градусов"
SetTextTagVelocityBJHint="Вы можете точно устанавливать скорость парящего текста один раз при его первом создании.  Угол задаётся в градусах, где 0 - восток, 90 - север, 180 - запад, 270 - юг."

SetTextTagColorBJ="Изменить цвет"
SetTextTagColorBJ="Изменить цвет ",~Floating Text," на (",~Red,"%, ",~Green,"%, ",~Blue,"%) с ",~Transparency,"% прозрачностью"
SetTextTagColorBJHint="Цвет указывается в формате (Красный, Зелёный, Синий)."

SetTextTagPosBJ="Изменить позицию в область"
SetTextTagPosBJ="Изменить позицию ",~Floating Text," в ",~Point," с высотой ",~Z
SetTextTagPosBJHint=

SetTextTagPosUnitBJ="Изменить позицию на юнит"
SetTextTagPosUnitBJ="Изменить позицию ",~Floating Text," на ",~Unit," с высотой ",~Z
SetTextTagPosUnitBJHint=

SetTextTagTextBJ="Изменить Текст"
SetTextTagTextBJ="Изменить текст ",~Floating Text," на ",~Message," размером ",~Size
SetTextTagTextBJHint=

SetTextTagSuspendedBJ="Приостановить/Возобновить"
SetTextTagSuspendedBJ="Изменить ",~Floating Text,": ",~Включить/Отключить," приостановку"
SetTextTagSuspendedBJHint=

SetTextTagPermanentBJ="Постоянный/Временный"
SetTextTagPermanentBJ="Изменить ",~Floating Text,": ",~Включить/Отключить," постоянство"
SetTextTagPermanentBJHint=

SetTextTagLifespanBJ="Изменить распределение существования"
SetTextTagLifespanBJ="Изменить распределение существования ",~Floating Text," на ",~Time," секунд"
SetTextTagLifespanBJHint="Не влияет на постоянный парящий текст."

SetTextTagFadepointBJ="Изменить время затухания"
SetTextTagFadepointBJ="Изменить время затухания ",~Floating Text," на ",~Time," секунд"
SetTextTagFadepointBJHint="Не влияет на постоянный парящий текст."

SetTextTagAgeBJ="Изменить время"
SetTextTagAgeBJ="Изменить Время ",~Floating Text," на ",~Time," секунд"
SetTextTagAgeBJHint="Не влияет на постоянный парящий текст."


// Game actions
DisplayTextToForce="Текстовое сообщение (время автоматически)"
DisplayTextToForce="Показывать ",~Player Group," текст: ",~Text
DisplayTextToForceHint="Текст показывается определённое время, автоматически изменяемое в зависимости от длины текста."

DisplayTimedTextToForce="Текстовое сообщение (время задаётся)"
DisplayTimedTextToForce="Показывать ",~Player Group," в течение ",~Time," секунд текст: ",~Text
DisplayTimedTextToForceHint=

PauseGameOn="Пауза игры"
PauseGameOn="Приостановить игру"
PauseGameOnHint=

PauseGameOff="Снять паузу игры"
PauseGameOff="Продолжить игру"
PauseGameOffHint=

SetGameSpeed="Установить скорость игры"
SetGameSpeed="Установить скорость игры ",~Speed
SetGameSpeedHint="Вы можете блокировать скорость игры при помощи действия 'Игра - Блокировка скорости игры'."

LockGameSpeedBJ="Блокировка скорости игры"
LockGameSpeedBJ="Блокирует скорость игры"
LockGameSpeedBJHint="Блокирует возможность изменения скорости игры. Даже триггеры не изменяют скорость игры, когда она блокирована."

UnlockGameSpeedBJ="Разблокировка скорости игры"
UnlockGameSpeedBJ="Разблокирует скорость игры"
UnlockGameSpeedBJHint="Включает возможность изменять скорость игры после использования действия 'Игра - Блокировка скорости игры'."

SetMapFlag="Определить флаг карты"
SetMapFlag="Определить ",~Map Flag," как ",~On/Off
SetMapFlagHint=

SetTimeOfDay="Установить время суток"
SetTimeOfDay="Установить время суток как ",~Time
SetTimeOfDayHint="В игровых сутках 24 часа."

SetTimeOfDayScalePercentBJ="Установить скорость времени дня"
SetTimeOfDayScalePercentBJ="Установить скорость времени дня ",~Percent,"% от скорости по умолчанию"
SetTimeOfDayScalePercentBJHint="Выберите 100% для возврата нормальной скорости."

UseTimeOfDayBJ="Цикл День/Ночь Включение/Выключение"
UseTimeOfDayBJ="Переключение цикла день/ночь ",~On/Off
UseTimeOfDayBJHint=

ShareEverythingWithTeam="Делить обзор и полный контроль боевыми единицами с командой"
ShareEverythingWithTeam="Предоставить права обзора и полного контроля боевыми единицами игрока ",~Player," его/её союзникам"
ShareEverythingWithTeamHint="Два игрока считаются союзниками, если они заключили друг с другом союз."

MakeUnitsPassiveForPlayer="Отдать боевые единицы нейтральной жертве"
MakeUnitsPassiveForPlayer="Отдать все боевые единицы игрока ",~Player," игроку-нейтральной жертве"
MakeUnitsPassiveForPlayerHint="По умолчанию, игрок Нейтральная Жертва считает всех других игроков союзниками, хотя все другие принимают его за врага."

SetNextLevelBJ="Установить следующий уровень"
SetNextLevelBJ="Установить следующий уровень ",~Level
SetNextLevelBJHint="Определяет уровень для начала игры после завершения текущей игры."

CustomVictoryBJ="Победа"
CustomVictoryBJ="Победа ",~Player," (",~Show/Skip," диалоги, ",~Show/Skip," счёт)"
CustomVictoryBJHint=

CustomDefeatBJ="Поражение"
CustomDefeatBJ="Поражение ",~Player," с сообщением: ",~Message
CustomDefeatBJHint=

LoadGameBJ="Загрузить игру"
LoadGameBJ="Загрузить ",~Filename," (",~Show/Skip," счёт)"
LoadGameBJHint="Это действие работает только для карт, подписанных Blizzard."

SaveAndLoadGameBJ="Сохранить игру и загрузить игру"
SaveAndLoadGameBJ="Сохранить игру как ",~Filename," и загрузить ",~Filename," (",~Show/Skip," счёт)"
SaveAndLoadGameBJHint="Это действие работает только для карт, подписанных Blizzard."

SaveAndChangeLevelBJ="Сохранить игру и изменить уровень"
SaveAndChangeLevelBJ="Сохранить игру как ",~Filename," и изменить уровень на ",~Filename," (",~Show/Skip," счёт)"
SaveAndChangeLevelBJHint="Это действие работает только для карт, подписанных Blizzard."

RenameSaveDirectoryBJ="Переименовать папку сохранения игр"
RenameSaveDirectoryBJ="Переименовать ",~Folder," папку сохранения игр на ",~Folder
RenameSaveDirectoryBJHint="Это действие работает только для карт, подписанных Blizzard."

RemoveSaveDirectoryBJ="Удалить папку сохранения игр"
RemoveSaveDirectoryBJ="Удалить ",~Folder," папку сохранения игр"
RemoveSaveDirectoryBJHint="Это действие работает только для карт, подписанных Blizzard.  Удаляется указанная папка сохранения игр и все её содержимое."

CopySaveGameBJ="Копировать сохранённую игру"
CopySaveGameBJ="Создать копию файла ",~Filename," сохранённой игры и назвать её ",~Filename
CopySaveGameBJHint="Это действие работает только для карт, подписанных Blizzard."

SetCampaignMenuRaceBJ="Определить экран кампании"
SetCampaignMenuRaceBJ="Определить кампанию как ",~Campaign
SetCampaignMenuRaceBJHint=

SetMissionAvailableBJ="Включить/Выключить миссию"
SetMissionAvailableBJ=~Включить/Отключить," ",~Mission
SetMissionAvailableBJHint=

SetCampaignAvailableBJ="Включить/Выключить кампанию"
SetCampaignAvailableBJ=~Включить/Отключить," ",~Campaign
SetCampaignAvailableBJHint=

SetCinematicAvailableBJ="Включить/Выключить видеоролик"
SetCinematicAvailableBJ=~Включить/Отключить," ",~Cinematic
SetCinematicAvailableBJHint=

ShowCustomCampaignButton="Показать/Спрятать кнопку своей кампании"
ShowCustomCampaignButton=~Show/Hide," кнопку своей кампании ",~Number
ShowCustomCampaignButtonHint=

SetAllyColorFilterState="Установить цветовой фильтр союзников"
SetAllyColorFilterState="Установить цветовой фильтр союзников как ",~State
SetAllyColorFilterStateHint="Значение 0 выключает фильтрацию.  Значение 1 включает фильтрацию для мини-карты.  Значение 2 включает фильтрацию для мини-карты и обзора игры."

SetCreepCampFilterState="Показать/Скрыть лагеря на мини-карте"
SetCreepCampFilterState=~Show/Hide," лагеря на мини-карте"
SetCreepCampFilterStateHint=

EnableMinimapFilterButtons="Включить/Отключить кнопки мини-карты"
EnableMinimapFilterButtons=~Включить/Отключить," кнопки цвета союзников ",~Включить/Отключить," кнопки отображения лагерей"
EnableMinimapFilterButtonsHint=

EnableSelect="Включить/Отключить возможность выделения"
EnableSelect=~Включить/Отключить," возможность выделения (",~Включить/Отключить," шкалу выделения)"
EnableSelectHint="Объекты всё ещё могут быть выбраны и отменены с помощью триггерных действий. Отключение выделения также предотвращает выделение перетаскиванием."

EnableDragSelect="Включить/Отключить выделение перетаскиванием"
EnableDragSelect=~Включить/Отключить," выделение перетаскиванием (",~Включить/Отключить," прямоугольное выделение)"
EnableDragSelectHint=

EnablePreSelect="Включить/Отключить предварительное выделение"
EnablePreSelect=~Включить/Отключить," возможность предварительного просмотра (",~Включить/Отключить," шкалу выбора, состояние здоровья, и информацию об объекте)"
EnablePreSelectHint=

ForceUIKeyBJ="Принудительно нажать клавишу"
ForceUIKeyBJ="Заставить ",~Player," нажать клавишу ",~Key,"."
ForceUIKeyBJHint=

ForceUICancelBJ="Принудительно нажать Escape"
ForceUICancelBJ="Заставить ",~Player," нажать клавишу Escape"
ForceUICancelBJHint=

Preload="Предварительная загрузка файла"
Preload="Предварительно загрузить ",~Filename
PreloadHint=

PreloadEnd="Начало предварительной загрузки"
PreloadEnd="Начать предварительно загружать с временем простоя ",~Time," секунд"
PreloadEndHint=

Preloader="Предварительная загрузка всех файлов"
Preloader="Предварительно загрузить все файлы, перечисленные в ",~Filename
PreloaderHint=


// Game Cache actions
InitGameCacheBJ="Создать кэш игры"
InitGameCacheBJ="Создать кэш игры из ",~Filename
InitGameCacheBJHint="Кэш игры позволяет вам сохранять данные между картами или между играми на одной карте."

SaveGameCacheBJ="Сохранить кэш игры"
SaveGameCacheBJ="Сохранить ",~Game Cache
SaveGameCacheBJHint="Сохраняет кэш игры, используя то же имя файла, из которого он был создан."

StoreUnitBJ="Сохранить боевую единицу"
StoreUnitBJ="Сохранить ",~Unit," как ",~Label," из ",~Category," в ",~Game Cache
StoreUnitBJHint="Используйте действия 'Кэш игры - Загрузить боевую единицу' для загрузки этой боевой единицы из кэша."

StoreRealBJ="Сохранить действительное число"
StoreRealBJ="Сохранить ",~Value," как ",~Label," из ",~Category," в ",~Game Cache
StoreRealBJHint="Используйте функцию 'Кэш игры - Загрузить действительное число' для загрузки этого значения из кэша."

StoreIntegerBJ="Сохранить целое число"
StoreIntegerBJ="Сохранить ",~Value," как ",~Label," из ",~Category," в ",~Game Cache
StoreIntegerBJHint="Используйте функцию 'Кэш игры - Загрузить целое число' для загрузки этого значения из кэша."

StoreBooleanBJ="Сохранить логическое значение"
StoreBooleanBJ="Сохранить ",~Value," как ",~Label," из ",~Category," в ",~Game Cache
StoreBooleanBJHint="Используйте функцию 'Кэш игры - Загрузить логическое значение' для загрузки этого значения из кэша."

StoreStringBJ="Сохранить строку"
StoreStringBJ="Сохранить ",~Value," как ",~Label," из ",~Category," в ",~Game Cache
StoreStringBJHint="Используйте функцию 'Кэш игры - Загрузить строку' для загрузки этого значения из кэша."

RestoreUnitLocFacingAngleBJ="Восстановить угол поворота боевой единицы"
RestoreUnitLocFacingAngleBJ="Восстановить ",~Label," ",~Category," из ",~Game Cache," для ",~Player," в ",~Location," поворот ",~Angle
RestoreUnitLocFacingAngleBJHint="Используйте 'Последняя восстановленная боевая единица' для ссылки на боевую единицу, созданную этим действием. Если метка не будет найдена, боевая единица не создаётся, и 'Последняя восстановленная боевая единица' получит значение 'Нет боевой единицы'."

RestoreUnitLocFacingPointBJ="Восстановить точку поворота боевой единицы"
RestoreUnitLocFacingPointBJ="Восстановить ",~Label," ",~Category," из ",~Game Cache," для ",~Player," в ",~Location," поворот ",~Point
RestoreUnitLocFacingPointBJHint="Используйте 'Последняя восстановленная боевая единица' для ссылки на боевую единицу, созданную этим действием. Если метка не будет найдена, боевая единица не создаётся, и 'Последняя восстановленная боевая единица' получит значение 'Нет боевой единицы'."

ReloadGameCachesFromDisk="Перезагрузить всё"
ReloadGameCachesFromDisk="Перезагрузить все данные кэша игры с диска"
ReloadGameCachesFromDiskHint=

FlushGameCacheBJ="Очистить кэш игры"
FlushGameCacheBJ="Очистить ",~Game Cache
FlushGameCacheBJHint="Стирает все метки для всех категорий в кэше игры."

FlushStoredMissionBJ="Очистить категорию"
FlushStoredMissionBJ="Стирает все метки ",~Category," в ",~Game Cache
FlushStoredMissionBJHint="Стирает все метки определённой категории в кэше игры."


// Hashtable actions
InitHashtableBJ="Создать хеш-таблицу"
InitHashtableBJ="Создать хеш-таблицу"
InitHashtableBJHint="Хэш-таблица позволит загружать данные."

SaveRealBJ="Save Real"
SaveRealBJ="Save ",~Value," as ",~Value," of ",~Value," in ",~Hashtable
SaveRealBJHint="Используйте 'Хэш-таблица - Загрузить действительное число' для загрузки значений с хэш-таблицы."

SaveIntegerBJ="Save Integer"
SaveIntegerBJ="Save ",~Value," as ",~Value," of ",~Value," in ",~Hashtable
SaveIntegerBJHint="Используйте 'Хэш-таблица - Загрузить целое число' для загрузки значений с хэш-таблицы."

SaveBooleanBJ="Save Boolean"
SaveBooleanBJ="Save ",~Value," as ",~Value," of ",~Value," in ",~Hashtable
SaveBooleanBJHint="Используйте 'Хэш-таблица - Загрузить логическое' для загрузки значений с хэш-таблицы."

SaveStringBJ="Save String"
SaveStringBJ="Save ",~Value," as ",~Value," of ",~Value," in ",~Hashtable
SaveStringBJHint="Используйте 'Хэш-таблица - Загрузить строку' для загрузки значений с хэш-таблицы."

SavePlayerHandleBJ="Save Player Handle"
SavePlayerHandleBJ="Save Handle Of",~Player," as ",~Value," of ",~Value," in ",~Hashtable
SavePlayerHandleBJHint="Используйте 'Хэш-таблица - Загрузить игрока' для загрузки данного игрока с хэш-таблицы."

SaveWidgetHandleBJ="Save Widget Handle"
SaveWidgetHandleBJ="Save Handle Of",~Widget," as ",~Value," of ",~Value," in ",~Hashtable
SaveWidgetHandleBJHint="Используйте 'Хэш-таблица - Загрузить виджет' для загрузки виджета с хэш-таблицы."

SaveDestructableHandleBJ="Save Destructable Handle"
SaveDestructableHandleBJ="Save Handle Of",~Destructable," as ",~Value," of ",~Value," in ",~Hashtable
SaveDestructableHandleBJHint="Используйте 'Хэш-таблица - Загрузить разрушаемое' для загрузки разрушаемого с хэш-таблицы."

SaveItemHandleBJ="Save Item Handle"
SaveItemHandleBJ="Save Handle Of",~Item," as ",~Value," of ",~Value," in ",~Hashtable
SaveItemHandleBJHint="Используйте 'Хэш-таблица - Загрузить предмет' для загрузки предмета с хэш-таблицы."

SaveUnitHandleBJ="Save Unit Handle"
SaveUnitHandleBJ="Save Handle Of",~Unit," as ",~Value," of ",~Value," in ",~Hashtable
SaveUnitHandleBJHint="Используйте 'Хэш-таблица - Загрузить боевую единицу' для загрузки боевой единицы с хэш-таблицы."

SaveAbilityHandleBJ="Save Ability Handle"
SaveAbilityHandleBJ="Save Handle Of",~Ability," as ",~Value," of ",~Value," in ",~Hashtable
SaveAbilityHandleBJHint="Используйте 'Хэш-таблица - Загрузить способность' для загрузки способности с хэш-таблицы."

SaveTimerHandleBJ="Save Timer Handle"
SaveTimerHandleBJ="Save Handle Of",~Timer," as ",~Value," of ",~Value," in ",~Hashtable
SaveTimerHandleBJHint="Используйте 'Хэш-таблица - Загрузить таймер' для загрузки таймера с хэш-таблицы."

//SaveTriggerRegionHandleBJ="Save Region"
//SaveTriggerRegionHandleBJ="Save Handle Of",~Region," as ",~Value," of ",~Value," in ",~Hashtable
//SaveTriggerRegionHandleBJHint="Use the 'Hashtable - Load Region' actions to load this region from a hashtable."

SaveTriggerHandleBJ="Save Trigger Handle"
SaveTriggerHandleBJ="Save Handle Of",~Trigger," as ",~Value," of ",~Value," in ",~Hashtable
SaveTriggerHandleBJHint="Используйте 'Хэш-таблица - Загрузить триггер' для загрузки триггера с хэш-таблицы."

SaveTriggerConditionHandleBJ="Save Triggercondition Handle"
SaveTriggerConditionHandleBJ="Save Handle Of",~Triggercondition," as ",~Value," of ",~Value," in ",~Hashtable
SaveTriggerConditionHandleBJHint="Используйте 'Хэш-таблица - Загрузить условие триггера' для загрузки условия триггера с хэш-таблицы."

SaveTriggerActionHandleBJ="Save Triggeraction Handle"
SaveTriggerActionHandleBJ="Save Handle Of",~Triggeraction," as ",~Value," of ",~Value," in ",~Hashtable
SaveTriggerActionHandleBJHint="Используйте 'Хэш-таблица - Загрузить действие триггера' для загрузки действия триггера с хэш-таблицы."

SaveTriggerEventHandleBJ="Save Eventid Handle"
SaveTriggerEventHandleBJ="Save Handle Of",~Eventid," as ",~Value," of ",~Value," in ",~Hashtable
SaveTriggerEventHandleBJHint="Используйте 'Хэш-таблица - Загрузить событие триггера' для загрузки события триггера с хэш-таблицы."

SaveForceHandleBJ="Save Force Handle"
SaveForceHandleBJ="Save Handle Of",~Force," as ",~Value," of ",~Value," in ",~Hashtable
SaveForceHandleBJHint="Используйте 'Хэш-таблица - Загрузить группу игроков' для загрузки группы игроков с хэш-таблицы."

SaveGroupHandleBJ="Save Group Handle"
SaveGroupHandleBJ="Save Handle Of",~Group," as ",~Value," of ",~Value," in ",~Hashtable
SaveGroupHandleBJHint="Используйте 'Хэш-таблица - Загрузить отряд' для загрузки отряда с хэш-таблицы."

SaveLocationHandleBJ="Save Location Handle"
SaveLocationHandleBJ="Save Handle Of",~Location," as ",~Value," of ",~Value," in ",~Hashtable
SaveLocationHandleBJHint="Используйте 'Хэш-таблица - Загрузить местоположение' для загрузки местоположения с хэш-таблицы."

SaveRegionHandleBJ="Save Region Handle"
SaveRegionHandleBJ="Save Handle Of",~Region," as ",~Value," of ",~Value," in ",~Hashtable
SaveRegionHandleBJHint="Используйте 'Хэш-таблица - Загрузить область' для загрузки области с хэш-таблицы."

SaveRectHandleBJ="Save Rect Handle"
SaveRectHandleBJ="Save Handle Of",~Rect," as ",~Value," of ",~Value," in ",~Hashtable
SaveRectHandleBJHint="Используйте 'Хэш-таблица - Загрузить расширенную область' для загрузки расширенной области с хэш-таблицы."

SaveBooleanExprHandleBJ="Save Boolexpr Handle"
SaveBooleanExprHandleBJ="Save Handle Of",~Boolexpr," as ",~Value," of ",~Value," in ",~Hashtable
SaveBooleanExprHandleBJHint="Используйте 'Хэш-таблица - Загрузить расширенное логическое значение' для загрузки расширенного логического значения с хэш-таблицы."

//SaveConditionFuncHandleBJ="Save Conditionfunc Handle"
//SaveConditionFuncHandleBJ="Save Handle Of",~Conditionfunc," as ",~Value," of ",~Value," in ",~Hashtable
//SaveConditionFuncHandleBJHint="Use the 'Hashtable - Load Conditionfunc' actions to load this conditionfunc from a hashtable."

//SaveFilterFuncHandleBJ="Save Filterfunc Handle"
//SaveFilterFuncHandleBJ="Save Handle Of",~Filterfunc," as ",~Value," of ",~Value," in ",~Hashtable
//SaveFilterFuncHandleBJHint="Use the 'Hashtable - Load Filterfunc' actions to load this filterfunc from a hashtable."

SaveSoundHandleBJ="Save Sound Handle"
SaveSoundHandleBJ="Save Handle Of",~Sound," as ",~Value," of ",~Value," in ",~Hashtable
SaveSoundHandleBJHint="Используйте 'Хэш-таблица - Загрузить звук' для загрузки звука с хэш-таблицы."

//SaveRaceHandleBJ="Save Race Handle"
//SaveRaceHandleBJ="Save Handle Of",~Race," as ",~Value," of ",~Value," in ",~Hashtable
//SaveRaceHandleBJHint="Use the 'Hashtable - Load Race' actions to load this race from a hashtable."

SaveEffectHandleBJ="Save Effect Handle"
SaveEffectHandleBJ="Save Handle Of",~Effect," as ",~Value," of ",~Value," in ",~Hashtable
SaveEffectHandleBJHint="Используйте 'Хэш-таблица - Загрузить эффект' для загрузки эффекта с хэш-таблицы."

SaveUnitPoolHandleBJ="Save Unitpool Handle"
SaveUnitPoolHandleBJ="Save Handle Of",~Unitpool," as ",~Value," of ",~Value," in ",~Hashtable
SaveUnitPoolHandleBJHint="Используйте 'Хэш-таблица - Загрузить резервную боевую единицу' для загрузки резервной боевой единицы с хэш-таблицы."

SaveItemPoolHandleBJ="Save Itempool Handle"
SaveItemPoolHandleBJ="Save Handle Of",~Itempool," as ",~Value," of ",~Value," in ",~Hashtable
SaveItemPoolHandleBJHint="Используйте 'Хэш-таблица - Загрузить резервный предмет' для загрузки резервного предмета с хэш-таблицы."

SaveQuestHandleBJ="Save Quest Handle"
SaveQuestHandleBJ="Save Handle Of",~Quest," as ",~Value," of ",~Value," in ",~Hashtable
SaveQuestHandleBJHint="Используйте 'Хэш-таблица - Загрузить задание' для загрузки задания с хэш-таблицы."

SaveQuestItemHandleBJ="Save Questitem Handle"
SaveQuestItemHandleBJ="Save Handle Of",~Questitem," as ",~Value," of ",~Value," in ",~Hashtable
SaveQuestItemHandleBJHint="Используйте 'Хэш-таблица - Загрузить требование задания' для загрузки требования задания с хэш-таблицы."

SaveDefeatConditionHandleBJ="Save Defeatcondition Handle"
SaveDefeatConditionHandleBJ="Save Handle Of",~Defeatcondition," as ",~Value," of ",~Value," in ",~Hashtable
SaveDefeatConditionHandleBJHint="Используйте 'Хэш-таблица - Загрузить условие поражения' для загрузки условия поражения с хэш-таблицы."

SaveTimerDialogHandleBJ="Save Timerdialog Handle"
SaveTimerDialogHandleBJ="Save Handle Of",~Timerdialog," as ",~Value," of ",~Value," in ",~Hashtable
SaveTimerDialogHandleBJHint="Используйте 'Хэш-таблица - Загрузить таймер диалога' для загрузки таймера диалога с хэш-таблицы."

SaveLeaderboardHandleBJ="Save Leaderboard Handle"
SaveLeaderboardHandleBJ="Save Handle Of",~Leaderboard," as ",~Value," of ",~Value," in ",~Hashtable
SaveLeaderboardHandleBJHint="Используйте 'Хэш-таблица - Загрузить таблицу рекордов' для загрузки таблицы рекордов с хэш-таблицы."

SaveMultiboardHandleBJ="Save Multiboard Handle"
SaveMultiboardHandleBJ="Save Handle Of",~Multiboard," as ",~Value," of ",~Value," in ",~Hashtable
SaveMultiboardHandleBJHint="Используйте 'Хэш-таблица - Загрузить статистическую таблицу' для загрузки статистической таблицы с хэш-таблицы."

SaveMultiboardItemHandleBJ="Save Multiboarditem Handle"
SaveMultiboardItemHandleBJ="Save Handle Of",~Multiboarditem," as ",~Value," of ",~Value," in ",~Hashtable
SaveMultiboardItemHandleBJHint="Используйте 'Хэш-таблица - Загрузить ячейку статистической таблицы' для загрузки ячейки статистической таблицы с хэш-таблицы."

SaveTrackableHandleBJ="Save Trackable Handle"
SaveTrackableHandleBJ="Save Handle Of",~Trackable," as ",~Value," of ",~Value," in ",~Hashtable
SaveTrackableHandleBJHint="Используйте 'Хэш-таблица - Загрузить трекэбл' для загрузки трекэбла с хэш-таблицы."

SaveGameCacheHandleBJ="Save Gamecache Handle"
SaveGameCacheHandleBJ="Save Handle Of",~Gamecache," as ",~Value," of ",~Value," in ",~Hashtable
SaveGameCacheHandleBJHint="Используйте 'Хэш-таблица - Загрузить кэш игры' для загрузки кэша игры с хэш-таблицы."

SaveDialogHandleBJ="Save Dialog Handle"
SaveDialogHandleBJ="Save Handle Of",~Dialog," as ",~Value," of ",~Value," in ",~Hashtable
SaveDialogHandleBJHint="Используйте 'Хэш-таблица - Загрузить диалог' для загрузки диалога с хэш-таблицы."

SaveButtonHandleBJ="Save Button Handle"
SaveButtonHandleBJ="Save Handle Of",~Button," as ",~Value," of ",~Value," in ",~Hashtable
SaveButtonHandleBJHint="Используйте 'Хэш-таблица - Загрузить кнопку диалога' для загрузки кнопки диалога с хэш-таблицы."

//SaveVersionHandleBJ="Save Version Handle"
//SaveVersionHandleBJ="Save Handle Of",~Version," as ",~Value," of ",~Value," in ",~Hashtable
//SaveVersionHandleBJHint="Use the 'Hashtable - Load Version' actions to load this version from a hashtable."

//SaveItemTypeHandleBJ="Save Itemtype Handle"
//SaveItemTypeHandleBJ="Save Handle Of",~Itemtype," as ",~Value," of ",~Value," in ",~Hashtable
//SaveItemTypeHandleBJHint="Use the 'Hashtable - Load Itemtype' actions to load this itemtype from a hashtable."

SaveTextTagHandleBJ="Save Texttag Handle"
SaveTextTagHandleBJ="Save Handle Of",~Texttag," as ",~Value," of ",~Value," in ",~Hashtable
SaveTextTagHandleBJHint="Используйте 'Хэш-таблица - Загрузить текстовый тег' для загрузки текстового тега с хэш-таблицы."

SaveLightningHandleBJ="Save Lightning Handle"
SaveLightningHandleBJ="Save Handle Of",~Lightning," as ",~Value," of ",~Value," in ",~Hashtable
SaveLightningHandleBJHint="Используйте 'Хэш-таблица - Загрузить молнию' для загрузки молнии с хэш-таблицы."

SaveImageHandleBJ="Save Image Handle"
SaveImageHandleBJ="Save Handle Of",~Image," as ",~Value," of ",~Value," in ",~Hashtable
SaveImageHandleBJHint="Используйте 'Хэш-таблица - Загрузить изображение' для загрузки изображения с хэш-таблицы."

SaveUbersplatHandleBJ="Save Ubersplat Handle"
SaveUbersplatHandleBJ="Save Handle Of",~Ubersplat," as ",~Value," of ",~Value," in ",~Hashtable
SaveUbersplatHandleBJHint="Используйте 'Хэш-таблица - Загрузить текстуру земли' для загрузки текстуры земли с хэш-таблицы."

SaveFogStateHandleBJ="Save Fogstate Handle"
SaveFogStateHandleBJ="Save Handle Of",~Fogstate," as ",~Value," of ",~Value," in ",~Hashtable
SaveFogStateHandleBJHint="Используйте 'Хэш-таблица - Загрузить туман войны' для загрузки тумана войны с хэш-таблицы."

SaveFogModifierHandleBJ="Save Fogmodifier Handle"
SaveFogModifierHandleBJ="Save Handle Of",~Fogmodifier," as ",~Value," of ",~Value," in ",~Hashtable
SaveFogModifierHandleBJHint="Используйте 'Хэш-таблица - Загрузить модификатор видимости' для загрузки модификатора видимости с хэш-таблицы."

FlushParentHashtableBJ="Clear Parent Hashtable"
FlushParentHashtableBJ="Clear ",~Hashtable
FlushParentHashtableBJHint="Очищает все хэш-таблицы."

FlushChildHashtableBJ="Clear Child Hashtable"
FlushChildHashtableBJ="Clear all child hashtables of child ",~Value," in ",~Hashtable
FlushChildHashtableBJHint="Очищает все второстепенные хэш-таблицы в указанной хэш-таблице."


// Hero actions
SelectHeroSkill="Выучить талант"
SelectHeroSkill="Выучить талант для ",~Hero,": ",~Skill
SelectHeroSkillHint="Срабатывает, если герой имеет не менее одного нераспределённого таланта."

SetHeroLevel="Установить уровень"
SetHeroLevel="Установить ",~Hero," уровень героя как ",~Level,", ",~Show/Hide," графику смены уровней"
SetHeroLevelHint=

SetHeroXP="Установить опыт"
SetHeroXP="Установить опыт ",~Hero," на ",~Quantity,", ",~Show/Hide," графику смены уровней"
SetHeroXPHint=

AddHeroXPSwapped="Добавить опыт"
AddHeroXPSwapped="Добавить ",~Quantity," опыта герою ",~Hero,", ",~Show/Hide," графику смены уровней"
AddHeroXPSwappedHint=

SuspendHeroXPBJ="Включить/Выключить получение опыта"
SuspendHeroXPBJ=~Включить/Отключить," получение опыта для ",~Hero
SuspendHeroXPBJHint=

SetPlayerHandicapXPBJ="Установить получение опыта (в процентах)"
SetPlayerHandicapXPBJ="Установить получение опыта героями ",~Player," на ",~Percent,"% для будущих убийств врагов"
SetPlayerHandicapXPBJHint=

ReviveHeroLoc="Воскресить (мгновенно)"
ReviveHeroLoc="Мгновенно воскресить ",~Hero," в ",~Point,", ",~Show/Hide," графику воскрешения"
ReviveHeroLocHint="Воскрешает погибшего героя в определённой точке карты, даже если игрок не имеет алтаря."

ModifyHeroStat="Изменить характеристики героя"
ModifyHeroStat="Изменить ",~Attribute," героя ",~Hero,": ",~Modify," ",~Value
ModifyHeroStatHint=

ModifyHeroSkillPoints="Изменить количество нераспределённых талантов героя"
ModifyHeroSkillPoints="Изменить количество нераспределённых талантов героя ",~Hero,": ",~Modify," ",~Value," баллов"
ModifyHeroSkillPointsHint=

SetReservedLocalHeroButtons="Зарезервировать кнопки героя"
SetReservedLocalHeroButtons="Зарезервировать ",~Number," кнопки героя для локального игрока"
SetReservedLocalHeroButtonsHint="Кнопки, зарезервированные этим действием, не используются героями, управляемыми через совместный контроль боевыми единицами."

UnitAddItemSwapped="Дать предмет герою"
UnitAddItemSwapped="Дать ",~Item," герою ",~Hero
UnitAddItemSwappedHint=

UnitAddItemByIdSwapped="Создать предмет для героя"
UnitAddItemByIdSwapped="Создать ",~Item-Type," и отдать его ",~Hero
UnitAddItemByIdSwappedHint=

UnitRemoveItemSwapped="Выбросить предмет героя"
UnitRemoveItemSwapped="Выбросить ",~Item," героя ",~Hero
UnitRemoveItemSwappedHint="Предмет забирается у героя и помещается на землю рядом с ногами героя."

UnitRemoveItemFromSlotSwapped="Выбросить предмет из инвентаря героя"
UnitRemoveItemFromSlotSwapped="Выбросить предмет из слота ",~Index," героя ",~Hero
UnitRemoveItemFromSlotSwappedHint="Если предмет существует в указанном слоте, он забирается у героя и помещается на землю рядом с ногами героя."

UnitUseItemTarget="Использовать предмет на боевой единице"
UnitUseItemTarget="Приказать ",~Hero," использовать ",~Item," на ",~Unit
UnitUseItemTargetHint=

UnitUseItemPointLoc="Использовать предмет в области"
UnitUseItemPointLoc="Приказать ",~Hero," использовать ",~Item," в ",~Point
UnitUseItemPointLocHint=

UnitUseItemDestructable="Использовать предмет на разрушаемом объекте"
UnitUseItemDestructable="Приказать ",~Hero," использовать ",~Item," на ",~Destructible
UnitUseItemDestructableHint=

UnitUseItem="Использовать предмет"
UnitUseItem="Приказать ",~Hero," использовать ",~Item
UnitUseItemHint=


// Item actions
CreateItemLoc="Создать"
CreateItemLoc="Создать ",~Item," в ",~Point
CreateItemLocHint=

RemoveItem="Удалить"
RemoveItem="Удалить ",~Item
RemoveItemHint=

SetItemVisibleBJ="Показать/Спрятать предмет"
SetItemVisibleBJ=~Show/Hide," ",~Item
SetItemVisibleBJHint="Прячет предметы на местности.  Не влияет на предметы у других юнитов."

SetItemPositionLoc="Передвинуть (мгновенно)"
SetItemPositionLoc="Передвинуть ",~Item," в ",~Point
SetItemPositionLocHint=

SetItemLifeBJ="Установить здоровье"
SetItemLifeBJ="Установить здоровье ",~Item," на ",~Value," единиц
SetItemLifeBJHint=

SetItemCharges="Установить количество зарядов"
SetItemCharges="Установить количество зарядов для ",~Item," в ",~Charges
SetItemChargesHint="Используйте 0 для установки неограниченного заряда."

SetItemInvulnerableBJ="Сделать уязвимым/неуязвимым"
SetItemInvulnerableBJ="Сделать ",~Item," ",~Invulnerable/Vulnerable
SetItemInvulnerableBJHint=

SetItemPawnable="Сделать продаваемым"
SetItemPawnable="Сделать ",~Item," ",~Pawnable/Unpawnable
SetItemPawnableHint="Продаваемый товар может быть продан у торговцев товаром."

SetItemDroppableBJ="Сделать невыбрасываемым"
SetItemDroppableBJ="Сделать ",~Item," ",~Droppable/Undroppable
SetItemDroppableBJHint="Невыбрасываемый предмет не может быть удалён из инвентаря героя после того, как был подобран."

SetItemDropOnDeathBJ="Предмет выбрасывается после смерти героев"
SetItemDropOnDeathBJ="Заставить ",~Item," ",~Drop from/Stay with," героев после смерти"
SetItemDropOnDeathBJHint=

SetItemPlayerBJ="Сменить владельца"
SetItemPlayerBJ="Сменить владельца ",~Item," на ",~Player," и ",~Change/Retain Color
SetItemPlayerBJHint="Не все предметы могут изменять цвет."

SetItemUserData="Установить цену"
SetItemUserData="Установить цену для ",~Item," в размере ",~Index
SetItemUserDataHint=

EnumItemsInRectBJMultiple="Выбрать каждый предмет в области и произвести множественные действия"
EnumItemsInRectBJMultiple="Выбрать каждый предмет в ",~Region," и произвести (действия)"
EnumItemsInRectBJMultipleHint="Используйте 'Выбранный предмет' для ссылки на каждый предмет при его выборе. Работает для всех предметов в регионе, включая скрытые предметы."

EnumItemsInRectBJ="Выбрать каждый предмет в области и произвести действие"
EnumItemsInRectBJ="Выбрать каждый предмет в ",~Region," и произвести ",~Action
EnumItemsInRectBJHint="Используйте 'Выбранный предмет' для ссылки на каждый предмет при его выборе. В этой функции не используются действия ожидания."

// Image actions
CreateImageBJ="Создать"
CreateImageBJ="Создать рисунок ",~Image," размером ",~Size," в ",~Point," с Z = ",~Z," используя тип рисунка ",~Type
CreateImageBJHint="Используйте 'Изображение - Изменить постоянную прорисовку', чтобы перестать показывать это изображение по умолчанию."

DestroyImage="Удалить"
DestroyImage="Удалить ",~Image
DestroyImageHint=

ShowImageBJ="Скрыть/Показать"
ShowImageBJ=~Show/Hide," ",~Image
ShowImageBJHint=

SetImageConstantHeight="Изменить высоту"
SetImageConstantHeight="Изменить высоту ",~Image,", который ",~Включить/Отключить," на ",~Height
SetImageConstantHeightHint=

SetImagePositionBJ="Изменить позицию"
SetImagePositionBJ="Изменить позицию ",~Image," на ",~Position," с Z = ",~Z
SetImagePositionBJHint="Определённая точка используется как левый нижний угол изображения."

SetImageColorBJ="Изменить цвет"
SetImageColorBJ="Изменить Цвет ",~Image," на (",~Red,"%, ",~Green,"%, ",~Blue,"%) с ",~Transparency,"% прозрачностью"
SetImageColorBJHint="Значения цвета - Красный, Зеленый, Синий. 100% прозрачный цвет полностью невидимый."

SetImageRender="Изменить прорисовку"
SetImageRender="Изменить ",~Image,": ",~Включить/Отключить," прорисовку"
SetImageRenderHint=

SetImageRenderAlways="Изменить постоянную прорисовку"
SetImageRenderAlways="Изменить ",~Image,": ",~Включить/Отключить," постоянную прорисовку"
SetImageRenderAlwaysHint=

SetImageAboveWater="Изменить рисунок над водой"
SetImageAboveWater="Изменить ",~Image,": ",~Включить/Отключить," над водой, ",~Включить/Отключить," прозрачность от воды"
SetImageAboveWaterHint=

SetImageType="Изменить тип"
SetImageType="Изменить тип ",~Image," на ",~Type
SetImageTypeHint=


// Leaderboard actions
CreateLeaderboardBJ="Создать"
CreateLeaderboardBJ="Создать таблицу рекордов для ",~Player Group," с названием ",~Title
CreateLeaderboardBJHint="Таблицу рекордов нельзя создать при инициализации Карты. Если название не указано, строка названия не выводится."

DestroyLeaderboardBJ="Удалить"
DestroyLeaderboardBJ="Удалить ",~Leaderboard
DestroyLeaderboardBJHint=

LeaderboardSortItemsBJ="Сортировать"
LeaderboardSortItemsBJ="Сортировать ",~Leaderboard," по ",~Field," в порядке ",~Ascending/Descending
LeaderboardSortItemsBJHint=

LeaderboardDisplayBJ="Скрыть/Показать"
LeaderboardDisplayBJ=~Show/Hide," ",~Leaderboard
LeaderboardDisplayBJHint="Таблицу рекордов нельзя показать при инициализации Карты."

LeaderboardSetLabelBJ="Сменить название"
LeaderboardSetLabelBJ="Сменить название ",~Leaderboard," на ",~Title
LeaderboardSetLabelBJHint=

LeaderboardSetLabelColorBJ="Установить цвет меток"
LeaderboardSetLabelColorBJ="Установить цвет всех меток ",~Leaderboard," на (",~Red,"%, ",~Green,"%, ",~Blue,"%) с ",~Transparency,"% прозрачностью"
LeaderboardSetLabelColorBJHint="Цвета - Красный, Зеленый, Синий. 100% прозрачный - полностью невидимое."

LeaderboardSetValueColorBJ="Установить цвет значений"
LeaderboardSetValueColorBJ="Установить цвет всех значений ",~Leaderboard," на (",~Red,"%, ",~Green,"%, ",~Blue,"%) с ",~Transparency,"% прозрачностью"
LeaderboardSetValueColorBJHint="Цвета - Красный, Зеленый, Синий. 100% прозрачный - полностью невидимое."

LeaderboardSetStyleBJ="Сменить стиль"
LeaderboardSetStyleBJ="Изменить стиль отображения ",~Leaderboard,": ",~Show/Hide," название, ",~Show/Hide," метки, ",~Show/Hide," значения и ",~Show/Hide," иконки"
LeaderboardSetStyleBJHint=

LeaderboardAddItemBJ="Добавить игрока"
LeaderboardAddItemBJ="Добавить ",~Player," в ",~Leaderboard," с меткой ",~Label," и значением ",~Value
LeaderboardAddItemBJHint=

LeaderboardRemovePlayerItemBJ="Удалить игрока"
LeaderboardRemovePlayerItemBJ="Удалить ",~Player," из ",~Leaderboard
LeaderboardRemovePlayerItemBJHint=

LeaderboardSetPlayerItemLabelBJ="Изменить метку игрока"
LeaderboardSetPlayerItemLabelBJ="Изменить метку ",~Player," в ",~Leaderboard," на ",~Label
LeaderboardSetPlayerItemLabelBJHint=

LeaderboardSetPlayerItemLabelColorBJ="Установить цвет метки игрока"
LeaderboardSetPlayerItemLabelColorBJ="Установить цвет метки ",~Player," в ",~Leaderboard," на (",~Red,"%, ",~Green,"%, ",~Blue,"%) с ",~Transparency,"% прозрачностью"
LeaderboardSetPlayerItemLabelColorBJHint="Цвета - Красный, Зеленый, Синий. 100% прозрачный - полностью невидимое."

LeaderboardSetPlayerItemValueBJ="Установить значение игрока"
LeaderboardSetPlayerItemValueBJ="Установить значение ",~Player," в ",~Leaderboard," на ",~Value
LeaderboardSetPlayerItemValueBJHint=

LeaderboardSetPlayerItemValueColorBJ="Установить цвет значения игрока"
LeaderboardSetPlayerItemValueColorBJ="Установить цвет значения игрока ",~Player," в ",~Leaderboard," на (",~Red,"%, ",~Green,"%, ",~Blue,"%) с ",~Transparency,"% прозрачностью"
LeaderboardSetPlayerItemValueColorBJHint="Цвета - Красный, Зеленый, Синий. 100% прозрачный - полностью невидимое."

LeaderboardSetPlayerItemStyleBJ="Изменить стиль для игрока"
LeaderboardSetPlayerItemStyleBJ="Изменить стиль отображения для ",~Player," в ",~Leaderboard,": ",~Show/Hide," метку, ",~Show/Hide," значение и ",~Show/Hide," иконку"
LeaderboardSetPlayerItemStyleBJHint=


// Lightning actions
AddLightningLoc="Создать эффект молнии"
AddLightningLoc="Создать ",~Type," эффект молнии от источника ",~Point," до цели ",~Point
AddLightningLocHint=

DestroyLightningBJ="Убрать эффект молнии"
DestroyLightningBJ="Убрать ",~Lightning
DestroyLightningBJHint=

MoveLightningLoc="Переместить эффект молнии"
MoveLightningLoc="Переместить ",~Lightning," до источника ",~Point," и цели ",~Point
MoveLightningLocHint=

SetLightningColorBJ="Установить цвет эффекта молнии"
SetLightningColorBJ="Установить цвет ",~Lightning," на (",~Red," ",~Green," ",~Blue,") с ",~Alpha," прозрачностью"
SetLightningColorBJHint="Значение цвета - красный, зелёный, синий. Значение цвета и прозрачности должны быть в диапазоне от 0 до 1. Эффект молнии с прозрачностью '0' - полностью невидимый."


// Melee Game actions
MeleeStartingVisibility="Использовать время игровых суток для сражения"
MeleeStartingVisibility="Устанавливает 8 часов утра."
MeleeStartingVisibilityHint=

MeleeStartingHeroLimit="Лимит героев"
MeleeStartingHeroLimit="Устанавливает лимит в 3 героя (для всех игроков)"
MeleeStartingHeroLimitHint=

MeleeGrantHeroItems="Стартовые предметы героев"
MeleeGrantHeroItems="Выдать нанятым героям по свитку возвращения (для всех игроков)"
MeleeGrantHeroItemsHint=

MeleeStartingResources="Установить стартовые ресурсы"
MeleeStartingResources="Установить 500 золота и 150 дерева (для всех игроков)"
MeleeStartingResourcesHint=

MeleeClearExcessUnits="Удаление лишних боевых единиц"
MeleeClearExcessUnits="Удаляет все нейтрально-враждебные и нейтрально-пассивные боевые единицы в радиусе 1024 вокруг каждой использованной стартовой позиции."
MeleeClearExcessUnitsHint=

MeleeStartingUnits="Создание стартовых боевых единиц"
MeleeStartingUnits="Создать главное здание и работников (для всех игроков)"
MeleeStartingUnitsHint=

MeleeStartingAI="Запустить ИИ"
MeleeStartingAI="Запустить ИИ для режима сражения (для всех игроков)"
MeleeStartingAIHint="Игроки должны иметь стартовые боевые единицы и ресурсы до запуска этого действия."

MeleeInitVictoryDefeat="Условия победы/поражения"
MeleeInitVictoryDefeat="Ввести условия победы/поражения (для всех игроков)"
MeleeInitVictoryDefeatHint="Победа присуждается при уничтожении всех вражеских зданий"

MeleeStartingUnitsForPlayer="Создать стартовые боевые единицы для игрока"
MeleeStartingUnitsForPlayer="Создать ",~Race," стартовые юниты для ",~Player," в ",~Point," (",~Include/Exclude," героев)"
MeleeStartingUnitsForPlayerHint="Это действие создаёт те же стартовые боевые единицы, что создаются для режима сражения."

// Multiboard actions
CreateMultiboardBJ="Создать Мультиборд"
CreateMultiboardBJ="Создать мультиборд с ",~Columns," колонками и ",~Rows," рядами, под названием ",~Title
CreateMultiboardBJHint="Статистическая таблица не может быть создана при инициализации."

DestroyMultiboardBJ="Удалить"
DestroyMultiboardBJ="Удалить ",~Multiboard
DestroyMultiboardBJHint="Удаляет статистическую таблицу"

MultiboardDisplayBJ="Показать/Спрятать"
MultiboardDisplayBJ=~Show/Hide," ",~Multiboard
MultiboardDisplayBJHint=

MultiboardAllowDisplayBJ="Показать/Спрятать все Мультибоарды"
MultiboardAllowDisplayBJ=~Show/Hide," все Мультибоарды"
MultiboardAllowDisplayBJHint=

MultiboardMinimizeBJ="Свернуть/Развернуть"
MultiboardMinimizeBJ=~Minimize/Maximize," ",~Multiboard
MultiboardMinimizeBJHint="На свёрнутой статистической таблице будет отображаться только её название."

MultiboardClear="Очистить"
MultiboardClear="Очистить ",~Multiboard
MultiboardClearHint="Удаляет ячейки из статистической таблицы."

MultiboardSetTitleText="Сменить Имя Мультибоарды"
MultiboardSetTitleText="Сменить имя мультибоарды на ",~Multiboard," to ",~Title
MultiboardSetTitleTextHint=

MultiboardSetTitleTextColorBJ="Сменить Цвет Имени Мультибоарда"
MultiboardSetTitleTextColorBJ="Сменить цвет имени мультибоарда ",~Multiboard," на (",~Red,"%, ",~Green,"%, ",~Blue,"%) с ",~Transparency,"% прозрачностью"
MultiboardSetTitleTextColorBJHint="Значения цвета - Красный, Зелёный, Синий. 100% прозрачный цвет полностью невидимый."

MultiboardSetRowCount="Число Рядов"
MultiboardSetRowCount="Изменить число рядов для ",~Multiboard," на ",~Rows
MultiboardSetRowCountHint=

MultiboardSetColumnCount="Число Колонок"
MultiboardSetColumnCount="Изменить число колонок для ",~Multiboard," на ",~Columns
MultiboardSetColumnCountHint=

MultiboardSetItemStyleBJ="Стиль Отображения Ячейки"
MultiboardSetItemStyleBJ="Установить стиль отображения для,  ",~Multiboard," для ячейки в колонке ",~Column,", в ряду ",~Row," на ",~Show/Hide," текст и ",~Show/Hide,"изображения"
MultiboardSetItemStyleBJHint="Если использовать в колонке ноль, то действия затронут все колонки. Тоже самое для рядов."

MultiboardSetItemValueBJ="Текст Ячейки"
MultiboardSetItemValueBJ="Установить текст для,  ",~Multiboard," для ячейки в колонке ",~Column,", в ряду ",~Row," на ",~Text
MultiboardSetItemValueBJHint="Если использовать в колонке ноль, то действия затронут все колонки. Тоже самое для рядов."

MultiboardSetItemColorBJ="Цвет Ячейки"
MultiboardSetItemColorBJ="Установить цвет для,  ",~Multiboard," для ячейки в колонке ",~Column,", в ряду ",~Row," на ( ",~Red,"% ",~Green,"% ",~Blue," %) с ",~Transparency," прозрачность %"
MultiboardSetItemColorBJHint="Если использовать в колонке ноль, то действия затронут все колонки. Тоже самое для рядов. Цвета - Красный, Зелёный, Синий. 100% прозрачный - полностью невидимый."

MultiboardSetItemWidthBJ="Ширина Ячейки"
MultiboardSetItemWidthBJ="Установить ширину для,  ",~Multiboard," для ячейки в колонке ",~Column,", в ряду ",~Row," на ",~Width," % полной ширины экрана"
MultiboardSetItemWidthBJHint="Если использовать в колонке ноль, то действия затронут все колонки. Тоже самое для рядов"

MultiboardSetItemIconBJ="Иконка Ячейки"
MultiboardSetItemIconBJ="Установить изображение для,  ",~Multiboard," для ячейки в колонке ",~Column,", в ряду ",~Row," на ",~Icon File
MultiboardSetItemIconBJHint="Если использовать в колонке ноль, то действия затронут все колонки. Тоже самое для рядов.


// Neutral Building actions
AddResourceAmountBJ="Добавить золота в рудник"
AddResourceAmountBJ="Добавить ",~Quantity," золота в рудник ",~Gold Mine
AddResourceAmountBJHint="Используйте отрицательное значение для уменьшения количества золота."

SetResourceAmount="Установить ресурсы ресурсы рудника"
SetResourceAmount="Установить руднику ",~Gold Mine," ",~Quantity," золота"
SetResourceAmountHint=

BlightGoldMineForPlayer="Проклясть рудник для игрока (мгновенно)"
BlightGoldMineForPlayer="Мгновенно проклясть рудник ",~Gold Mine," для ",~Player
BlightGoldMineForPlayerHint=

WaygateActivateBJ="Заблокировать/Разблокировать портал"
WaygateActivateBJ=~Заблокировать/Разблокировать," ",~Way Gate
WaygateActivateBJHint=

WaygateSetDestinationLocBJ="Определить место назначения портала"
WaygateSetDestinationLocBJ="Определить для ",~портала," место назначения ",~Target
WaygateSetDestinationLocBJHint=

SetAltMinimapIcon="Сменить специальную иконку мини-карты"
SetAltMinimapIcon="Сменить специальную иконку мини-карты на ",~Image
SetAltMinimapIconHint="Картинка, используемая для этого действия, должна быть точно 16x16 пикселей."

UnitSetUsesAltIconBJ="Включить/Выключить специальную иконку мини-карты"
UnitSetUsesAltIconBJ="Переключить специальную иконку мини-карты ",~On/Off," для ",~нейтральное здание
UnitSetUsesAltIconBJHint="Используйте действие 'Нейтральное здание - Сменить специальную иконку мини-карты' управления отображаемой иконкой."

AddItemToStockBJ="Добавить тип предмета (на рынок)"
AddItemToStockBJ="Добавить ",~Item-Type," на ",~Marketplace," с ",~Count," в запасе и максимальным запасом ",~Max
AddItemToStockBJHint="Влияет лишь на здание, которое имеет способность 'Продать предметы'."

AddItemToAllStock="Добавить тип предмета (на все рынки)"
AddItemToAllStock="Добавить ",~Item-Type," на все рынки с ",~Count," в запасе и максимальным запасом ",~Max
AddItemToAllStockHint="Влияет на все здания, которые имеют способность 'Продать предметы'."

AddUnitToStockBJ="Добавить тип боевой единицы (на рынок)"
AddUnitToStockBJ="Добавить ",~Unit-Type," на ",~Marketplace," с ",~Count," в запасе и максимальным запасом ",~Max
AddUnitToStockBJHint="Влияет лишь на здания, которые имеют способность 'Продать боевые единицы'."

AddUnitToAllStock="Добавить тип боевой единицы (на все рынки)"
AddUnitToAllStock="Добавить ",~Unit-Type," на все рынки с ",~Count," в запасе и максимальным запасом ",~Max
AddUnitToAllStockHint="Влияет на все здания, которые имеют способность 'Продать боевые единицы'."

RemoveItemFromStockBJ="Удалить тип предмета (с рынка)"
RemoveItemFromStockBJ="Удалить ",~Item-Type," с ",~Marketplace
RemoveItemFromStockBJHint="Влияет лишь на здание, которое имеет способность 'Продать предметы'."

RemoveItemFromAllStock="Удалить тип предмета (со всех рынков)"
RemoveItemFromAllStock="Удалить ",~Item-Type," со всех рынков"
RemoveItemFromAllStockHint="Влияет на все здания, которые имеют способность 'Продать предметы'."

RemoveUnitFromStockBJ="Удалить тип боевой единицы (с рынка)"
RemoveUnitFromStockBJ="Удалить ",~Unit-Type," с ",~Marketplace
RemoveUnitFromStockBJHint="Влияет лишь на здания, которые имеют способность 'Продать боевые единицы'."

RemoveUnitFromAllStock="Удалить тип боевой единицы (со всех рынков)"
RemoveUnitFromAllStock="Удалить ",~Unit-Type," со всех рынков"
RemoveUnitFromAllStockHint="Влияет на все здания, которые имеют способность 'Продать боевые единицы'."

SetItemTypeSlots="Ограничить слоты предметов (на рынке)"
SetItemTypeSlots="Ограничить ",~Marketplace," до ",~Quantity," слотов предметов"
SetItemTypeSlotsHint="Влияет лишь на здание, которое имеет способность 'Продать предметы'."

SetAllItemTypeSlots="Ограничить слоты предметов (на всех рынках)"
SetAllItemTypeSlots="Ограничить все рынки до ",~Quantity," слотов предметов"
SetAllItemTypeSlotsHint="Влияет на все здания, которые имеют способность 'Продать предметы'."

SetUnitTypeSlots="Ограничить слоты боевых единиц (на рынке)"
SetUnitTypeSlots="Ограничить ",~Marketplace," до ",~Quantity," слотов боевых единиц"
SetUnitTypeSlotsHint="Влияет лишь на здания, которые имеют способность 'Продать боевые единицы'."

SetAllUnitTypeSlots="Ограничить слоты боевых единиц (на всех рынках)"
SetAllUnitTypeSlots="Ограничить слоты боевых единиц до ",~Quantity," для всех рынков"
SetAllUnitTypeSlotsHint="Влияет на все здания, которые имеют способность 'Продать боевые единицы'."


// Player actions
SetPlayerState="Установить свойство"
SetPlayerState="Установить ",~Player," ",~Property," как ",~Value
SetPlayerStateHint=

AdjustPlayerStateBJ="Добавить свойство"
AdjustPlayerStateBJ="Добавить ",~Value," к ",~Player," ",~Property
AdjustPlayerStateBJHint="Используйте отрицательное значение для уменьшения."

SetPlayerFlagBJ="Флаг игрока"
SetPlayerFlagBJ="Переключить ",~Player Flag," ",~On/Off," для ",~Player
SetPlayerFlagBJHint=

SetPlayerTaxRateBJ="Установить налог от доходов одного игрока в пользу другого"
SetPlayerTaxRateBJ="Установить налог в ",~Rate,"% от добычи ",~Resource," игроком ",~Player," в пользу ",~Player
SetPlayerTaxRateBJHint=

EnableCreepSleepBJ="Установить сон для всех нейтрально-враждебных"
EnableCreepSleepBJ=~Включить/Выключить," сон для всех нейтрально-враждебных"
EnableCreepSleepBJHint="Влияет на ночной сон, а не на магический сон."

SetPlayerAllianceStateBJ="Заключить союз"
SetPlayerAllianceStateBJ="Заставить ",~Player," считать ",~Player," как ",~Alliance Setting
SetPlayerAllianceStateBJHint=

SetPlayerAllianceBJ="Определить аспекты союза"
SetPlayerAllianceBJ="Для ",~Player,", переключить ",~Alliance Type," ",~On/Off," в отношении ",~Player
SetPlayerAllianceBJHint=

SetPlayerAbilityAvailableBJ="Включить/Выключить способность"
SetPlayerAbilityAvailableBJ=~Включить/Отключить," ",~Ability," для ",~Player
SetPlayerAbilityAvailableBJHint=

SetPlayerUnitAvailableBJ="Установить доступность подготовки/строительства боевой единицы"
SetPlayerUnitAvailableBJ="Сделать ",~Unit-Type," ",~Available/Unavailable," для подготовки/строительства игроком ",~Player
SetPlayerUnitAvailableBJHint="Определяет, может ли тип боевой единицы быть подготовлен или построен игроком."

SetPlayerUnitMaxAllowed="Ограничить найм/строительство боевой единицы"
SetPlayerUnitMaxAllowed="Ограничить найм/строительство ",~Unit-Type," до ",~Limit," для ",~Player
SetPlayerUnitMaxAllowedHint="Лимит -1 разрешает неограниченный найм данной боевой единицы. Лимит 0 делает данную боевую единицу недоступной для найма."

SetPlayerMaxHeroesAllowed="Ограничить подготовку героев"
SetPlayerMaxHeroesAllowed="Ограничить подготовку героев до ",~Limit," для ",~Player
SetPlayerMaxHeroesAllowedHint="Лимит -1 разрешает неограниченный найм героев. Лимит 0 делает героев недоступными для найма."

SetPlayerTechResearchedSwap="Установить текущий уровень исследования"
SetPlayerTechResearchedSwap="Установить текущий уровень исследования ",~Tech," для ",~Level," для ",~Player
SetPlayerTechResearchedSwapHint="Используйте 0 или 1 для простого исследования или 0..3 для модернизации в три стадии. Исследование не может быть не выучено через это действие."

SetPlayerTechMaxAllowedSwap="Установить максимальный уровень исследования"
SetPlayerTechMaxAllowedSwap="Установить максимальный уровень исследования ",~Tech," для ",~Level," для ",~Player
SetPlayerTechMaxAllowedSwapHint="Используйте 0 или 1 для простого исследования или 0..3 для модернизации в три стадии."

SetPlayerColorBJ="Изменить цвет"
SetPlayerColorBJ="Изменить цвет ",~Player," на ",~Color,", ",~Changing/Retaining color," существующих юнитов"
SetPlayerColorBJHint=

SetPlayerHandicapBJ="Установить фору здоровья"
SetPlayerHandicapBJ="Установить ",~Player," фору здоровья как ",~Percent,"%"
SetPlayerHandicapBJHint=

SetPlayerOnScoreScreenBJ="Показать/Спрятать экран счёта"
SetPlayerOnScoreScreenBJ=~Show/Hide," ",~Player," экран счёта после игры"
SetPlayerOnScoreScreenBJHint=

SetPlayerName="Установить имя"
SetPlayerName="Установить имя ",~Player," как ",~Name
SetPlayerNameHint=


// Player Group actions
ForForceMultiple="Выбрать каждого игрока в группе игроков и произвести множественные действия"
ForForceMultiple="Выбрать каждого игрока в ",~Player Group," и произвести (Действия)"
ForForceMultipleHint="Используйте 'Выбранный игрок' для ссылки на каждого игрока при его/её выборе. Действия ожидания не используются в этой функции. Добавьте действия к этой функции на главном экране."

ForForce="Выбрать каждого игрока в группе игроков и произвести действие"
ForForce="Выбрать каждого игрока в ",~Player Group," и произвести ",~Action
ForForceHint="Используйте 'Выбранный игрок' для ссылки на каждого игрока при его/её выборе. Действия ожидания не используются в этой функции."

ForceAddPlayerSimple="Добавить игрока"
ForceAddPlayerSimple="Добавить ",~Player," в ",~Player Group
ForceAddPlayerSimpleHint="Добавляет игрока в переменную Группы игроков.  Не влияет на самого игрока."

ForceRemovePlayerSimple="Удалить игрока"
ForceRemovePlayerSimple="Удалить ",~Player," из ",~Player Group
ForceRemovePlayerSimpleHint="Удаляет игрока из переменной Группы игроков.  Не влияет на самого игрока."

ForceClear="Очистить"
ForceClear="Удалить всех игроков из ",~Player Group
ForceClearHint="Удаляет всех игроков из переменной Группы игроков.  Не влияет на самих игроков."

SetForceAllianceStateBJ="Заключить союз"
SetForceAllianceStateBJ="Заставить ",~Player," считать ",~Player," как ",~Alliance Setting
SetForceAllianceStateBJHint="Заметьте, что слоты нейтральных игроков не могут разделять их видение."


// Quest actions
QuestMessageBJ="Сообщение Задания"
QuestMessageBJ="Показать ",~Player Group,": ",~Quest Message Type," с сообщением ",~Message
QuestMessageBJHint=

CreateQuestBJ="Создать задание"
CreateQuestBJ="Создать ",~Quest Type," задание с названием ",~Title," и описанием ",~Description,", используя путь для иконки ",~Icon Path
CreateQuestBJHint=

DestroyQuestBJ="Удалить задание"
DestroyQuestBJ="Удалить ",~Quest
DestroyQuestBJHint="Удалённые задания исчезают из журнала заданий."

QuestSetEnabledBJ="Включить/Выключить задание"
QuestSetEnabledBJ=~Enable/Disable," ",~Quest
QuestSetEnabledBJHint="Выключенные задания не отображаются в журнале заданий."

QuestSetCompletedBJ="Отметить задание как выполненное"
QuestSetCompletedBJ="Пометить ",~Quest," как ",~Completed/Incomplete
QuestSetCompletedBJHint=

QuestSetFailedBJ="Пометить задание как проваленное"
QuestSetFailedBJ="Пометить ",~Quest," как ",~Failed/Not Failed
QuestSetFailedBJHint=

QuestSetDiscoveredBJ="Пометить задание как полученное"
QuestSetDiscoveredBJ="Пометить ",~Quest," как ",~Discovered/Undiscovered
QuestSetDiscoveredBJHint=

QuestSetTitleBJ="Сменить название задания"
QuestSetTitleBJ="Сменить название ",~Quest," на ",~Title
QuestSetTitleBJHint=

QuestSetDescriptionBJ="Сменить описание задания"
QuestSetDescriptionBJ="Сменить описание ",~Quest," на ",~Description
QuestSetDescriptionBJHint=

CreateQuestItemBJ="Создать требование задания"
CreateQuestItemBJ="Создать требование задания ",~Quest," с описанием ",~Description
CreateQuestItemBJHint=

QuestItemSetCompletedBJ="Пометить требование задания как выполненное"
QuestItemSetCompletedBJ="Пометить ",~Quest Requirement," как ",~Completed/Incomplete
QuestItemSetCompletedBJHint=

QuestItemSetDescriptionBJ="Сменить описание требования задания"
QuestItemSetDescriptionBJ="Сменить описание ",~Quest Requirement," на ",~Description
QuestItemSetDescriptionBJHint=

CreateDefeatConditionBJ="Создать условие поражения"
CreateDefeatConditionBJ="Создать условие поражения с описанием ",~Description
CreateDefeatConditionBJHint="Условия поражения отображаются для каждого задания."

DestroyDefeatConditionBJ="Удалить условие поражения"
DestroyDefeatConditionBJ="Удалить ",~Defeat Condition
DestroyDefeatConditionBJHint="Удаленные условия поражения не отображаются в журнале задания."

DefeatConditionSetDescriptionBJ="Изменить описание условия поражения"
DefeatConditionSetDescriptionBJ="Изменить описание ",~Defeat Condition," на ",~Description
DefeatConditionSetDescriptionBJHint=

FlashQuestDialogButtonBJ="Показать диалоговую кнопку задания"
FlashQuestDialogButtonBJ="Показать диалоговую кнопку задания"
FlashQuestDialogButtonBJHint=


// Region actions
MoveRectToLoc="Переместить область"
MoveRectToLoc="Переместить ",~Region," в точку ",~Point
MoveRectToLocHint="Не срабатывает, если указанная область не записана в переменной."


// Selection actions
ClearSelectionForPlayer="Очистить выделение для игрока"
ClearSelectionForPlayer="Очистить выделение для ",~Player
ClearSelectionForPlayerHint="Принуждает игрока отменить выделение всех боевых единиц."

SelectGroupForPlayerBJ="Выбрать группу боевых единиц для игрока"
SelectGroupForPlayerBJ="Выбрать ",~Unit Group," для ",~Player
SelectGroupForPlayerBJHint="Принуждает игрока отменить выделение всех боевых единиц и выделить до 12 боевых единиц из любой группы боевых единиц."

SelectUnitForPlayerSingle="Выбрать боевую единицу для игрока"
SelectUnitForPlayerSingle="Выбрать ",~Unit," для ",~Player
SelectUnitForPlayerSingleHint="Принуждает игрока отменить выделение всех боевых единиц и выделить лишь эту боевую единицу."

SelectUnitAddForPlayer="Добавить боевую единицу к выбору для игрока"
SelectUnitAddForPlayer="Добавить ",~Unit," к выбору для ",~Player
SelectUnitAddForPlayerHint="Принуждает игрока выделить эту боевую единицу в дополнение ко всем уже выделенным ранее."

SelectUnitRemoveForPlayer="Удалить боевую единицу из выбора для игрока"
SelectUnitRemoveForPlayer="Удалить ",~Unit," из выбора для ",~Player
SelectUnitRemoveForPlayerHint="Принуждает игрока отменить выделение этой боевой единицы, сохраняя при этом выделение остальных боевых единиц."

ClearSelection="Очистить выделение"
ClearSelection="Очистить выделение"
ClearSelectionHint="Отменяет выделение всех боевых единиц."

SelectGroupBJ="Выбрать отряд"
SelectGroupBJ="Выбрать ",~Unit Group
SelectGroupBJHint="Отменяет выделение всех боевых единиц и выделяет до 12 боевых единиц из указанного отряда."

SelectUnitSingle="Выбрать боевую единицу"
SelectUnitSingle="Выбрать ",~Unit
SelectUnitSingleHint="Отменяет выделение всех боевых единиц и выделяет лишь эту боевую единицу."

SelectUnitAdd="Добавить боевую единицу"
SelectUnitAdd="Добавить ",~Unit," к выбранным"
SelectUnitAddHint="Выделяет эту боевую единицу в дополнение ко всем уже выделенным ранее."

SelectUnitRemove="Удалить боевую единицу из выбора"
SelectUnitRemove="Удалить ",~Unit," из выбора"
SelectUnitRemoveHint="Отменяет выделение этой боевой единицы, сохраняя выделение всех остальных выделенных боевых единиц."


// Sound actions
PlaySoundBJ="Воспроизвести звук"
PlaySoundBJ="Воспроизвести ",~Sound
PlaySoundBJHint="Звуки не могут воспроизводиться при инициализации карты. Используйте Звуковой Редактор для создания звуковых переменных. Для воспроизведения 3D-звуков требуется позиционирование."

PlaySoundAtPointBJ="Воспроизвести звук в точке"
PlaySoundAtPointBJ="Воспроизвести ",~3D Sound," на ",~Volume,"% громкости, расположенный в ",~Point," с Z смещением ",~Z
PlaySoundAtPointBJHint="Звуки не могут воспроизводиться при инициализации карты. Данная функция касается лишь звуков, имеющих флажок '3D-звук', поставленный в Звуковом Редакторе."

PlaySoundOnUnitBJ="Воспроизвести звук на боевой единице"
PlaySoundOnUnitBJ="Воспроизвести ",~3D Sound," на ",~Volume,"% громкости, приложенный к ",~Unit
PlaySoundOnUnitBJHint="Звуки не могут воспроизводиться при инициализации карты. Данная функция касается лишь звуков, имеющих флажок '3D-звук', поставленный в Звуковом Редакторе."

PlaySoundFromOffsetBJ="Воспроизвести звук не с начала"
PlaySoundFromOffsetBJ="Воспроизвести ",~Sound," на ",~Volume,"% громкости, пропуская первые ",~Offset," секунд"
PlaySoundFromOffsetBJHint="Звуки не могут воспроизводиться при инициализации карты. Эта функция не подходит для 3D-звуков."

StopSoundBJ="Остановить звук"
StopSoundBJ="Остановить ",~Sound," ",~After Fading/Immediately
StopSoundBJHint=

KillSoundWhenDoneBJ="Удалить звук"
KillSoundWhenDoneBJ="Удалить",~Sound
KillSoundWhenDoneBJHint="Если звук все ещё играет, он будет удалён при завершении воспроизведения."

SetSoundVolumeBJ="Установить громкость звука"
SetSoundVolumeBJ="Установить громкость ",~Sound," как ",~Volume,"%"
SetSoundVolumeBJHint=

SetSoundOffsetBJ="Перейти к указанному отрезку воспроизведения звука"
SetSoundOffsetBJ="Перейти к ",~Offset," секунд от начала ",~Sound
SetSoundOffsetBJHint="Применять нужно лишь на звуках, которые сейчас воспроизводятся.  Не следует использовать на 3D-звуках."

SetSoundDistanceCutoffBJ="Установить дистанцию среза звука"
SetSoundDistanceCutoffBJ="Установить дистанцию среза ",~Sound," как ",~Distance
SetSoundDistanceCutoffBJHint=

SetSoundPitchBJ="Установить высоту звука"
SetSoundPitchBJ="Установить высоту ",~Sound," как ",~Pitch
SetSoundPitchBJHint=

AttachSoundToUnitBJ="Прикрепить 3D-звук к боевой единице"
AttachSoundToUnitBJ="Прикрепить ",~3D Sound," к ",~Unit
AttachSoundToUnitBJHint="Применять необходимо лишь к звукам, на которых в Звуковом Редакторе был поставлен флажок '3D-звук'."

SetSoundPositionLocBJ="Установить позицию 3D-звука"
SetSoundPositionLocBJ="Установить позицию ",~3D Sound," как ",~Point," с Z смещением ",~Z
SetSoundPositionLocBJHint="Применять необходимо лишь к звукам, на которых в Звуковом Редакторе был поставлен флажок '3D-звук'."

SetSoundDistances="Установить дистанции 3D-звука"
SetSoundDistances="Установить ",~3D Sound," дистанции как ",~Distance," минимум и ",~Distance," максимум"
SetSoundDistancesHint="Применять необходимо лишь к звукам, на которых в Звуковом Редакторе был поставлен флажок '3D-звук'."

SetStackedSoundBJ="Добавить/Удалить 3D-звук по области"
SetStackedSoundBJ=~Add/Remove," ",~3D Sound," по ",~Region
SetStackedSoundBJHint="Применять необходимо лишь к звукам, на которых в Звуковом Редакторе был поставлен флажок '3D-звук'."

SetAmbientDaySound="Использовать дневную тему окружения"
SetAmbientDaySound="Использовать ",~Theme," дневную тему окружения"
SetAmbientDaySoundHint=

SetAmbientNightSound="Использовать ночную тему окружения"
SetAmbientNightSound="Использовать ",~Theme," ночную тему окружения"
SetAmbientNightSoundHint=

EnableDawnDusk="Включить/Выключить звуки рассвета и заката"
EnableDawnDusk=~Включить/Отключить," звуки рассвета и заката"
EnableDawnDuskHint=

SetMapMusicIndexedBJ="Установить музыкальный список (Используя определённую начальную композицию)"
SetMapMusicIndexedBJ="Установить музыкальный список как ",~Music,", начиная с песни ",~Index
SetMapMusicIndexedBJHint="Устанавливает список музыки для использования в конце текущей песни.  Играющая в текущий момент музыка не останавливается."

SetMapMusicRandomBJ="Определить музыкальный список (Используя случайную начальную композицию)"
SetMapMusicRandomBJ="Установить музыкальный список как ",~Music,", начиная со случайной песни"
SetMapMusicRandomBJHint="Устанавливает список музыки для использования в конце текущей песни.  Играющая в текущий момент музыка не останавливается."

ClearMapMusicBJ="Очистить музыкальный список"
ClearMapMusicBJ="Очистить музыкальный список"
ClearMapMusicBJHint="Очистка музыкального списка приведет к остановке музыки после конца играющей сейчас музыки."

PlayMusicBJ="Воспроизвести музыку"
PlayMusicBJ="Воспроизвести ",~Music
PlayMusicBJHint=

PlayMusicExBJ="Воспроизвести музыку с указанного отрезка композиции"
PlayMusicExBJ="Воспроизводить ",~Music,", пропуская первые ",~Offset," секунд и плавно увеличивая громкость через ",~Fade Time," секунд"
PlayMusicExBJHint=

PlayThematicMusicBJ="Воспроизвести музыкальную тему"
PlayThematicMusicBJ="Воспроизвести ",~Music Theme
PlayThematicMusicBJHint="Музыкальная тема будет проиграна один раз, затем возобновляется музыка игры."

PlayThematicMusicExBJ="Воспроизвести музыкальную тему с указанного отрезка"
PlayThematicMusicExBJ="Воспроизвести ",~Music Theme,", пропуская первые ",~Offset," секунд"
PlayThematicMusicExBJHint="Музыкальная тема будет проиграна один раз, затем возобновляется музыка игры."

EndThematicMusicBJ="Остановить музыкальную тему"
EndThematicMusicBJ="Остановить играющую в данный момент музыкальную тему"
EndThematicMusicBJHint=

StopMusicBJ="Остановить музыку"
StopMusicBJ="Остановить музыку ",~After Fading/Immediately
StopMusicBJHint=

ResumeMusicBJ="Возобновить музыку"
ResumeMusicBJ="Возобновить музыку"
ResumeMusicBJHint=

SetMusicVolumeBJ="Установить громкость музыки"
SetMusicVolumeBJ="Установить громкость музыки ",~Volume,"%"
SetMusicVolumeBJHint=

SetMusicOffsetBJ="Перейти к указанному отрезку музыки"
SetMusicOffsetBJ="Перейти к ",~Offset," секунд от начала текущей музыки"
SetMusicOffsetBJHint=

SetThematicMusicOffsetBJ="Перейти к указанному отрезку музыкальной темы"
SetThematicMusicOffsetBJ="Перейти к ",~Offset," секунде от начала текущей музыкальной темы"
SetThematicMusicOffsetBJHint=

VolumeGroupSetVolumeBJ="Установить громкость канала"
VolumeGroupSetVolumeBJ="Установить ",~Volume Channel," как ",~Volume,"%"
VolumeGroupSetVolumeBJHint=

SetCineModeVolumeGroupsBJ="Установить громкость всех каналов для кинематографа"
SetCineModeVolumeGroupsBJ="Установить громкость всех каналов для кинематографа"
SetCineModeVolumeGroupsBJHint="Используются те же настройки канала громкости как и в действии 'Кинематограф - Кинематографический режим'."

SetSpeechVolumeGroupsBJ="Установить громкость всех каналов для речи"
SetSpeechVolumeGroupsBJ="Установить громкость всех каналов для речи"
SetSpeechVolumeGroupsBJHint=

VolumeGroupResetBJ="Сбросить громкость всех каналов"
VolumeGroupResetBJ="Сбросить громкость всех каналов до 100%"
VolumeGroupResetBJHint=


// Special Effect actions
AddSpecialEffectLocBJ="Создать спецэффект в точке"
AddSpecialEffectLocBJ="Создать спецэффект в ",~Point,", используя файл ",~Model File
AddSpecialEffectLocBJHint=

AddSpecialEffectTargetUnitBJ="Создать спецэффект на боевой единице"
AddSpecialEffectTargetUnitBJ="Создать спецэффект, прикреплённый к ",~Attachment Point," ",~Unit," используя файл ",~Model File
AddSpecialEffectTargetUnitBJHint="overhead - над головой, head - на голове, chest - грудь, hand - рука, weapon - оружие, origin - возле ног, foot - нога, *left, *right"

DestroyEffectBJ="Удалить спецэффект"
DestroyEffectBJ="Удалить ",~Special Effect
DestroyEffectBJHint=


//Clear handle=================================================================
RemoveLocation="Удалить локацию" 
RemoveLocation="Удалить ",~Location
RemoveLocationHint=

DestroyEffect="Удалить спецэффект" 
DestroyEffect="Удалить ",~Special Effect
DestroyEffectHint=

CreateUnitAtLoc="Создать юнит"
CreateUnitAtLoc="Создать для",~Player,"юнита",~Unit,"в точке",~Point,"поворот на",~Direction,
CreateUnitAtLocHint=

// Trigger actions
DisableTrigger="Выключить триггер"
DisableTrigger="Выключить триггер ",~Trigger
DisableTriggerHint="Не прерывает текущие действия триггера, но предотвращает будущие срабатывания триггера."

EnableTrigger="Включить триггер"
EnableTrigger="Включить триггер ",~Trigger
EnableTriggerHint="Включает выключенный триггер."

ConditionalTriggerExecute="Выполнить действия триггера (проверив условия)"
ConditionalTriggerExecute="Выполнить действия ",~Trigger,", проверив его условия"
ConditionalTriggerExecuteHint="Выполняет действия триггера, если его условия истинны."

TriggerExecute="Выполнить действия триггера (игнорируя условия)"
TriggerExecute="Выполнить действия триггера ",~Trigger,", игнорируя его условия"
TriggerExecuteHint="Выполняет действия триггера, игнорируя при этом его события и условия."

QueuedTriggerAddBJ="Добавить триггер в очередь триггеров"
QueuedTriggerAddBJ="Добавить ",~Trigger," в очередь триггеров (",~Checking/Ignoring," условия)"
QueuedTriggerAddBJHint="Триггеры, добавленные в очередь триггера, обрабатываются по одному за раз. Добавляемые таким образом триггеры должны удалять себя, используя 'Триггер - Удалить из очереди триггера'."

QueuedTriggerRemoveBJ="Удалить триггер из очереди триггеров"
QueuedTriggerRemoveBJ="Удалить ",~Trigger," из очереди триггеров"
QueuedTriggerRemoveBJHint="Если триггер уже запущен через очередь триггера, его удаление позволит запуститься следующему триггеру в очереди триггера, но не остановит функционирование самого триггера."

QueuedTriggerClearBJ="Очистить очередь триггеров"
QueuedTriggerClearBJ="Очистить очередь триггеров"
QueuedTriggerClearBJHint="Удаляет все триггеры из очереди триггеров."

QueuedTriggerClearInactiveBJ="Очистить очередь триггеров от ожидающих триггеров"
QueuedTriggerClearInactiveBJ="Убрать все ожидающие триггеры из очереди триггеров"
QueuedTriggerClearInactiveBJHint="Удаляет все ожидающие триггеры из очереди триггеров. Если триггер в данный момент находится в очереди, он не будет удалён из неё."

AddTriggerEvent="Добавить в триггер событие"
AddTriggerEvent="Добавить в ",~Trigger," событие ",~Event
AddTriggerEventHint=


// Unit actions
CreateNUnitsAtLoc="Создать боевые единицы с заданным углом поворота"
CreateNUnitsAtLoc="Создать ",~Number," ",~Unit," для ",~Player," в ",~Point," с поворотом на ",~Direction," градусов"
CreateNUnitsAtLocHint="Угол поворота вводится в градусах, где 0 - восток, 90 - север, 180 - запад, 270 - юг."

CreateNUnitsAtLocFacingLocBJ="Создать боевые единицы с заданным направлением"
CreateNUnitsAtLocFacingLocBJ="Создать ",~Number," ",~Unit," для ",~Player," в ",~Point," с направлением на ",~Point
CreateNUnitsAtLocFacingLocBJHint="Используйте 'Последнюю созданную группу боевых единиц' для ссылки на эти созданные боевые единицы. 'Последняя созданная боевая единица' отсылает к последнему из этих боевых единиц."

CreateCorpseLocBJ="Создать труп"
CreateCorpseLocBJ="Создать труп ",~Unit," для ",~Player," в ",~Point
CreateCorpseLocBJHint="Не все боевые единицы имеют формы трупов. Используйте 'Последняя созданная боевая единица' для ссылки на эту боевую единицу."

CreatePermanentCorpseLocBJ="Создать постоянный труп"
CreatePermanentCorpseLocBJ="Создать постоянный труп ",~Style," ",~Unit," для ",~Player," в ",~Point," с поворотом на ",~Direction," градусов"
CreatePermanentCorpseLocBJHint="Трупы из плоти будут часто казаться скелетными в первые 8 секунд своего существования."

KillUnit="Убить"
KillUnit="Убить ",~Unit
KillUnitHint=

RemoveUnit="Удалить"
RemoveUnit="Удалить ",~Unit," из игры"
RemoveUnitHint="Не оставляет трупов. Если применить на герое, этого героя нельзя воскресить."

ExplodeUnitBJ="Взорвать"
ExplodeUnitBJ="Взорвать ",~Unit
ExplodeUnitBJHint=

ReplaceUnitBJ="Заменить"
ReplaceUnitBJ="Заменить ",~Unit," на ",~Unit-Type," используя ",~Property Usage," здоровье и ману"
ReplaceUnitBJHint="Используйте 'Последняя созданная боевая единица' для ссылки на заменённую боевую единицу. Все переменные, ссылающиеся на старую боевую единицу, надо будет обновить."

ShowUnitHide="Спрятать"
ShowUnitHide="Спрятать ",~Unit
ShowUnitHideHint="Используйте 'Показать боевую единицу' чтобы увидеть боевую единицу. Скрытые боевые единицы не видны в очередях 'Боевые единицы в области'."

ShowUnitShow="Показать"
ShowUnitShow="Показать ",~Unit
ShowUnitShowHint="Используйте 'Спрятать боевую единицу' чтобы спрятать боевую единицу. Спрятанные боевые единицы не видны в очередях 'Боевые единицы в области'."

SetUnitColor="Изменить цвет"
SetUnitColor="Изменить цвет ",~Unit," на ",~Color
SetUnitColorHint=

SetUnitOwner="Сменить владельца"
SetUnitOwner="Сменить владельца ",~Unit," на ",~Player," и ",~Change/Retain Color
SetUnitOwnerHint=

UnitShareVisionBJ="Общий обзор"
UnitShareVisionBJ=~Grant/Deny," общий обзор ",~Unit," игроку ",~Player
UnitShareVisionBJHint=

SetUnitPositionLoc="Переместить боевую единицу (мгновенно)"
SetUnitPositionLoc="Мгновенно переместить ",~Unit," в ",~Point
SetUnitPositionLocHint=

SetUnitPositionLocFacingBJ="Переместить боевую единицу и повернуть (мгновенно)"
SetUnitPositionLocFacingBJ="Мгновенно переместить ",~Unit," в ",~Point," с углом поворота на ",~Direction," градусов"
SetUnitPositionLocFacingBJHint="Угол поворота задаётся в градусах, где 0 - восток, 90 - север, 180 - запад, 270 - юг."

SetUnitPositionLocFacingLocBJ="Переместить боевую единицу и повернуть на заданную точку (мгновенно)"
SetUnitPositionLocFacingLocBJ="Мгновенно переместить ",~Unit," в ",~Point," и повернуть на ",~Point
SetUnitPositionLocFacingLocBJHint=

SetUnitRallyPoint="Установить точку сбора"
SetUnitRallyPoint="Установить для ",~Unit," точку сбора в ",~Point
SetUnitRallyPointHint=

SetUnitRallyUnit="Установить точку сбора на боевой единице"
SetUnitRallyUnit="Установить для ",~Unit," точку сбора на ",~Unit
SetUnitRallyUnitHint=

SetUnitRallyDestructable="Установить точку сбора на разрушаемом объекте"
SetUnitRallyDestructable="Установить точку Сбора для ",~Unit," к ",~Destructible
SetUnitRallyDestructableHint=

SetUnitLifePercentBJ="Установить здоровье (в процентах)"
SetUnitLifePercentBJ="Установить здоровье ",~Unit," на ",~Percent,"% от нормы"
SetUnitLifePercentBJHint=

SetUnitManaPercentBJ="Установить ману (в процентах)"
SetUnitManaPercentBJ="Установить ману ",~Unit," на ",~Percent,"% от нормы"
SetUnitManaPercentBJHint=

SetUnitLifeBJ="Установить здоровье (значение)"
SetUnitLifeBJ="Установить здоровье ",~Unit," на ",~Value," единиц
SetUnitLifeBJHint=

SetUnitManaBJ="Установить ману (значение)"
SetUnitManaBJ="Установить ману ",~Unit," на ",~Value единиц
SetUnitManaBJHint=

SetUnitInvulnerable="Сделать уязвимым/неуязвимым"
SetUnitInvulnerable="Сделать ",~Unit," ",~Invulnerable/Vulnerable
SetUnitInvulnerableHint=

PauseUnitBJ="Пауза/Снять паузу"
PauseUnitBJ=~Pause/Unpause," ",~Unit
PauseUnitBJHint="Приостановленная боевая единица не выполняет приказов, но помнит их и продолжает их выполнение после снятия паузы."

PauseAllUnitsBJ="Пауза/снять паузу всех боевых единиц"
PauseAllUnitsBJ=~Pause/Unpause," всех боевых единиц"
PauseAllUnitsBJHint="Приостановленные боевые единицы не выполняют приказов, но помнят их и продолжают их выполнение после снятия паузы. Это действие влияет лишь на боевые единицы, существующие в момент выполнения данной функции."

UnitPauseTimedLifeBJ="Пауза таймера времени жизни"
UnitPauseTimedLifeBJ=~Pause/Unpause," таймер времени жизни для ",~Unit
UnitPauseTimedLifeBJHint="Лишь призванные боевые единицы имеют таймеры времени жизни."

UnitApplyTimedLifeBJ="Добавить таймер времени жизни"
UnitApplyTimedLifeBJ="Добавить ",~Duration," секунд ",~Buff Type," таймер времени жизни для ",~Unit
UnitApplyTimedLifeBJHint=

SetUnitExplodedBJ="Сделать боевую единицу взрывающейся при смерти"
SetUnitExplodedBJ="Принудить ",~Unit," ",~Explode/Die Normally," при смерти"
SetUnitExplodedBJHint=

UnitSuspendDecayBJ="Приостановить разложение трупа"
UnitSuspendDecayBJ=~Suspend/Resume," разложение трупа ",~Unit
UnitSuspendDecayBJHint="Срабатывает лишь на трупах, и только после того, как закончится анимация смерти юнита."

UnitResetCooldown="Сбросить перезарядку способностей"
UnitResetCooldown="Сбросить перезарядку способностей для ",~Unit
UnitResetCooldownHint="Делает все способности боевой единицы доступными для повторного использования практически мгновенно."

UnitSetConstructionProgress="Установить прогресс строительства зданий"
UnitSetConstructionProgress="Установить ",~Building," прогресс строительства ",~Progress,"%"
UnitSetConstructionProgressHint="Используется только на зданиях, которые строятся в данный момент."

UnitSetUpgradeProgress="Установить прогресс улучшения зданий"
UnitSetUpgradeProgress="Установить ",~Building," прогресс улучшения ",~Progress,"%"
UnitSetUpgradeProgressHint="Используется только лишь на зданиях, которые сейчас улучшаются. Не оказывает влияния на исследовательские улучшения."

UnitAddSleepPerm="Усыпить/разбудить боевую единицу"
UnitAddSleepPerm="Принудить ",~Unit," ",~Sleep/Remain Awake," (когда всё спокойно)"
UnitAddSleepPermHint="Боевые единицы игроков 1..12 никогда не спят."

UnitSetCanSleepBJ="Усыпить/разбудить боевую единицу ночью"
UnitSetCanSleepBJ="Принудить ",~Unit," ",~Sleep/Remain Awake," (ночью, когда всё спокойно)"
UnitSetCanSleepBJHint="Боевые единицы игроков 1..12 никогда не спят."

UnitWakeUpBJ="Разбудить боевую единицу"
UnitWakeUpBJ="Разбудить ",~Unit
UnitWakeUpBJHint="Действует только на ночной сон (не на магический)."

UnitGenerateAlarms="Включение сигнала тревоги"
UnitGenerateAlarms="Включение сигнала тревоги для ",~Unit," ",~On/Off
UnitGenerateAlarmsHint="Это оказывает воздействие только на здания."

RescueUnitBJ="Спасти боевую единицу"
RescueUnitBJ="Спасти ",~Unit," для ",~Player," и ",~Change/Retain Color
RescueUnitBJHint=

MakeUnitRescuableToForceBJ="Сделать боевую единицу спасаемой"
MakeUnitRescuableToForceBJ="Сделать ",~Unit," ",~Rescuable/Unrescuable," для ",~Player Group
MakeUnitRescuableToForceBJHint=

SetUnitRescueRange="Установить радиус спасения боевой единицы"
SetUnitRescueRange="Установить радиус спасения боевой единицы ",~Unit," на ",~Range
SetUnitRescueRangeHint="Чтобы сделать боевую единицу спасаемой, воспользуйтесь функцией 'Сделать боевую единицу спасаемой'."

SetRescueUnitColorChangeBJ="Включить/выключить смену цвета боевых единиц при спасении"
SetRescueUnitColorChangeBJ="Задать установку всем спасаемым боевым единицам ",~Change/Retain Color," при спасении"
SetRescueUnitColorChangeBJHint=

SetRescueBuildingColorChangeBJ="Включить/выключить смену цвета зданий при спасении"
SetRescueBuildingColorChangeBJ="Задать установку всем спасаемым зданиям ",~Change/Retain Color," при спасении"
SetRescueBuildingColorChangeBJHint=

SetUnitUseFoodBJ="Разрешить/запретить использование снабжения"
SetUnitUseFoodBJ=~Enable/Disable," использование снабжения для ",~Unit
SetUnitUseFoodBJHint=

SetUnitFacingToFaceUnitTimed="Повернуть боевую единицу на заданную боевую единицу"
SetUnitFacingToFaceUnitTimed="Повернуть ",~Unit," на ",~Unit," в течении ",~Time," секунд"
SetUnitFacingToFaceUnitTimedHint="Принудить боевую единицу повернуться передом к другой боевой единице. Эта функция действует только, когда исходная боевая единица в данный момент не перемещается."

SetUnitFacingToFaceLocTimed="Повернуть боевую единицу к заданной точке"
SetUnitFacingToFaceLocTimed="Повернуть ",~Unit," к ",~Point," в течении ",~Time," секунд"
SetUnitFacingToFaceLocTimedHint="Принудить боевую единицу повернуться передом к указанной точке. Эта функция действует только, когда исходная боевая единица в данный момент не перемещается."

SetUnitFacingTimed="Повернуть боевую единицу в градусах"
SetUnitFacingTimed="Повернуть ",~Unit," на ",~Angle," в течении ",~Time," секунд"
SetUnitFacingTimedHint="Значение угла задаётся в градусах, где 0 - восток, 90 - север, 180 - запад, 270 - юг."

SetUnitMoveSpeed="Установить скорость передвижения"
SetUnitMoveSpeed="Установить скорость передвижения ",~Unit," на ",~Speed
SetUnitMoveSpeedHint=

SetUnitPathing="Разрешить/запретить преграды"
SetUnitPathing="Переключить преграды для ",~Unit," на ",~On/Off
SetUnitPathingHint="Боевые единицы с запрещёнными преградами проходят сквозь препятствия (например, сквозь стены или сквозь здания)."

SetUnitAcquireRangeBJ="Установить дистанцию охраны"
SetUnitAcquireRangeBJ="Установить ",~Unit," дистанцию охраны на ",~Range
SetUnitAcquireRangeBJHint="Дистанция охраны - это расстояние до цели, на котором боевая единица получает автоматический приказ на атаку цели."

SetUnitUserData="Записать целое число в переменную"
SetUnitUserData="Записать в переменную для боевой единицы ",~Unit," целое число ",~Index
SetUnitUserDataHint="Эта функция может использоваться для хранения любой целочисленной величины."

UnitRemoveBuffsBJ="Рассеять магические эффекты"
UnitRemoveBuffsBJ="Рассеять ",~Buff Type," магические эффекты для ",~Unit
UnitRemoveBuffsBJHint=

UnitRemoveBuffsExBJ="Рассеять магические эффекты по типу"
UnitRemoveBuffsExBJ="Рассеять ",~Buff Type," магические эффекты, учитывая ",~Buff Resist," для ",~Unit," (",~Include/Exclude," таймер времени жизни, ",~Include/Exclude," ауры)"
UnitRemoveBuffsExBJHint=

UnitRemoveBuffBJ="Рассеять определённый магический эффект"
UnitRemoveBuffBJ="Рассеять магический эффект ",~Buff," для ",~Unit
UnitRemoveBuffBJHint=

UnitAddAbilityBJ="Добавить способность"
UnitAddAbilityBJ="Добавить способность ",~Ability," для ",~Unit
UnitAddAbilityBJHint=

UnitRemoveAbilityBJ="Удалить способность"
UnitRemoveAbilityBJ="Удалить способность ",~Ability," для ",~Unit
UnitRemoveAbilityBJHint=

UnitAddTypeBJ="Добавить классификацию"
UnitAddTypeBJ="Добавить классификацию ",~Classification," для ",~Unit
UnitAddTypeBJHint="Информация об обновлении боевой единицы не будет отображаться, пока боевая единица не будет повторно выбрана."

UnitRemoveTypeBJ="Удалить классификацию"
UnitRemoveTypeBJ="Удалить Классификацию ",~Classification," для ",~Unit
UnitRemoveTypeBJHint="Информация об обновлении боевой единицы не будет отображаться, пока боевая единица не будет повторно выбрана."

IssueTargetOrder="Приказать боевой единице выполнить действие над другой боевой единицей"
IssueTargetOrder="Приказать ",~Unit," ",~Order," ",~Unit
IssueTargetOrderHint=

IssuePointOrderLoc="Приказать боевой единице выполнить действие в указанной точке"
IssuePointOrderLoc="Приказать ",~Unit," ",~Order," в ",~Point
IssuePointOrderLocHint=

IssueTargetDestructableOrder="Приказать боевой единице выполнить действие над разрушаемым объектом"
IssueTargetDestructableOrder="Приказать ",~Unit," ",~Order," ",~Destructible
IssueTargetDestructableOrderHint=

IssueTargetItemOrder="Приказать боевой единице выполнить действие над предметом"
IssueTargetItemOrder="Приказать ",~Unit," ",~Order," ",~Item
IssueTargetItemOrderHint=

IssueImmediateOrder="Приказать боевой единице без указания цели"
IssueImmediateOrder="Отдать ",~Unit," приказ ",~Order
IssueImmediateOrderHint=

IssueBuildOrderByIdLocBJ="Приказать рабочему построить здание"
IssueBuildOrderByIdLocBJ="Приказать ",~рабочему," построить ",~Unit-Type," в ",~Point
IssueBuildOrderByIdLocBJHint=

IssueTrainOrderByIdBJ="Приказать зданию нанять боевую единицу"
IssueTrainOrderByIdBJ="Приказать ",~зданию," нанять ",~боевую единицу,"
IssueTrainOrderByIdBJHint="Этим действием можно воспользоваться для того, чтобы приказать зданию усовершенствоваться."

IssueUpgradeOrderByIdBJ="Приказать зданию провести исследование"
IssueUpgradeOrderByIdBJ="Приказать ",~зданию," провести исследование ",~Tech-Type
IssueUpgradeOrderByIdBJHint="Усовершенствования оружия и брони могут быть выполнены несколько раз при помощи этого действия."

UnitDropItemPointLoc="Приказать боевой единице бросить предмет в точке"
UnitDropItemPointLoc="Приказать ",~Unit," бросить ",~Item," в точке ",~Point
UnitDropItemPointLocHint=

UnitDropItemSlotBJ="Приказать боевой единице переместить предмет в указанный слот инвентаря"
UnitDropItemSlotBJ="Приказать ",~Unit," переместить ",~Item," в ",~Index," слот инвентаря"
UnitDropItemSlotBJHint="Срабатывает только, если боевая единица уже несёт предмет. Если предмет уже есть в слоте, предметы поменяются местами."

UnitDropItemTargetBJ="Приказать боевой единице передать предмет другой боевой единице"
UnitDropItemTargetBJ="Приказать ",~Unit," передать ",~Item," боевой единице ",~Unit
UnitDropItemTargetBJHint="Срабатывает только, если боевая единица уже несёт предмет."

UnitDamagePointLoc="Урон по области"
UnitDamagePointLoc=",~Unit," мгновенно нанесёт урон по области после истечения ",~Seconds," секунд в радиусе ",~Size," от ",~Location,", нанося ",~Amount," урона атакой типа ",~AttackType," и уроном типа ",~DamageType
UnitDamagePointLocHint="Это не прерывает приказов боевой единицы."

UnitDamageTargetBJ="Урон по цели"
UnitDamageTargetBJ=",~Unit," мгновенно нанесёт урон ",~Target,", нанося ",~Amount," урона атакой типа ",~AttackType," и уроном типа ",~DamageType
UnitDamageTargetBJHint="Это не прерывает приказов боевой единицы."

DecUnitAbilityLevelSwapped="Понизить уровень способности для боевой едницы"
DecUnitAbilityLevelSwapped="Понизить уровень способности ",~Ability," для ",~Unit
DecUnitAbilityLevelSwappedHint="Если боевая единица не имеет способность, ничего не изменится."

IncUnitAbilityLevelSwapped="Повысить уровень способности для боевой едницы"
IncUnitAbilityLevelSwapped="Повысить уровень способности ",~Ability," для ",~Unit
IncUnitAbilityLevelSwappedHint="Если боевая единица не имеет способность, ничего не изменится."

SetUnitAbilityLevelSwapped="Установить уровень способности для боевой едницы"
SetUnitAbilityLevelSwapped="Установить уровень Способности ",~Ability," для ",~Unit," на ",~Level
SetUnitAbilityLevelSwappedHint="Если боевая единица не имеет способность, ничего не изменится."

// Unit Group actions
ForGroupMultiple="Выбрать каждую боевую единицу в отряд и выполнить несколько действий"
ForGroupMultiple="Выбрать каждую боевую единицу в ",~Unit Group," и выполнить (действия)"
ForGroupMultipleHint="Пользуйтесь 'Выбранной боевой единицей' для обращения к каждой выбранной боевой единицей. Этот триггер действует на каждую боевую единицу в отряде, включая погибших боевых единиц. Действия ожидания не должны использоваться в рамках этой функции. Добавляйте действия к этой функции на основном экране."

ForGroup="Выбрать каждую боевую единицу в отряд и выполнить действие"
ForGroup="Выбрать каждую боевую единицу в ",~Unit Group," и выполнить ",~Action
ForGroupHint="Пользуйтесь 'Выбранной боевой единицей' для обращения к каждой выбранной боевой единицей. Этот триггер действует на каждую боевую единицу в отряде, включая погибших боевых единиц. Действия ожидания не должны использоваться в рамках этой функции."

GroupAddUnitSimple="Добавить боевую единицу в отряд"
GroupAddUnitSimple="Добавить ",~Unit," в ",~Unit Group
GroupAddUnitSimpleHint="Эта функция добавляет боевую единицу к переменной отряд. Это не оказывает воздействия на саму боевую единицу."

GroupAddGroup="Присоединить отряд к другому отряду"
GroupAddGroup="Присоединить отряд ",~Unit Group," к ",~Unit Group
GroupAddGroupHint="Эта функция добавляет все боевые единицу к переменной отряд. Это не оказывает воздействия на боевые единицы."

GroupRemoveUnitSimple="Удалить боевую единицу из отряда"
GroupRemoveUnitSimple="Удалить ",~Unit," из ",~Unit Group
GroupRemoveUnitSimpleHint="Эта функция удаляет боевую единицу из переменной отряд. Это не оказывает воздействия на саму боевую единицу."

GroupRemoveGroup="Удалить отряд"
GroupRemoveGroup="Удалить отряд ",~Unit Group," из ",~Unit Group
GroupRemoveGroupHint="Эта функция удаляет все боевые единицы из переменной отряд. Это не оказывает воздействия на боевые единицы."

GroupClear="Очистить"
GroupClear="Удалить все боевые единицы из ",~Unit Group
GroupClearHint="Эта функция удаляет все боевые единицы из переменной отряд. Это не оказывает воздействия на боевые единицы."

GroupTargetOrder="Приказать отряду выполнить действие над боевой единицей"
GroupTargetOrder="Приказать ",~Unit Group," ",~Order," ",~Unit
GroupTargetOrderHint="Эта функция отдаст приказ максимум 12 боевым единицам из указанного отряда."

GroupPointOrderLoc="Приказать отряду выполнить действие в указанной точке"
GroupPointOrderLoc="Приказать ",~Unit Group," ",~Order," в ",~Point
GroupPointOrderLocHint="Эта функция отдаст приказ максимум 12 боевым единицам из указанного отряда."

GroupTargetDestructableOrder="Приказать отряду выполнить действие над разрушаемым объектом"
GroupTargetDestructableOrder="Приказать ",~Unit Group," ",~Order," ",~Destructible
GroupTargetDestructableOrderHint="Эта функция отдаст приказ максимум 12 боевым единицам из указанного отряда."

GroupTargetItemOrder="Приказать отряду выполнить действие над предметом"
GroupTargetItemOrder="Приказать ",~Unit Group," ",~Order," ",~Item
GroupTargetItemOrderHint="Эта функция отдаст приказ максимум 12 боевым единицам из указанного отряда."

GroupImmediateOrder="Приказать отряду без указания цели"
GroupImmediateOrder="Приказать ",~Unit Group," ",~Order
GroupImmediateOrderHint="Эта функция отдаст приказ максимум 12 боевым единицам из указанного отряда."

GroupTrainOrderByIdBJ="Приказать отряду нанять боевую единицу"
GroupTrainOrderByIdBJ="Приказать ",~Unit Group," нанять ",~Unit-Type
GroupTrainOrderByIdBJHint="Этим действием можно воспользоваться для того, чтобы приказать зданию усовершенствоваться."

// Ubersplat actions
CreateUbersplatBJ="Создать"
CreateUbersplatBJ="Создать ",~Location," тип ",~Type," с цветом (",~Red,"%, ",~Green,"%, ",~Blue,"%) и ",~Transparency,"% прозрачностью (",~Включить/Отключить," остановка, ",~Enble/Disable," пропуск)"
CreateUbersplatBJHint="Цвета (Красный, Зелёный, Синий). 100% прозрачности для полной невидимости. Для отображения текстуры используйте триггер 'Разблокировать постоянную прорисовку'."

DestroyUbersplat="Удалить"
DestroyUbersplat="Удалить ",~Ubersplat
DestroyUbersplatHint=

ResetUbersplat="Сбросить"
ResetUbersplat="Сбросить ",~Ubersplat
ResetUbersplatHint=

FinishUbersplat="Закончить"
FinishUbersplat="Закончить ",~Ubersplat
FinishUbersplatHint=

ShowUbersplatBJ="Скрыть"
ShowUbersplatBJ=~Show/Hide," ",~Ubersplat
ShowUbersplatBJHint=

SetUbersplatRender="Разблокировать прорисовку"
SetUbersplatRender=~Ubersplat,": ",~Включить/Отключить," прорисовку"
SetUbersplatRenderHint=

SetUbersplatRenderAlways="Разблокировать постоянную прорисовку"
SetUbersplatRenderAlways=~Ubersplat,": ",~Включить/Отключить," постоянную прорисовку"
SetUbersplatRenderAlwaysHint="Используйте данный триггер после триггера "Текстура земли - Создать", чтобы отобразить текстуру земли."


// Visibility actions
FogEnableOn="Разрешить Туман Войны"
FogEnableOn="Разрешить туман войны"
FogEnableOnHint=

FogEnableOff="Запретить Туман Войны"
FogEnableOff="Запретить туман войны"
FogEnableOffHint=

FogMaskEnableOn="Разрешить Черную Маску"
FogMaskEnableOn="Разрешить черную маску"
FogMaskEnableOnHint=

FogMaskEnableOff="Запретить Черную Маску"
FogMaskEnableOff="Запретить черную маску"
FogMaskEnableOffHint=

CreateFogModifierRectBJ="Создать видимость в области"
CreateFogModifierRectBJ="Создать первоначально ",~Enabled/Disabled," видимость для ",~Player," излучающий ",~Visibility State," на ",~Region
CreateFogModifierRectBJHint=

CreateFogModifierRadiusLocBJ="Создать видимость в радиусе"
CreateFogModifierRadiusLocBJ="Создать первоначально ",~Enabled/Disabled," видимость для ",~Player," излучающий ",~Visibility State," от ",~Point," радиусом ",~Radius
CreateFogModifierRadiusLocBJHint=

FogModifierStart="Разрешить видимость"
FogModifierStart="Разрешить ",~Visibility Modifier
FogModifierStartHint=

FogModifierStop="Запретить видимость"
FogModifierStop="Запретить ",~Visibility Modifier
FogModifierStopHint=

DestroyFogModifier="Уничтожить видимость"
DestroyFogModifier="Уничтожить ",~Visibility Modifier
DestroyFogModifierHint=


// Obsolete actions
//AddPerfLogLabel="** AddPerfLogLabel **"
//AddPerfLogLabel="** AddPerfLogLabel(",~Label,") **"
//AddPerfLogLabelHint="** Это предназначено только для отладки - уничтожьте до корабля. **"

//Cheat="** Обман **"
//Cheat="** Обман(",~Label,") **"
//CheatHint="** Это предназначено только для отладки - уничтожьте до корабля. **"



//***************************************************************************
[TriggerCallStrings]

// returns boolean
IsDestructableAliveBJ="Разрушаемый объект Жив"
IsDestructableAliveBJ=~Destructible," жив"
IsDestructableAliveBJHint=

IsDestructableDeadBJ="Разрушаемый объект Мёртв"
IsDestructableDeadBJ=~Destructible," мёртв"
IsDestructableDeadBJHint=

IsDestructableInvulnerableBJ="Разрушаемый объект Неуязвим"
IsDestructableInvulnerableBJ=~Destructible," неуязвим"
IsDestructableInvulnerableBJHint=

IsPointBlightedBJ="Область поражена порчей"
IsPointBlightedBJ=~Point," поражена порчей"
IsPointBlightedBJHint=

IsTerrainPathableBJ="Рельеф местности не проходим"
IsTerrainPathableBJ="Рельеф местности ",~Location," типа ",~Pathing Type," не проходим"
IsTerrainPathableBJHint=

IsMapFlagSet="Флаг карты установлен"
IsMapFlagSet=~Map Flag," установлен"
IsMapFlagSetHint=

IsCustomCampaignButtonVisibile="Кнопка пользовательской кампании видна"
IsCustomCampaignButtonVisibile="Кнопка пользовательской кампании ",~Number," видна"
IsCustomCampaignButtonVisibileHint=

GetCreepCampFilterState="Отображение Лагеря"
GetCreepCampFilterState="Отображать лагеря нейтральных на мини-карте"
GetCreepCampFilterStateHint=

SaveGameExists="Сохранённая Игра Существует"
SaveGameExists="Сохранённая игра ",~Filename," существует"
SaveGameExistsHint="Эта функция действует только для карт с подписью компании Blizzard."

GetStoredBooleanBJ="Загрузить логическое значение"
GetStoredBooleanBJ="Загрузить ",~Label," ",~Category," из ",~Game Cache
GetStoredBooleanBJHint="Если метка не найдена, эта функция возвращает значение 'Ложь'."

HaveStoredValue="Величина Кэша Существует"
HaveStoredValue=~Label," сохранена как ",~Type," ",~Category," в ",~Game Cache
HaveStoredValueHint=

HaveSavedValue="Значение хэш-таблицы существует"
HaveSavedValue=~Value," записано как ",~Type," ",~Value," в хэш-таблице ",~Hashtable
HaveSavedValueHint=

UnitHasItem="У героя есть предмет"
UnitHasItem="У героя ",~Hero," есть ",~Item
UnitHasItemHint=

UnitHasItemOfTypeBJ="У героя есть предмет типа"
UnitHasItemOfTypeBJ=~Hero," обладает предметом типа ",~Item-Type
UnitHasItemOfTypeBJHint=

IsSuspendedXP="Получение опыта для героя заблокировано"
IsSuspendedXP="Получение опыта для героя ",~Hero," заблокировано
IsSuspendedXPHint="Пользуйтесь действием 'Герой - Заблокировать/Разблокировать получение опыта' для блокировки/разблокировки получения опыта героя."

CheckItemStatus="Проверка состояния предмета"
CheckItemStatus=~Item," имеет состояние ",~Status
CheckItemStatusHint=

CheckItemcodeStatus="Проверка состояния типа предмета"
CheckItemcodeStatus=~Item-Type," имеет состояние ",~Status
CheckItemcodeStatusHint=

IsItemHiddenBJ="Предмет скрыт"
IsItemHiddenBJ=~Item," скрыт"
IsItemHiddenBJHint=

IsItemOwned="У предмета появился владелец"
IsItemOwned=~Item," получил владельца"
IsItemOwnedHint=

RectContainsItem="Предмет в области"
RectContainsItem=~Item," находится в области ",~Region
RectContainsItemHint=

IsItemInvulnerable="Предмет неуязвим"
IsItemInvulnerable=~Item," неуязвим"
IsItemInvulnerableHint=

LeaderboardHasPlayerItemBJ="Игрок есть в таблице рекордов"
LeaderboardHasPlayerItemBJ="В таблице рекордов ",~Leaderboard," есть игрок ",~Player
LeaderboardHasPlayerItemBJHint=

IsMultiboardDisplayed="Статистическая таблица показывается"
IsMultiboardDisplayed=~Multiboard," показывается"
IsMultiboardDisplayedHint=

IsMultiboardMinimized="Статистическая таблица свёрнута"
IsMultiboardMinimized=~Multiboard," свёрнута"
IsMultiboardMinimizedHint=

WaygateIsActiveBJ="Портал включён"
WaygateIsActiveBJ=~Way Gate," включён"
WaygateIsActiveBJHint=

IsPlayerFlagSetBJ="Флаг игрока включён"
IsPlayerFlagSetBJ=~Player Flag," включён для ",~Player
IsPlayerFlagSetBJHint=

IsPlayerAlly="Игрок является союзником указанного игрока"
IsPlayerAlly="Игрок ",~Player," является союзником игрока ",~Player
IsPlayerAllyHint=

IsPlayerEnemy="Игрок является врагом указанного игрока"
IsPlayerEnemy="Игрок ",~Player," является врагом игрока ",~Player
IsPlayerEnemyHint=

GetPlayerAlliance="Игрок заключает определённый договор с игроком"
GetPlayerAlliance=~Player," дает ",~Player," ",~Alliance Type
GetPlayerAllianceHint=

IsPlayerInForce="Игрок в группе игроков"
IsPlayerInForce=~Player," в ",~Player Group
IsPlayerInForceHint=

IsQuestItemCompleted="Требование задания выполнено"
IsQuestItemCompleted=~Quest Requirement," выполнено"
IsQuestItemCompletedHint=

IsQuestEnabled="Задание включено"
IsQuestEnabled="Задание ",~Quest," включено"
IsQuestEnabledHint=

IsQuestCompleted="Задание выполнено"
IsQuestCompleted="Задание ",~Quest," выполнено"
IsQuestCompletedHint=

IsQuestFailed="Задание провалено"
IsQuestFailed="Задание ",~Quest," провалено"
IsQuestFailedHint=

IsQuestDiscovered="Задание получено"
IsQuestDiscovered="Задание ",~Quest," получено"
IsQuestDiscoveredHint=

IsQuestRequired="Задание является основным"
IsQuestRequired="Задание ",~Quest," является основным"
IsQuestRequiredHint=

RectContainsLoc="Область содержит указанную точку"
RectContainsLoc="Область ",~Region," содержит ",~Point
RectContainsLocHint=

IsTriggerEnabled="Триггер включён"
IsTriggerEnabled="Триггер ",~Trigger," включён"
IsTriggerEnabledHint=

TriggerEvaluate="Условия триггера истинны"
TriggerEvaluate="Условия триггера ",~Trigger," истинны"
TriggerEvaluateHint=

IsTriggerQueuedBJ="Триггер добавлен в очередь триггеров"
IsTriggerQueuedBJ="Триггер ",~Trigger," добавлен в очередь триггеров"
IsTriggerQueuedBJHint="Пользуйтесь 'Триггер - Добавить к очереди триггеров' и 'Триггер - удалить из очереди триггеров' для управления очередью триггеров."

IsTriggerQueueEmptyBJ="Очередь триггеров пуста"
IsTriggerQueueEmptyBJ="Очередь триггеров пуста"
IsTriggerQueueEmptyBJHint="Пользуйтесь 'Триггер - Добавить к очереди триггеров' и 'Триггер - Удалить из очереди триггеров' для управления очередью триггеров."

IsUnitType="Проверка классификации боевой единицы"
IsUnitType="Боевая единица ",~Unit," - это ",~Type
IsUnitTypeHint=

IsUnitIdType="Проверка классификации типа боевой единицы"
IsUnitIdType=~Unit-Type," - это ",~Type
IsUnitIdTypeHint=

IsUnitInGroup="Боевая единица в указанном отряде"
IsUnitInGroup="Боевая единица ",~Unit," в ",~Unit Group
IsUnitInGroupHint=

RectContainsUnit="Боевая единица находится в указанной области"
RectContainsUnit="Область ",~Region," содержит боевую единицу ",~Unit
RectContainsUnitHint=

IsUnitAliveBJ="Боевая единица жива"
IsUnitAliveBJ="Боевая единица ",~Unit," жива"
IsUnitAliveBJHint=

IsUnitDeadBJ="Боевая единица мертва"
IsUnitDeadBJ="Боевая единица ",~Unit," мертва"
IsUnitDeadBJHint=

IsUnitPausedBJ="Боевая единица приостановлена"
IsUnitPausedBJ="Боевая единица ",~Unit," приостановлена"
IsUnitPausedBJHint=

IsUnitHiddenBJ="Боевая единица скрыта"
IsUnitHiddenBJ="Боевая единица ",~Unit," скрыта"
IsUnitHiddenBJHint="Боевая единица может быть скрыта при помощи действия триггера 'Боевая единица - Скрыть', или поместив боевую единицу в транспорт, камень душ, алтарь, и тому подобное."

IsUnitIllusionBJ="Боевая единица является иллюзией"
IsUnitIllusionBJ="Боевая единица ",~Unit," является иллюзией"
IsUnitIllusionBJHint=

UnitCanSleepPerm="Боевая единица спит"
UnitCanSleepPerm="Боевая единица ",~Unit," спит (когда всё спокойно)"
UnitCanSleepPermHint="Боевые единицы игроков 1..24 никогда не спят."

UnitCanSleepBJ="Боевая единица спит по ночам (когда всё спокойно)"
UnitCanSleepBJ="Боевая единица ",~Unit," спит по ночам (когда все спокойно)"
UnitCanSleepBJHint="Боевые единицы игроков 1..24 никогда не спят."

UnitIsSleepingBJ="Боевая единица в данный момент спит (не магическим сном)"
UnitIsSleepingBJ="Боевая единица ",~Unit," в данный момент спит (не магическим сном)"
UnitIsSleepingBJHint="Боевые единицы игроков 1..24 никогда не спят."

DoesUnitGenerateAlarms="Боевая единица поднимает тревогу"
DoesUnitGenerateAlarms="Боевая единица ",~Unit," поднимает тревогу"
DoesUnitGenerateAlarmsHint=

IsUnitLoadedBJ="Боевая единица в транспорте"
IsUnitLoadedBJ="Боевая единица ",~Unit," в транспорте"
IsUnitLoadedBJHint=

IsUnitInTransportBJ="Боевая единица в указанном транспорте"
IsUnitInTransportBJ="Боевая единица ",~Unit," в ",~Transport
IsUnitInTransportBJHint=

IsUnitSelected="Боевая единица выбрана указанным игроком"
IsUnitSelected="Боевая единица ",~Unit," выбрана ",~Player
IsUnitSelectedHint=

IsUnitAlly="Боевая единица принадлежит союзнику указанного игрока"
IsUnitAlly="Боевая единица ",~Unit," принадлежит союзнику игрока ",~Player
IsUnitAllyHint=

IsUnitEnemy="Боевая единица принадлежит врагу указанного игрока"
IsUnitEnemy="Боевая единица ",~Unit," принадлежит врагу игрока ",~Player
IsUnitEnemyHint=

UnitHasBuffBJ="Боевая единица имеет магический эффект"
UnitHasBuffBJ=~Unit," имеет магический эффект ",~Buff
UnitHasBuffBJHint=

IsUnitGroupEmptyBJ="Отряд пуст"
IsUnitGroupEmptyBJ="Отряд ",~Unit Group," пуст"
IsUnitGroupEmptyBJHint="Это условие истинно, когда указанный отряд не содержит боевых единиц."

IsUnitGroupInRectBJ="Боевые единицы из отряда находятся в указанной области"
IsUnitGroupInRectBJ="Все боевые единицы из отряда ",~Unit Group," находятся в области ",~Region
IsUnitGroupInRectBJHint="Это условие истинно, если все боевые единицы из указанного отряда находятся в указанной области."

IsUnitGroupDeadBJ="Боевые единицы из отряда мертвы"
IsUnitGroupDeadBJ="Все боевые единицы из отряда ",~Unit Group," мертвы"
IsUnitGroupDeadBJHint="Это условие истинно, если все боевые единицы из указанного отряда мертвы."

IsFogEnabled="Туман войны разрешён"
IsFogEnabled="Туман войны разрешён"
IsFogEnabledHint=

IsFogMaskEnabled="Чёрная дымка разрешена"
IsFogMaskEnabled="Чёрная дымка разрешена"
IsFogMaskEnabledHint=

IsUnitVisible="Боевая единица в зоне видимости указанного игрока"
IsUnitVisible="Боевая единица ",~Unit," в зоне видимости игрока ",~Player
IsUnitVisibleHint=

IsUnitInvisible="Боевая единица вне зоны видимости указанного игрока"
IsUnitInvisible="Боевая единица ",~Unit," вне зоны видимости игрока ",~Player
IsUnitInvisibleHint=

IsUnitFogged="Боевая единица в тумане войны для указанного игрока"
IsUnitFogged="Боевая единица ",~Unit," в тумане войны для игрока ",~Player
IsUnitFoggedHint=

IsUnitMasked="Боевая единица в чёрной дымке для указанного игрока"
IsUnitMasked="Боевая единица ",~Unit," в чёрной дымке для игрока ",~Player
IsUnitMaskedHint=

IsLocationVisibleToPlayer="Точка в зоне видимости указанного игрока"
IsLocationVisibleToPlayer="Точка ",~Point," в зоне видимости игрока ",~Player
IsLocationVisibleToPlayerHint=

IsLocationFoggedToPlayer="Точка в тумане войны для указанного игрока"
IsLocationFoggedToPlayer="Точка ",~Point," в тумане войны для игрока ",~Player
IsLocationFoggedToPlayerHint=

IsLocationMaskedToPlayer="Точка в чёрной дымке для указанного игрока"
IsLocationMaskedToPlayer="Точка ",~Point," в чёрной дымке для игрока ",~Player
IsLocationMaskedToPlayerHint=


// returns integer
OperatorInt="Арифметика"
OperatorInt=~Value," ",~Operator," ",~Value
OperatorIntHint=

GetForLoopIndexA="Целое число A цикла"
GetForLoopIndexA="Целое число A цикла"
GetForLoopIndexAHint=

GetForLoopIndexB="Целое число B цикла"
GetForLoopIndexB="Целое число B цикла"
GetForLoopIndexBHint=

StringLength="Длина строки"
StringLength="Длина строки ",~String
StringLengthHint=

R2I="Преобразовать действительное число в целочисленное"
R2I="Целочисленное (",~Real,")"
R2RHint=

S2I="Преобразовать строку в целочисленное"
S2I="Целочисленное (",~String,")"
S2IHint=

GetElevatorHeight="Высота подъёмника"
GetElevatorHeight="Высота ",~Elevator
GetElevatorHeightHint="Высоту подъёмника можно изменять использованием действия 'Декорация - Установить высоту подъёмника'."

GetTerrainCliffLevelBJ="Уровень местности скалы"
GetTerrainCliffLevelBJ="Уровень местности скалы ",~Location
GetTerrainCliffLevelBJHint="Значения уровня местности скалы начинаются с нуля."

GetTerrainVarianceBJ="Высота местности"
GetTerrainVarianceBJ="Высота местности ",~Location
GetTerrainVarianceBJHint=

GetLearnedSkillLevel="Достигнутый уровень способности"
GetLearnedSkillLevel="Достигнутый уровень способности"
GetLearnedSkillLevelHint=

GetPlayers="Количество игроков"
GetPlayers="Количество игроков"
GetPlayersHint=

GetTeams="Количество команд"
GetTeams="Количество команд"
GetTeamsHint=

GetAllyColorFilterState="Установка фильтра цвета союзников"
GetAllyColorFilterState="Установка фильтра цвета союзника"
GetAllyColorFilterStateHint="Значение 0 указывает на то, что фильтрование запрещено. Значение 1 указывает на то, что фильтрование разрешено только для мини-карты. Значение 2 указывает на то, что фильтрование разрешено для мини-карты и для обзора игры."

GetTournamentFinishNowRule="Правила конца турнира"
GetTournamentFinishNowRule="Правила конца турнира"
GetTournamentFinishNowRuleHint="Если значение равно 1 - ничьей быть не может."

GetTournamentScore="Очки турнира для режима сражения"
GetTournamentScore="Очки турнира для режима сражения ",~Player
GetTournamentScoreHint="Эта функция возвращает очки турнира для режима сражения, чтобы определить победителя, если игра слишком долгая."

GetStoredIntegerBJ="Загрузить целочисленное"
GetStoredIntegerBJ="Загрузить ",~Label," ",~Category," из ",~Game Cache
GetStoredIntegerBJHint="Если метка не найдена, эта функция возвращает значение ноль."

GetHeroLevel="Уровень героя"
GetHeroLevel="Уровень героя ",~Hero
GetHeroLevelHint=

GetHeroXP="Опыт героя"
GetHeroXP="Опыт героя ",~Hero
GetHeroXPHint=

GetHeroStatBJ="Свойство героя"
GetHeroStatBJ=~Attribute," ",~Hero," (",~Include/Exclude," бонусы)"
GetHeroStatBJHint=

GetHeroSkillPoints="Нераспределённые таланты"
GetHeroSkillPoints="Нераспределённые таланты ",~Hero
GetHeroSkillPointsHint=

GetItemLevel="Уровень предмета"
GetItemLevel="Уровень предмета ",~Item
GetItemLevelHint=

GetItemCharges="Количество зарядов предмета"
GetItemCharges="Количество зарядов ",~Item
GetItemChargesHint="Предметы с неограниченным зарядом возвращают ноль."

GetItemUserData="Пользовательское значение предмета"
GetItemUserData="Пользовательское значение предмета ",~Item
GetItemUserDataHint="Используйте действие 'Предмет - Установить пользовательское значение', чтобы устанавливать свое значение предмета."

LeaderboardGetPlayerIndexBJ="Позиция игрока в таблице рекордов"
LeaderboardGetPlayerIndexBJ="Позиция игрока ",~Player," в таблице рекордов ",~Leaderboard
LeaderboardGetPlayerIndexBJHint=

GetRandomInt="Случайное число"
GetRandomInt="Случайное целое число между ",~Minimum," и ",~Maximum
GetRandomIntHint=

IMinBJ="Минимум"
IMinBJ="Минимум(",~Value 1,", ",~Value 2,")"
IMinBJHint=

IMaxBJ="Максимум"
IMaxBJ="Максимум(",~Value 1,", ",~Value 2,")"
IMaxBJHint=

IAbsBJ="Модуль"
IAbsBJ="Модуль(",~Value,")"
IAbsBJHint="Вычисляет абсолютную величину числа (положительное значение). Например, число -15 здесь будет равным 15, 0 - 0, а 8 - 8."

ISignBJ="Знак"
ISignBJ="Знак(",~Value,")"
ISignBJHint="Вычисляет знак числа. Значение отрицательного числа здесь будет равным -1. Значение положительного числа или 0 - 1."

ModuloInteger="По модулю"
ModuloInteger=~Dividend," по модулю ",~Divisor
ModuloIntegerHint="Вычисляет остаток от деления. Пример: 12 по модулю 5 = 2."

MultiboardGetRowCount="Номер колонки"
MultiboardGetRowCount="Номер колонки в ",~Multiboard
MultiboardGetRowCountHint=

MultiboardGetColumnCount="Количество колонок"
MultiboardGetColumnCount="Количество колонок в ",~Multiboard
MultiboardGetColumnCountHint=

GetResourceAmount="В руднике осталось золота"
GetResourceAmount="Оставшегося золота на руднике ",~Gold Mine
GetResourceAmountHint=

GetPlayerState="Свойство игрока"
GetPlayerState=~Player," ",~Property
GetPlayerStateHint=

GetPlayerTaxRateBJ="Налог игрока"
GetPlayerTaxRateBJ="Налог ",~Resource," от ",~Player," к ",~Player
GetPlayerTaxRateBJHint="Налоговый процент от 0 до 100."

GetPlayerScore="Очки игрока"
GetPlayerScore=~Player," ",~Score
GetPlayerScoreHint=

GetConvertedPlayerId="Номер игрока"
GetConvertedPlayerId="Номер игрока ",~Player
GetConvertedPlayerIdHint=

GetPlayerStructureCount="Число зданий игрока"
GetPlayerStructureCount="Число зданий игрока ",~Player," (",~Include/Exclude," недостроенные здания)"
GetPlayerStructureCountHint=

GetPlayerUnitCount="Число боевых единиц (не зданий) игрока"
GetPlayerUnitCount="Число боевых единиц (не зданий) игрока ",~Player," (",~Include/Exclude," обучаемых в данный момент боевых единиц)"
GetPlayerUnitCountHint=

GetPlayerTechCountSimple="Текущий уровень исследований игрока"
GetPlayerTechCountSimple="Текущий уровень исследований ",~Tech," для ",~Player
GetPlayerTechCountSimpleHint="Возвращает значение 0 или 1 для простых исследований, или 0..3 для трехуровневых исследований."

GetPlayerTechMaxAllowedSwap="Максимальный уровень исследований игрока"
GetPlayerTechMaxAllowedSwap="Максимальный уровень исследования ",~Tech," для ",~Player
GetPlayerTechMaxAllowedSwapHint="Возвращает значение 0 или 1 для простых исследований, или 0..3 для трехуровневых исследований."

GetPlayerTeam="Номер команды игрока"
GetPlayerTeam="Номер команды игрока ",~Player
GetPlayerTeamHint=

CountPlayersInForceBJ="Число игроков в группе игроков"
CountPlayersInForceBJ="Число игроков в группе игроков ",~Player Group
CountPlayersInForceBJHint=

CountUnitsInGroup="Число боевых единиц в отряде"
CountUnitsInGroup="Число боевых единиц в отряде ",~Unit Group
CountUnitsInGroupHint=

CountLivingPlayerUnitsOfTypeId="Подсчёт живых боевых единиц, принадлежащих игроку"
CountLivingPlayerUnitsOfTypeId="Подсчёт живых боевых единиц ",~Unit-Type,", принадлежащих игроку ",~Player
CountLivingPlayerUnitsOfTypeIdHint=

GetUnitFoodUsed="Количество потребляемой пищи боевой единицей"
GetUnitFoodUsed="Количество потребляемой пищи боевой единицей ",~Unit
GetUnitFoodUsedHint=

GetUnitFoodMade="Количество производимой пищи зданием"
GetUnitFoodMade="Количество производимой пищи зданием ",~Unit
GetUnitFoodMadeHint=

GetFoodUsed="Количество потребляемой пищи боевой единицей (тип)"
GetFoodUsed="Количество потребляемой пищи боевой единицей (тип) ",~Unit-Type
GetFoodUsedHint=

GetFoodMade="Количество производимой пищи зданием (тип)"
GetFoodMade="Количество производимой пищи зданием (тип) ",~Unit-Type
GetFoodMadeHint=

GetUnitPointValue="Значение точки боевой единицы"
GetUnitPointValue="Значение точки боевой единицы ",~Unit
GetUnitPointValueHint=

GetUnitPointValueByType="Значение точки боевой единицы (тип)"
GetUnitPointValueByType="Значение точки боевой единицы (тип) ",~Unit-Type
GetUnitPointValueByTypeHint=

GetUnitUserData="Нестандартное значение боевой единицы"
GetUnitUserData="Нестандартное значение боевой единицы ",~Unit
GetUnitUserDataHint="Используйте 'Боевая единица - Установить нестандартное значение' для установки нестандартного значения боевой единицы."

GetUnitLevel="Уровень боевой единицы"
GetUnitLevel="Уровень ",~Unit
GetUnitLevelHint="Используется как для героев, так и для остальных боевых единиц."

GetUnitAbilityLevelSwapped="Уровень способности боевой единицы"
GetUnitAbilityLevelSwapped="Уровень ",~Ability," у ",~Unit
GetUnitAbilityLevelSwappedHint="Если боевая единица не имеет способность, функция возвратит 0."

UnitInventoryCount="Количество носимых предметов у боевой единицы"
UnitInventoryCount="Количество носимых предметов у ",~Unit
UnitInventoryCountHint=

UnitInventorySizeBJ="Размер инвентаря у боевой единицы"
UnitInventorySizeBJ="Размер инвентаря у ",~Unit
UnitInventorySizeBJHint=

UnitCountBuffsExBJ="Количество магических эффектов (тип)"
UnitCountBuffsExBJ="Количество ",~Buff Type," магических эффектов ",~Buff Resist," на  ",~Unit," (",~Include/Exclude," таймер времени жизни, ",~Include/Exclude," ауры)"
UnitCountBuffsExBJHint=

GetTriggerEvalCount="Количество вычислений триггера"
GetTriggerEvalCount="Количество вычислений триггера ",~Trigger
GetTriggerEvalCountHint=

GetTriggerExecCount="Количество выполнения действий триггера"
GetTriggerExecCount="Количество выполнения действий триггера ",~Trigger
GetTriggerExecCountHint="Здесь подсчитывается количество срабатываний триггера при его истинных условиях."

QueuedTriggerCountBJ="Количество триггеров в очереди триггеров"
QueuedTriggerCountBJ="Количество триггеров в очереди триггеров"
QueuedTriggerCountBJHint="Используйте действие 'Триггер - Добавить в очередь триггеров' и 'Триггер - Удалить из очереди триггеров' для управления очередью триггеров."


// returns real
OperatorReal="Арифметика"
OperatorReal=~Value," ",~Operator," ",~Value
OperatorRealHint=

GetLocationX="X точки"
GetLocationX="X точки ",~Point
GetLocationXHint=

GetLocationY="Y точки"
GetLocationY="Y точки ",~Point
GetLocationYHint=

CameraSetupGetFieldSwap="Поле камеры объекта камеры"
CameraSetupGetFieldSwap=~Camera Field," объекта камеры ",~Camera Object
CameraSetupGetFieldSwapHint=

GetCameraField="Поле камеры текущей камеры"
GetCameraField=~Camera Field," текущего обзора камеры"
GetCameraFieldHint=

GetCameraTargetPositionX="Цель X текущей камеры"
GetCameraTargetPositionX="Цель X текущего обзора камеры"
GetCameraTargetPositionXHint=

GetCameraTargetPositionY="Цель Y Текущей Камеры"
GetCameraTargetPositionY="Цель Y текущего обзора камеры"
GetCameraTargetPositionYHint=

GetCameraTargetPositionZ="Цель Z Текущей Камеры"
GetCameraTargetPositionZ="Цель Z текущего обзора камеры"
GetCameraTargetPositionZHint=

GetCameraEyePositionX="Источник X текущей камеры"
GetCameraEyePositionX="Источник X текущего обзора камеры"
GetCameraEyePositionXHint=

GetCameraEyePositionY="Источник Y Текущей Камеры"
GetCameraEyePositionY="Источник Y текущего обзора камеры"
GetCameraEyePositionYHint=

GetCameraEyePositionZ="Источник Z Текущей Камеры"
GetCameraEyePositionZ="Источник Z текущего обзора камеры"
GetCameraEyePositionZHint=

GetLastTransmissionDurationBJ="Длительность последней произнесённой речи"
GetLastTransmissionDurationBJ="Длительность последней произнесённой речи"
GetLastTransmissionDurationBJHint=

I2R="Преобразовать целое число в действительное число"
I2R="Действительное число(",~Integer,")"
I2RHint=

S2R="Преобразовать строку в действительное число"
S2R="Действительное число(",~String,")"
S2RHint=

Deg2Rad="Преобразовать градусы в радианы"
Deg2Rad="Радианы(",~Degrees,")"
Deg2RadHint=

Rad2Deg="Преобразовать радианы в градусы"
Rad2Deg="Градусы(",~Radians,")"
Rad2DegHint=

TimerGetElapsed="Истёкшее время"
TimerGetElapsed="Истёкшее время для ",~Timer
TimerGetElapsedHint=

TimerGetRemaining="Оставшееся время"
TimerGetRemaining="Оставшееся время для ",~Timer
TimerGetRemainingHint=

TimerGetTimeout="Первоначальное время"
TimerGetTimeout="Первоначальное время для ",~Timer
TimerGetTimeoutHint=

GetDestructableLife="Здоровье"
GetDestructableLife="Текущее здоровье ",~Destructible
GetDestructableLifeHint="Разрушаемые теряют жизнь при атаке или при сборе урожая. Как и юниты, разрушаемые погибают, когда их жизнь доходит до 0."

GetDestructableMaxLife="Максимальное здоровье"
GetDestructableMaxLife="Максимальное здоровье ",~Destructible
GetDestructableMaxLifeHint="Разрушаемые теряют жизнь при атаке или при сборе урожая. Как и юниты, разрушаемые погибают, когда их жизнь доходит до 0."

GetDestructableOccluderHeight="Высота преграды"
GetDestructableOccluderHeight="Высота преграды ",~Destructible
GetDestructableOccluderHeightHint=

GetEventDamage="Полученные Повреждения"
GetEventDamage="Полученные повреждения"
GetEventDamageHint="При ответе на событие юнита 'Получение Повреждений', это относится к количеству полученных повреждений."

GetTournamentFinishSoonTimeRemaining="Оставшееся Время Турнира"
GetTournamentFinishSoonTimeRemaining="Оставшееся время турнира"
GetTournamentFinishSoonTimeRemainingHint="Кода игрок должен скоро закончить игру"

GetTimeOfDay="Время суток"
GetTimeOfDay="Время суток игры"
GetTimeOfDayHint="Это время игры, а не настоящее время."

GetTimeOfDayScalePercentBJ="Скорость Времени Суток"
GetTimeOfDayScalePercentBJ="Текущая скорость времени суток"
GetTimeOfDayScalePercentBJHint="Это действие возвращает скорость времени суток в процентном соотношении от скорости времени суток по умолчанию."

GetStoredRealBJ="Загрузить Вещественное Значение"
GetStoredRealBJ="Загрузить ",~Label," ",~Category," из ",~Game Cache
GetStoredRealBJHint="Если метка не найдена, эта функция возвращает значение 0."

LoadIntegerBJ="Load Integer Value (hashtable)"
LoadIntegerBJ="Load ",~Value," of ",~Value," from ",~Hashtable
LoadIntegerBJHint="Если метка не найдена, функция возвращает 0."

LoadRealBJ="Load Real Value (hashtable)"
LoadRealBJ="Load ",~Value," of ",~Value," from ",~Hashtable
LoadRealBJHint="Если метка не найдена, функция возвращает 0."

LoadStringBJ="Load String Value (hashtable)"
LoadStringBJ="Load ",~Value," of ",~Value," from ",~Hashtable
LoadStringBJHint="Если метка не найдена, функция возвращает пустую строку."

LoadBooleanBJ="Load Boolean Value (hashtable)"
LoadBooleanBJ="Load ",~Value," of ",~Value," from ",~Hashtable
LoadBooleanBJHint="Если метка не найдена, функция возвращает ошибку."

LoadPlayerHandleBJ="Load Player Handle"
LoadPlayerHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadPlayerHandleBJHint="Если метка не обнаружена, эта функция возвращает 0."

LoadWidgetHandleBJ="Load Widget Handle"
LoadWidgetHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadWidgetHandleBJHint="Если метка не обнаружена, эта функция возвращает 0."

LoadDestructableHandleBJ="Load Destructable Handle"
LoadDestructableHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadDestructableHandleBJHint="Если метка не обнаружена, эта функция возвращает 0."

LoadItemHandleBJ="Load Item Handle"
LoadItemHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadItemHandleBJHint="Если метка не обнаружена, эта функция возвращает 0."

LoadUnitHandleBJ="Load Unit Handle"
LoadUnitHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadUnitHandleBJHint="Если метка не обнаружена, эта функция возвращает 0."

LoadAbilityHandleBJ="Load Ability Handle"
LoadAbilityHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadAbilityHandleBJHint="Если метка не обнаружена, эта функция возвращает 0."

LoadTimerHandleBJ="Load Timer Handle"
LoadTimerHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadTimerHandleBJHint="Если метка не обнаружена, эта функция возвращает 0."

///LoadTriggerRegionHandleBJ="Load Region Handle"
///LoadTriggerRegionHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
///LoadTriggerRegionHandleBJHint="Если метка не обнаружена, эта функция возвращает 0."

LoadTriggerHandleBJ="Load Trigger Handle"
LoadTriggerHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadTriggerHandleBJHint="Если метка не обнаружена, эта функция возвращает 0."

LoadTriggerConditionHandleBJ="Load Triggercondition Handle"
LoadTriggerConditionHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadTriggerConditionHandleBJHint="Если метка не обнаружена, эта функция возвращает 0."

LoadTriggerActionHandleBJ="Load Triggeraction Handle"
LoadTriggerActionHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadTriggerActionHandleBJHint="Если метка не обнаружена, эта функция возвращает 0."

LoadTriggerEventHandleBJ="Load Eventid Handle"
LoadTriggerEventHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadTriggerEventHandleBJHint="Если метка не обнаружена, эта функция возвращает 0."

LoadForceHandleBJ="Load Force Handle"
LoadForceHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadForceHandleBJHint="Если метка не обнаружена, эта функция возвращает 0."

LoadGroupHandleBJ="Load Group Handle"
LoadGroupHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadGroupHandleBJHint="Если метка не обнаружена, эта функция возвращает 0."

LoadLocationHandleBJ="Load Location Handle"
LoadLocationHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadLocationHandleBJHint="Если метка не обнаружена, эта функция возвращает 0."

LoadRegionHandleBJ="Load Region Handle"
LoadRegionHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadRegionHandleBJHint="Если метка не обнаружена, эта функция возвращает 0."

LoadRectHandleBJ="Load Rect Handle"
LoadRectHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadRectHandleBJHint="Если метка не обнаружена, эта функция возвращает 0."

LoadBooleanExprHandleBJ="Load Boolexpr Handle"
LoadBooleanExprHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadBooleanExprHandleBJHint="Если метка не обнаружена, эта функция возвращает 0."

//LoadConditionFuncHandleBJ="Load Conditionfunc Handle"
//LoadConditionFuncHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
//LoadConditionFuncHandleBJHint="Если метка не обнаружена, эта функция возвращает 0."

//LoadFilterFuncHandleBJ="Load Filterfunc Handle"
//LoadFilterFuncHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
//LoadFilterFuncHandleBJHint="Если метка не обнаружена, эта функция возвращает 0."

LoadSoundHandleBJ="Load Sound Handle"
LoadSoundHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadSoundHandleBJHint="Если метка не обнаружена, эта функция возвращает 0."

//LoadRaceHandleBJ="Load Race Handle"
//LoadRaceHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
//LoadRaceHandleBJHint="Если метка не обнаружена, эта функция возвращает 0."

LoadEffectHandleBJ="Load Effect Handle"
LoadEffectHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadEffectHandleBJHint="Если метка не обнаружена, эта функция возвращает 0."

LoadUnitPoolHandleBJ="Load Unitpool Handle"
LoadUnitPoolHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadUnitPoolHandleBJHint="Если метка не обнаружена, эта функция возвращает 0."

LoadItemPoolHandleBJ="Load Itempool Handle"
LoadItemPoolHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadItemPoolHandleBJHint="Если метка не обнаружена, эта функция возвращает 0."

LoadQuestHandleBJ="Load Quest Handle"
LoadQuestHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadQuestHandleBJHint="Если метка не обнаружена, эта функция возвращает 0."

LoadQuestItemHandleBJ="Load Questitem Handle"
LoadQuestItemHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadQuestItemHandleBJHint="Если метка не обнаружена, эта функция возвращает 0."

LoadDefeatConditionHandleBJ="Load Defeatcondition Handle"
LoadDefeatConditionHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadDefeatConditionHandleBJHint="Если метка не обнаружена, эта функция возвращает 0."

LoadTimerDialogHandleBJ="Load Timerdialog Handle"
LoadTimerDialogHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadTimerDialogHandleBJHint="Если метка не обнаружена, эта функция возвращает 0."

LoadLeaderboardHandleBJ="Load Leaderboard Handle"
LoadLeaderboardHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadLeaderboardHandleBJHint="Если метка не обнаружена, эта функция возвращает 0."

LoadMultiboardHandleBJ="Load Multiboard Handle"
LoadMultiboardHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadMultiboardHandleBJHint="Если метка не обнаружена, эта функция возвращает 0."

LoadMultiboardItemHandleBJ="Load Multiboarditem Handle"
LoadMultiboardItemHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadMultiboardItemHandleBJHint="Если метка не обнаружена, эта функция возвращает 0."

LoadTrackableHandleBJ="Load Trackable Handle"
LoadTrackableHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadTrackableHandleBJHint="Если метка не обнаружена, эта функция возвращает 0."

LoadDialogHandleBJ="Load Dialog Handle"
LoadDialogHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadDialogHandleBJHint="Если метка не обнаружена, эта функция возвращает 0."

LoadButtonHandleBJ="Load Button Handle"
LoadButtonHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadButtonHandleBJHint="Если метка не обнаружена, эта функция возвращает 0."

//LoadVersionHandleBJ="Load Version Handle"
//LoadVersionHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
//LoadVersionHandleBJHint="Если метка не обнаружена, эта функция возвращает 0."

//LoadItemTypeHandleBJ="Load Itemtype Handle"
//LoadItemTypeHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
//LoadItemTypeHandleBJHint="Если метка не обнаружена, эта функция возвращает 0."

LoadTextTagHandleBJ="Load Texttag Handle"
LoadTextTagHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadTextTagHandleBJ="Если метка не обнаружена, эта функция возвращает 0."

LoadLightningHandleBJ="Load Lightning Handle"
LoadLightningHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadLightningHandleBJHint="Если метка не обнаружена, эта функция возвращает 0."

LoadImageHandleBJ="Load Image Handle"
LoadImageHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadImageHandleBJHint="Если метка не обнаружена, эта функция возвращает 0."

LoadUbersplatHandleBJ="Load Ubersplat Handle"
LoadUbersplatHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadUbersplatHandleBJHint="Если метка не обнаружена, эта функция возвращает 0."

LoadFogStateHandleBJ="Load Fogstate Handle"
LoadFogStateHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadFogStateHandleBJHint="Если метка не обнаружена, эта функция возвращает 0."

LoadFogModifierHandleBJ="Load Fogmodifier Handle"
LoadFogModifierHandleBJ="Load ",~Value," of ",~Value," in ",~Hashtable
LoadFogModifierHandleBJHint="Если метка не обнаружена, эта функция возвращает 0."

GetItemLifeBJ="Жизнь Предмета"
GetItemLifeBJ="Текущая жизни предмета ",~Item
GetItemLifeBJHint=

GetLightningColorRBJ="Красный Молния"
GetLightningColorRBJ="Красная ",~Lightning
GetLightningColorRBJHint=

GetLightningColorGBJ="Зеленая Молния"
GetLightningColorGBJ="Зеленая ",~Lightning
GetLightningColorGBJHint=

GetLightningColorBBJ="Синяя Молния"
GetLightningColorBBJ="Синяя ",~Lightning
GetLightningColorBBJHint=

GetLightningColorABJ="Прозрачность молнии"
GetLightningColorABJ="Прозрачность ",~Lightning
GetLightningColorABJHint=

GetRandomReal="Случайное Число"
GetRandomReal="Случайное действительное число в диапазоне ",~Minimum," до ",~Maximum
GetRandomRealHint=

GetRandomDirectionDeg="Случайный угол"
GetRandomDirectionDeg="Случайный угол"
GetRandomDirectionDegHint="Это случайное действительное число в диапазоне от 0 до 360, для использования в качестве угла направления боевой единицы."

GetRandomPercentageBJ="Случайное процентное соотношение"
GetRandomPercentageBJ="Случайное процентное соотношение"
GetRandomPercentageBJHint="Это случайное действительное число в диапазоне от 0 до 100 для использования в качестве процентного соотношения."

DistanceBetweenPoints="Расстояние между точками"
DistanceBetweenPoints="Расстояние между точками ",~Point," и ",~Point
DistanceBetweenPointsHint="Расстояние между двумя точками, не включая высоту."

AngleBetweenPoints="Угол между точками"
AngleBetweenPoints="Угол от ",~Point," до ",~Point
AngleBetweenPointsHint="Возвращает угол линии от одной точки до другой."

RMinBJ="Минимум"
RMinBJ="Минимум(",~Value 1,", ",~Value 2,")"
RMinBJHint=

RMaxBJ="Максимум"
RMaxBJ="Максимум(",~Value 1,", ",~Value 2,")"
RMaxBJHint=

RAbsBJ="Абсолютная величина"
RAbsBJ="Абсолютная величина(",~Value,")"
RAbsBJHint="Вычисляет абсолютную величину числа (положительное значение). Например, число -15.00 здесь будет равным 15.00, 0.00 - 0.00, а 8.00 - 8.00"

RSignBJ="Знак"
RSignBJ="Знак(",~Value,")"
RSignBJHint="Вычисляет знак числа. Значение отрицательного числа составляет -1. Значение неотрицательного числа - 1."

ModuloReal="По модулю"
ModuloReal=~Dividend," по модулю ",~Divisor
ModuloRealHint="Вычисляет остаток от деления. Пример: 9.00 по модулю 2.50 = 1.50"

Pow="Степень"
Pow="Значение ",~Value," в ",~Power," степени"
PowHint=

SquareRoot="Квадратный корень"
SquareRoot="Квадратный корень(",~Value,")"
SquareRootHint=

SinBJ="Синус"
SinBJ="Синус(",~Angle,")"
SinBJHint="Значение угла здесь будет считаться в градусах."

CosBJ="Косинус"
CosBJ="Косинус(",~Angle,")"
CosBJHint="Значение угла здесь будет считаться в градусах."

TanBJ="Тангенс"
TanBJ="Тангенс(",~Angle,")"
TanBJHint="Значение угла здесь будет считаться в градусах."

AsinBJ="Арксинус"
AsinBJ="Арксинус(",~Value,")"
AsinBJHint="Возвращаемый угол будет задан в градусах."

AcosBJ="Арккосинус"
AcosBJ="Арккосинус(",~Value,")"
AcosBJHint="Возвращаемый угол будет задан в градусах."

AtanBJ="Арктангенс (от угла)"
AtanBJ="Арктангенс(",~Value,")"
AtanBJHint="Возвращаемый угол будет задан в градусах."

Atan2BJ="Арктангенс (от треугольника)"
Atan2BJ="Арктангенс(",~Y,", ",~X,")"
Atan2BJHint="Возвращаемый угол будет задан в градусах."

GetPlayerHandicapXPBJ="Получение опыта героями"
GetPlayerHandicapXPBJ=~Player," получение опыта героями"
GetPlayerHandicapXPBJHint="Уровень получения опыта героями игрока определяется в процентах, стандартным считается - 100%."

GetPlayerHandicapBJ="Фора"
GetPlayerHandicapBJ=~Player," фора"
GetPlayerHandicapBJHint="Уровень форы определяется в процентах, стандартным считается - 100%."

GetRectCenterX="Центр X области"
GetRectCenterX="Центр X",~Region 
GetRectCenterXHint=

GetRectCenterY="Центр Y области"
GetRectCenterY="Центр Y",~Region 
GetRectCenterYHint=

GetRectMinX="Мин. X области"
GetRectMinX="Мин. X ",~Region 
GetRectMinXHint=

GetRectMinY="Мин. Y области"
GetRectMinY="Мин. Y ",~Region 
GetRectMinYHint=

GetRectMaxX="Макс. X области"
GetRectMaxX="Макс. X ",~Region 
GetRectMaxXHint=

GetRectMaxY="Макс. Y области"
GetRectMaxY="Макс. Y ",~Region 
GetRectMaxYHint=

GetRectWidthBJ="Ширина области"
GetRectWidthBJ="Ширина ",~Region 
GetRectWidthBJHint=

GetRectHeightBJ="Высота области"
GetRectHeightBJ="Высота ",~Region 
GetRectHeightBJHint=

GetSoundDurationBJ="Длительность звука"
GetSoundDurationBJ="Длительность ",~Sound
GetSoundDurationBJHint="Возвращает длительность звука в секундах."

GetSoundFileDurationBJ="Длительность музыки"
GetSoundFileDurationBJ="Длительность ",~Music
GetSoundFileDurationBJHint="Возвращает длительность музыки в секундах."

GetUnitStateSwap="Свойство"
GetUnitStateSwap=~Property," для ",~Unit
GetUnitStateSwapHint=

GetUnitLifePercent="Процент здоровья"
GetUnitLifePercent="Процент здоровья у ",~Unit
GetUnitLifePercentHint=

GetUnitManaPercent="Процент маны"
GetUnitManaPercent="Процент маны у ",~Unit
GetUnitManaPercentHint=

GetUnitFacing="Угол поворота"
GetUnitFacing="Поворот у ",~Unit
GetUnitFacingHint="Угол поворота задаётся в градусах, где 0 - восток, 90 - север, 180 - запад, 270 - юг."

GetUnitMoveSpeed="Скорость движения (текущая)"
GetUnitMoveSpeed="Текущая скорость движения у ",~Unit
GetUnitMoveSpeedHint="Скорость движения обычно находится между 150 и 300."

GetUnitDefaultMoveSpeed="Скорость движения (по умолчанию)"
GetUnitDefaultMoveSpeed="Скорость движения по умолчанию у ",~Unit
GetUnitDefaultMoveSpeedHint="Скорость движения обычно находится между 150 и 300."

GetUnitAcquireRange="Дистанция охраны (текущая)"
GetUnitAcquireRange="Текущая дистанция охраны у ",~Unit
GetUnitAcquireRangeHint=

GetUnitDefaultAcquireRange="Дистанция охраны (по умолчанию)"
GetUnitDefaultAcquireRange="Дистанция охраны по умолчанию у ",~Unit
GetUnitDefaultAcquireRangeHint=

GetUnitTurnSpeed="Скорость разворота (текущая)"
GetUnitTurnSpeed="Текущая скорость разворота ",~Unit
GetUnitTurnSpeedHint="Скорость разворота боевых единиц может принимать значения от 0.00 до 1.00"

GetUnitDefaultTurnSpeed="Скорость разворота (по умолчанию)"
GetUnitDefaultTurnSpeed="Скорость разворота по умолчанию ",~Unit
GetUnitDefaultTurnSpeedHint="Скорость разворота боевых единиц может принимать значения от 0.00 до 1.00"

GetUnitPropWindowBJ="Угол окна свойств (текущий)"
GetUnitPropWindowBJ="Текущий угол окна свойств у ",~Unit
GetUnitPropWindowBJHint=

GetUnitDefaultPropWindowBJ="Угол окна свойств (по умолчанию)"
GetUnitDefaultPropWindowBJ="Угол окна свойств по умолчанию у ",~Unit
GetUnitDefaultPropWindowBJHint=

GetUnitFlyHeight="Высота полёта (текущая)"
GetUnitFlyHeight="Текущая высота полёта у ",~Unit
GetUnitFlyHeightHint="Только летающие и парящие боевые единицы могут изменять высоту полёта."

GetUnitDefaultFlyHeight="Высота полёта (по умолчанию)"
GetUnitDefaultFlyHeight="Высота полёта по умолчанию у ",~Unit
GetUnitDefaultFlyHeightHint=


// returns string
OperatorString="Сцеплённые строки"
OperatorString=~String 1," + ",~String 2
OperatorStringHint=

SubStringBJ="Подстрока"
SubStringBJ="Подстрока(",~String,", ",~Start,", ",~End,")"
SubStringBJHint="Пример:  Подстрока(''Grunts stink'', 2, 4) = ''run''."

GetHandleIdBJ="Получить ID"
GetHandleIdBJ="ID(ключ) ",~Handle
GetHandleIdBJHint="Создаёт ключ для использования в хэш-таблице."

StringHashBJ="Получить ID строки"
StringHashBJ="ID(ключ) ",~String
StringHashBJHint="Создаёт ключ для использования в хэш-таблице."

I2S="Преобразовать целое число в строку"
I2S="Строка(",~Integer,")"
I2SHint=

R2S="Преобразовать действительное число в строку"
R2S="Строка(",~Real,")"
R2SHint=

R2SW="Преобразовать действительное число в форматированную строку"
R2SW="Строка(",~Real,", ",~Width,", ",~Precision,")"
R2SWHint="Примеры:  Строка(1.234, 7, 2) = ''   1.23''.  Строка(1.234, 2, 5) = ''1.23400''."

OrderId2StringBJ="Преобразовать приказ в строку"
OrderId2StringBJ="Строка(",~Order,")"
OrderId2StringBJHint="Примеры строк приказа: 'harvest', 'move', 'smart', 'attack', 'stop'."

UnitId2StringBJ="Преобразовать тип юнита в строку"
UnitId2StringBJ="Строка(",~Unit-Type,")"
UnitId2StringBJHint=

StringIdentity="Преобразовать внешнюю строку"
StringIdentity="Внешняя строка(",~String,")"
StringIdentityHint="Используйте это, чтобы быть уверенным, что строка сделана внешней в war3map.wts"

StringCase="Преобразовать регистр строки"
StringCase="Строка(",~String,") как ",~Lower/Upper Case
StringCaseHint="Все буквы в строке будут изменены для выбранного регистра."

GetDestructableName="Имя разрушаемого объекта"
GetDestructableName="Имя ",~Destructible
GetDestructableNameHint=

GetEventPlayerChatString="Введенная строка чата"
GetEventPlayerChatString="Введенная строка чата"
GetEventPlayerChatStringHint=

GetEventPlayerChatStringMatched="Соответствующая строка чата"
GetEventPlayerChatStringMatched="Соответствующая строка чата"
GetEventPlayerChatStringMatchedHint=

GetSaveBasicFilename="Имя файла сохранённой игры"
GetSaveBasicFilename="Имя файла сохранённой игры"
GetSaveBasicFilenameHint="При ответе 'Игра - Сохранение игры', это значит, что имя файла сохранено."

GetAbilityName="Название способности"
GetAbilityName="Название ",~Ability
GetAbilityNameHint=

GetAbilityEffectBJ="Файловый путь к эффекту способности"
GetAbilityEffectBJ="Путь к ",~Ability," ",~EffectType," (index ",~Index,")"
GetAbilityEffectBJHint="Здесь возвращается файловый путь модели эффекта способности."

GetAbilitySoundBJ="Название звука эффекта способности"
GetAbilitySoundBJ="Название ",~Ability," ",~SoundType
GetAbilitySoundBJHint=

GetStoredStringBJ="Загрузить значение строки"
GetStoredStringBJ="Загрузить ",~Label," ",~Category," из ",~Game Cache
GetStoredStringBJHint="Если метка не найдена, эта функция возвращает пустую строку."

GetHeroProperName="Собственное имя героя"
GetHeroProperName="Собственное имя героя ",~Hero
GetHeroProperNameHint=

GetItemName="Название предмета"
GetItemName="Название предмета ",~Item
GetItemNameHint=

MultiboardGetTitleText="Название статистической таблицы"
MultiboardGetTitleText="Название статистической таблицы ",~Multiboard
MultiboardGetTitleTextHint=

GetPlayerName="Имя игрока"
GetPlayerName="Имя ",~Player
GetPlayerNameHint=

GetTriggerName="Имя триггера"
GetTriggerName="Имя текущего триггера"
GetTriggerNameHint=

GetUnitName="Имя боевой единицы"
GetUnitName="Имя боевой единицы ",~Unit
GetUnitNameHint=


// returns location
GetRectCenter="Центр области"
GetRectCenter="Центр ",~Region
GetRectCenterHint=

GetRandomLocInRect="Случайная точка в области"
GetRandomLocInRect="Случайная точка в ",~Region
GetRandomLocInRectHint=

OffsetLocation="Точка со смещением"
OffsetLocation=~Point," смещение на (",~X,", ",~Y,")"
OffsetLocationHint="Значения смещения - (X, Y)."

PolarProjectionBJ="Точка с полярным смещением"
PolarProjectionBJ=~Point," смещение на ",~Distance," по отношению к ",~Angle," градусов"
PolarProjectionBJHint=

CameraSetupGetDestPositionLoc="Цель объектива камеры"
CameraSetupGetDestPositionLoc="Цель ",~Camera Object
CameraSetupGetDestPositionLocHint=

GetCameraTargetPositionLoc="Цель текущей камеры"
GetCameraTargetPositionLoc="Цель обзора текущей камеры"
GetCameraTargetPositionLocHint=

GetCameraEyePositionLoc="Источник текущей камеры"
GetCameraEyePositionLoc="Источник обзора текущей камеры"
GetCameraEyePositionLocHint=

Location="Преобразовать координаты точки"
Location="Точка(",~X,", ",~Y,")"
LocationHint=

GetDestructableLoc="Позиция разрушаемого"
GetDestructableLoc="Позиция ",~Destructible
GetDestructableLocHint=

GetOrderPointLoc="Целевая точка изданного приказа"
GetOrderPointLoc="Целевая точка изданного приказа"
GetOrderPointLocHint="При ответе 'Издан приказ, назначенный точке', это ссылка на цель приказа."

GetSpellTargetLoc="Целевая точка применённой способности"
GetSpellTargetLoc="Целевая точка применённой способности"
GetSpellTargetLocHint=

GetItemLoc="Позиция предмета"
GetItemLoc="Позиция ",~Item
GetItemLocHint=

WaygateGetDestinationLocBJ="Пункт назначения портала"
WaygateGetDestinationLocBJ="Пункт назначения ",~Way Gate
WaygateGetDestinationLocBJHint=

GetPlayerStartLocationLoc="Месторасположение старта Игрока"
GetPlayerStartLocationLoc=~Player," стартовое положение"
GetPlayerStartLocationLocHint=

GetUnitLoc="Позиция боевой единицы"
GetUnitLoc="Позиция ",~Unit
GetUnitLocHint=

GetUnitRallyPoint="Сборный пункт здания"
GetUnitRallyPoint="Сборный пункт ",~Unit," на точку"
GetUnitRallyPointHint=


// returns rect
GetCurrentCameraBoundsMapRectBJ="Пределы текущей камеры"
GetCurrentCameraBoundsMapRectBJ="Пределы текущей камеры"
GetCurrentCameraBoundsMapRectBJHint="Это зона, в которую нацеливать камеру в данный момент запрещено."

GetCameraBoundsMapRect="Начальные пределы камеры"
GetCameraBoundsMapRect="Начальные пределы камеры"
GetCameraBoundsMapRectHint="Это зона инициализации карты, в которую нацеливать камеру в данный момент запрещено."

GetPlayableMapRect="Зона игровой карты"
GetPlayableMapRect="Зона игровой карты"
GetPlayableMapRectHint="Это зона, в которой запрещены боевые единицы. Обычно эта зона находится сразу за пределами камеры."

GetEntireMapRect="Вся карта"
GetEntireMapRect="Вся карта"
GetEntireMapRectHint="Это вся карта, включая зоны, до которых обычно не достигают боевые единицы."

OffsetRectBJ="Смещение ширины области"
OffsetRectBJ=~Region," смещение на (",~X,", ",~Y,")"
OffsetRectBJHint="Значения смещения - (X, Y)."

RectFromCenterSizeBJ="Преобразовать точку с размерами в область"
RectFromCenterSizeBJ="Область центрирована на ",~Point," с размерами (",~Width,", ",~Height,")"
RectFromCenterSizeBJHint="Значения размеров - это (ширина, высота)."

Rect="Преобразовать координаты в область"
Rect="Регион(",~X1,", ",~Y1,", ",~X2,", ",~Y2,")"
RectHint="Выбрать четыре координаты (мин. X, мин. Y, макс. X, макс. Y), чтобы определить прямоугольный регион на карте."

RectFromLoc="Преобразовать точки в область"
RectFromLoc="Регион(",~Point 1,", ",~Point 2,")"
RectFromLocHint="Выбрать две точки, чтобы определить прямоугольную область на карте."


// returns unit
GetLastCreatedUnit="Последняя созданная боевая единица"
GetLastCreatedUnit="Последняя созданная боевая единица"
GetLastCreatedUnitHint="Это последняя боевая единица, созданная через действие триггера 'Боевая единица - Создать'."

GetLastRestoredUnitBJ="Последняя загруженная боевая единица"
GetLastRestoredUnitBJ="Последняя загруженная боевая единица"
GetLastRestoredUnitBJHint="Это последняя боевая единица, загруженная действием триггера 'Кэш игры - Загрузить боевую единицу'."

GetLastReplacedUnitBJ="Последняя заменённая боевая единица"
GetLastReplacedUnitBJ="Последняя заменённая боевая единица"
GetLastReplacedUnitBJHint="Это последняя боевая единица, созданная действием триггера 'Боевая единица - Заменить'."

GetLastHauntedGoldMine="Последний проклятый золотой рудник"
GetLastHauntedGoldMine="Последний проклятый золотой рудник"
GetLastHauntedGoldMineHint="Это последний проклятый золотой рудник, проклятый действием 'Нейтральное здание - Проклясть золотой рудник для игрока (мгновенно)'."

GetEnumUnit="Выбранная боевая единица"
GetEnumUnit="Выбранная боевая единица"
GetEnumUnitHint="При использовании действия 'Выбрать каждую боевую единицу...', это означает, что каждая боевая единица считается выбранной."

GetFilterUnit="Соответствующая боевая единица"
GetFilterUnit="Соответствующая боевая единица"
GetFilterUnitHint="Используйте для нахождения боевой единицы, рассматриваемой для функций 'Боевая единица соответствует условию'."

GroupPickRandomUnit="Случайная боевая единица из отряда"
GroupPickRandomUnit="Случайная боевая единица из ",~Unit Group
GroupPickRandomUnitHint=

GetAttackedUnitBJ="Атакованная боевая единица"
GetAttackedUnitBJ="Атакованная боевая единица"
GetAttackedUnitBJHint="При ответе на событие боевой единицы 'Атакован', эта опция ссылается на боевую единицу, которая подвергается атаке."

GetAttacker="Атакующая боевая единица"
GetAttacker="Атакующая боевая единица"
GetAttackerHint="При ответе на событие боевой единицы 'Атакован', ссылается на боевую единицу, которая атакует."

GetBuyingUnit="Делающая покупки боевая единица"
GetBuyingUnit="Делающая покупки боевая единица"
GetBuyingUnitHint="При ответе на события боевой единицы 'Покупает боевую единицу', 'Покупает предмет', 'Продаёт предмет', ссылается на боевую единицу, осуществляющая покупку."

GetCancelledStructure="Отменённое здание"
GetCancelledStructure="Отменённое здание"
GetCancelledStructureHint="При ответе на событие здания 'Отменяет строительство', ссылается на здание, строительство которого было отменено."

GetSpellAbilityUnit="Применяющая способность боевая единица"
GetSpellAbilityUnit="Применяющая способность боевая единица"
GetSpellAbilityUnitHint="При ответе на события боевой единицы 'Направляет/Применяет/и т.д. способность', ссылается на боевую единицу, применяющую эту способность."

GetConstructedStructure="Построенное здание"
GetConstructedStructure="Построенное здание"
GetConstructedStructureHint="При ответе на событие здания 'Заканчивает строительство', ссылается на здание, чьё строительство было завершено."

GetConstructingStructure="Строящееся здание"
GetConstructingStructure="Строящееся здание"
GetConstructingStructureHint="При ответе на событие здания 'Начинает строительство', ссылается на здание, чьё строительство было начато."

GetEventDamageSource="Урон от источника"
GetEventDamageSource="Урон от источника"
GetEventDamageSourceHint=

GetDecayingUnit="Разлагающаяся боевая единица"
GetDecayingUnit="Разлагающаяся боевая единица"
GetDecayingUnitHint="При ответе на событие боевой единицы 'Разлагается', ссылается на боевую единицу, которая разлагается."

GetDyingUnit="Умирающая боевая единица"
GetDyingUnit="Умирающий боевая единица"
GetDyingUnitHint="При ответе на событие боевой единицы 'Умирает', ссылается на боевую единицу, которая умирает."

GetEnteringUnit="Входящая боевая единица"
GetEnteringUnit="Входящая боевая единица"
GetEnteringUnitHint="При ответе на событие боевой единица 'Боевая единица вошла в область', ссылается на боевую единицу, которая вошла в область."

GetManipulatingUnit="Использующий предмет герой"
GetManipulatingUnit="Использующий предмет герой"
GetManipulatingUnitHint="При ответе на события героя 'Использует/Приобретает/Теряет предмет', ссылается на героя, который пользуется предметом."

GetKillingUnitBJ="Убивающая боевая единица"
GetKillingUnitBJ="Убивающая боевая единица"
GetKillingUnitBJHint="При ответе на событие боевой единицы 'Умирает', ссылается на убийцу умирающей боевой единицы. В случаях, когда боевая единица умирает не от убивающей её другой боевой единицы, возвращается ответ 'Нет боевой единицы'."

GetLearningUnit="Изучающий способность герой"
GetLearningUnit="Изучающий способность герой"
GetLearningUnitHint="При ответе на событие героя 'Приобретает способность', ссылается на героя, который изучает эту способность."

GetLeavingUnit="Покидающая боевая единица"
GetLeavingUnit="Покидающая боевая единица"
GetLeavingUnitHint="При ответе на событие боевой единицы 'Боевая единица покинула область', ссылается на боевую единицу, которая покинула область."

GetLevelingUnit="Повышающий уровень герой"
GetLevelingUnit="Повышающий уровень герой"
GetLevelingUnitHint="При ответе на событие героя 'Получает уровень', ссылается на героя, получающего уровень."

GetLoadedUnitBJ="Погружаемая боевая единица"
GetLoadedUnitBJ="Погружаемая боевая единица"
GetLoadedUnitBJHint="При ответе на событие боевой единицы 'Погружен на транспорт', ссылается на боевую единицу, которая погружается в транспорт."

GetOrderedUnit="Получившая приказ боевая единица"
GetOrderedUnit="Получившая приказ боевая единица"
GetOrderedUnitHint="При ответе на событие боевой единицы 'Получил приказ', ссылается на боевую единицу, которая получила данный приказ."

GetChangingUnit="Меняющая владельца боевая единица"
GetChangingUnit="Меняющая владельца боевая единица"
GetChangingUnitHint="При ответе на событие боевой единицы 'Меняет владельца', ссылается на боевую единицу, которая сменила своего владельца."

GetResearchingUnit="Исследующее здание"
GetResearchingUnit="Исследующее здание"
GetResearchingUnitHint="При ответе на события здания 'Начинает/Отменяет/Заканчивает исследование', ссылается на здание, проводящее исследование."

GetRevivableUnit="Ставший воскрешаемым герой"
GetRevivableUnit="Ставший воскрешаемым герой"
GetRevivableUnitHint="При ответе на событие героя 'Становится воскрешаемым', ссылается на героя, который стал доступным для воскрешения."

GetRevivingUnit="Воскрешающийся герой"
GetRevivingUnit="Воскрешающийся герой"
GetRevivingUnitHint="При ответе на события героя 'Начинает/Прерывает/Завершает воскрешение', ссылается на героя, которого воскрешают в алтаре."

GetSellingUnit="Продающий товар магазин"
GetSellingUnit="Продающий товар магазин"
GetSellingUnitHint="При ответе на события боевой единицы 'Покупает боевую единицу', 'Покупает предмет', 'Продаёт предмет', ссылается на магазин, осуществляющий продажу."

GetSoldUnit="Купленная боевая единица"
GetSoldUnit="Купленная боевая единица"
GetSoldUnitHint="При ответе на событие боевой единицы 'Покупает боевую единицу', ссылается на боевую единицу, которую купили."

GetSummonedUnit="Призванная боевая единица"
GetSummonedUnit="Призванная боевая единица"
GetSummonedUnitHint="При ответе на событие боевой единицы 'Призывает боевую единицу', ссылается на боевую единицу, которую призывают."

GetSummoningUnit="Призывающая боевая единица"
GetSummoningUnit="Призывающая боевая единица"
GetSummoningUnitHint="При ответе на событие боевой единицы 'Призывает боевую единицу', ссылается на боевую единицу, которая осуществляет призывание боевой единицы."

GetOrderTargetUnit="Полученный приказ нацеливания на боевую единицу"
GetOrderTargetUnit="Полученный приказ нацеливания на боевую единицу"
GetOrderTargetUnitHint="При ответе на событие боевой единицы 'Получил приказ нацеливания на объект', ссылается на цель данного приказа."

GetSpellTargetUnit="Применяемая способность нацеливается на боевую единицу"
GetSpellTargetUnit="Применяемая способность нацеливается на боевую единицу"
GetSpellTargetUnitHint="При ответе на событие боевой единицы 'Направляет/Применяет/и т.д. способность', ссылается на цель данной способности."

GetEventTargetUnit="Обнаруженный в зоне досягаемости противник"
GetEventTargetUnit="Обнаруженный в зоне досягаемости противник"
GetEventTargetUnitHint="При ответе на событие боевой единицы 'Обнаружил противника в зоне досягаемости', ссылается на полученную цель."

GetTrainedUnit="Подготовленная боевая единица"
GetTrainedUnit="Подготовленная боевая единица"
GetTrainedUnitHint="При ответе на событие боевой единицы 'Заканчивает подготовку боевой единицы', ссылается на боевую единицу, которая была подготовлена."

GetTransportUnitBJ="Перевозящий транспорт"
GetTransportUnitBJ="Перевозящий транспорт"
GetTransportUnitBJHint="При ответе на событие боевой единицы 'Погружен на транспорт', ссылается на транспорт, в который была загружена эта боевая единица."

GetTriggerUnit="Инициирующая боевая единица"
GetTriggerUnit="Инициирующая боевая единица"
GetTriggerUnitHint="При ответе на любое событие боевой единицы, ссылается на боевую единицу данного события."

GetUnitRallyUnit="Указанная точка сбора на боевой единице"
GetUnitRallyUnit="Указанная точка сбора для здания ",~Unit," на боевой единице"
GetUnitRallyUnitHint="Если точка сбора не указана на какой-либо боевой единице, то функция возвратит 'Нет боевой единицы'."


// returns unitcode
GetUnitTypeId="Тип боевой единицы"
GetUnitTypeId="Тип боевой единицы ",~Unit
GetUnitTypeIdHint=

ChooseRandomCreepBJ="Случайная боевая единица с уровнем"
ChooseRandomCreepBJ="Случайная боевая единица с ",~Level," уровнем"
ChooseRandomCreepBJHint="Укажите '-1' для любого уровня."

ChooseRandomNPBuildingBJ="Случайное нейтральное здание"
ChooseRandomNPBuildingBJ="Случайное нейтральное здание"
ChooseRandomNPBuildingBJHint=

String2UnitIdBJ="Преобразовать строку в тип боевой единицы"
String2UnitIdBJ="Боевая единица(",~String,")"
String2UnitIdBJHint=

GetTrainedUnitType="Подготовленный тип боевой единицы"
GetTrainedUnitType="Подготовленный тип боевой единицы"
GetTrainedUnitTypeHint="При ответе на события боевой единицы 'Начинает/Отменяет/Заканчивает подготовку боевой единицы', ссылается на тип боевой единицы, которую подготавливают."


// returns ordercode
String2OrderIdBJ="Преобразовать строку в приказ"
String2OrderIdBJ="Приказ(",~String,")"
String2OrderIdBJHint="Примеры строк приказа:  'harvest', 'move', 'smart', 'attack'."

UnitId2OrderIdBJ="Преобразовать тип боевой единицы в приказ"
UnitId2OrderIdBJ="Приказ(",~Unit-Type,")"
UnitId2OrderIdBJHint=

GetIssuedOrderIdBJ="Отданный приказ"
GetIssuedOrderIdBJ="Отданный приказ"
GetIssuedOrderIdBJHint="При ответе на событие боевой единицы 'Получил приказ', ссылается на отданный приказ."

GetUnitCurrentOrder="Текущий приказ боевой единицы"
GetUnitCurrentOrder="Текущий приказ ",~Unit
GetUnitCurrentOrderHint=


// returns destructable
GetLastCreatedDestructable="Последний созданный разрушаемый объект"
GetLastCreatedDestructable="Последний созданный разрушаемый объект"
GetLastCreatedDestructableHint="Это последний разрушаемый объект, созданный через триггер-действие 'Разрушаемый объект - Создать'."

RandomDestructableInRectSimpleBJ="Случайный разрушаемый объект в области"
RandomDestructableInRectSimpleBJ="Случайный разрушаемый объект в ",~Region
RandomDestructableInRectSimpleBJHint=

RandomDestructableInRectBJ="Случайный разрушаемый объект в области соответствует условию"
RandomDestructableInRectBJ="Случайный разрушаемый объект в ",~Region," соответствует ",~Condition
RandomDestructableInRectBJHint="Используйте 'Соответствующей разрушаемый объект' для ссылки на рассматриваемый разрушаемый объект."

GetEnumDestructable="Выбранный разрушаемый объект"
GetEnumDestructable="Выбранный разрушаемый объект"
GetEnumDestructableHint="При использовании действия 'Выбрать все разрушаемые объекты...', ссылается на каждый разрушаемый объект при его выборе."

GetFilterDestructable="Соответствующий разрушаемый объект"
GetFilterDestructable="Соответствующий разрушаемый объект"
GetFilterDestructableHint="Используйте для ссылки на разрушаемый объект, рассматриваемый для функций 'Случайный разрушаемый объект'."

GetDyingDestructable="Уничтоженный разрушаемый объект"
GetDyingDestructable="Уничтоженный разрушаемый объект"
GetDyingDestructableHint="При ответе на событие 'Разрушаемый объект уничтожен', ссылается на разрушаемый объект, который уничтожен."

GetOrderTargetDestructable="Разрушаемый объект-цель отданного приказа"
GetOrderTargetDestructable="Разрушаемый объект-цель отданного приказа"
GetOrderTargetDestructableHint=

GetSpellTargetDestructable="Разрушаемый объект-цель применяемой способности"
GetSpellTargetDestructable="Разрушаемый объект-цель применяемой способности"
GetSpellTargetDestructableHint=

GetUnitRallyDestructable="Точка сбора на разрушаемом объекте"
GetUnitRallyDestructable="Точка сбора для ",~Unit," на разрушаемом объекте"
GetUnitRallyDestructableHint=


// returns destructablecode
GetDestructableTypeId="Разрушаемый объект"
GetDestructableTypeId="Разрушаемый объект ",~Destructible
GetDestructableTypeIdHint=


// returns item
GetLastCreatedItem="Последний созданный предмет"
GetLastCreatedItem="Последний созданный предмет"
GetLastCreatedItemHint="Это последний созданный предмет через триггер-действие 'Предмет - Создать' или 'Герой - Создать предмет для героя'."

GetLastRemovedItem="Последний брошенный предмет"
GetLastRemovedItem="Последний брошенный предмет"
GetLastRemovedItemHint="Это последний брошенный предмет через действие-триггер 'Герой - Бросить предмет'."

RandomItemInRectSimpleBJ="Случайный предмет в области"
RandomItemInRectSimpleBJ="Случайный предмет в ",~Region
RandomItemInRectSimpleBJHint=

RandomItemInRectBJ="Случайный предмет в области соответствует условию"
RandomItemInRectBJ="Случайный предмет в ",~Region," соответствует ",~Condition
RandomItemInRectBJHint="Используйте 'Соответствующий предмет' для ссылки на рассматриваемый предмет."

GetEnumItem="Выбранный предмет"
GetEnumItem="Выбранный предмет"
GetEnumItemHint="При использовании действия 'Выбрать каждый предмет...' ссылается на каждый выбранный предмет."

GetFilterItem="Соответствующий предмет"
GetFilterItem="Соответствующий предмет"
GetFilterItemHint="Используйте для ссылки на предмет, рассматривающийся для функций 'Случайный предмет'."

UnitItemInSlotBJ="Переносимый героем предмет"
UnitItemInSlotBJ="Предмет, переносимый ",~Hero," в слоте ",~Index
UnitItemInSlotBJHint=

GetItemOfTypeFromUnitBJ="Переносимый героем предмет типа"
GetItemOfTypeFromUnitBJ="Предмет, переносимый ",~Hero," типа ",~Item-Type
GetItemOfTypeFromUnitBJHint=

GetManipulatedItem="Используемый предмет"
GetManipulatedItem="Используемый предмет"
GetManipulatedItemHint="При ответе на события боевой единицы 'Использует/Получает/Теряет предмет', ссылается на предмет, который используют."

GetSoldItem="Купленный предмет"
GetSoldItem="Купленный предмет"
GetSoldItemHint="При ответе на событие боевой единицы 'Покупает предмет', ссылается на покупаемый предмет."

GetOrderTargetItem="Предмет-цель отданного приказа"
GetOrderTargetItem="Предмет-цель отданного приказа"
GetOrderTargetItemHint="При ответе на событие боевой единицы с предметом-целью 'Получил приказ нацеливания на объект', ссылается на цель данного приказа."

GetSpellTargetItem="Предмет-цель применяемой способности"
GetSpellTargetItem="Предмет-цель применяемой способности"
GetSpellTargetItemHint=


// returns itemtype
GetItemType="Класс предмета предмета"
GetItemType="Класс предмета ",~Item
GetItemTypeHint=


// returns itemcode
GetItemTypeId="Тип предмета"
GetItemTypeId="Тип предмета ",~Item
GetItemTypeIdHint=

ChooseRandomItemBJ="Случайный тип предмета"
ChooseRandomItemBJ="Случайный тип предмета с уровнем ",~Level,"
ChooseRandomItemBJHint="'-1' - любой уровень."

ChooseRandomItemExBJ="Случайный тип и класс предмета"
ChooseRandomItemExBJ="Случайный тип предмета с уровнем ",~Level," и классом ",~Class,"
ChooseRandomItemExBJHint="'-1' - любой уровень."


// returns techcode
GetResearched="Исследованное улучшение"
GetResearched="Исследованное улучшение"
GetResearchedHint="При ответе на событие боевой единицы 'Начинает/Отменяет/Завершает исследование', ссылается на исследуемое улучшение."


// returns abilcode
GetSpellAbilityId="Применяемая способность"
GetSpellAbilityId="Применяемая способность"
GetSpellAbilityIdHint="При ответе на событие боевой единицы 'Направляет/Применяет/и т.д. способность', ссылается на применяемую способность."


// returns heroskillcode
GetLearnedSkillBJ="Выученная героем способность"
GetLearnedSkillBJ="Выученная героем способность"
GetLearnedSkillBJHint=


// returns player
GetEnumPlayer="Выбранный игрок"
GetEnumPlayer="Выбранный игрок"
GetEnumPlayerHint="При использовании действия 'Выбрать каждого игрока...', ссылается на каждого игрока при его выборе."

GetFilterPlayer="Соответствующий условиям игрок"
GetFilterPlayer="Соответствующий условиям игрок"
GetFilterPlayerHint="Используйте для ссылки на игрока, рассматриваемого для функции 'Все игроки соответствуют условию'."

GetOwningPlayer="Владелец боевой единицы"
GetOwningPlayer="Владелец боевой единицы ",~Unit
GetOwningPlayerHint=

GetItemPlayer="Владелец предмета"
GetItemPlayer="Владелец предмета ",~Item
GetItemPlayerHint=

ForcePickRandomPlayer="Случайный игрок из группы игроков"
ForcePickRandomPlayer="Случайный игрок из группы игроков ",~Player Group
ForcePickRandomPlayerHint=

ConvertedPlayer="Номер игрока"
ConvertedPlayer="Игрок(",~Player Index,")"
ConvertedPlayerHint="Номер игрока варьируется от 1 до 28."

GetChangingUnitPrevOwner="Предыдущий владелец"
GetChangingUnitPrevOwner="Предыдущий владелец"
GetChangingUnitPrevOwnerHint="Имеет отношение к предыдущему владельцу боевой единице при ответе на событие 'Боевая единица меняет владельца'."

GetTriggerPlayer="Инициирующий игрок"
GetTriggerPlayer="Инициирующий игрок"
GetTriggerPlayerHint=

LeaderboardGetIndexedPlayerBJ="Позиция игрока в таблице рекордов"
LeaderboardGetIndexedPlayerBJ="Позиция игрока ",~Position," в таблице рекордов ",~Leaderboard,"."
LeaderboardGetIndexedPlayerBJHint=


// returns group
GetLastCreatedGroup="Последний созданный отряд"
GetLastCreatedGroup="Последний созданный отряд"
GetLastCreatedGroupHint="Это последние боевые единицы, созданные с помощью триггерного действия "Боевая единица - Создать"."

GetRandomSubGroup=""Случайные боевые единицы из отряда"
GetRandomSubGroup="Случайные ",~Count," боевые единицы из отряда ",~Unit Group
GetRandomSubGroupHint=

GetUnitsInRectAll="Юниты В Регионе"
GetUnitsInRectAll="Юниты в ",~Region
GetUnitsInRectAllHint=

GetUnitsInRectOfPlayer="Юниты В Регионе Игрока"
GetUnitsInRectOfPlayer="Юниты в ",~Region," принадлежащего ",~Player
GetUnitsInRectOfPlayerHint=

GetUnitsInRectMatching="Юниты В Условии Сопоставления Регионов"
GetUnitsInRectMatching="Юниты в условии сопоставления ",~Region," ",~Condition
GetUnitsInRectMatchingHint="Используйте 'Соответствующая боевая единица' для боевой единицы, которая соответствует условию."

GetUnitsInRangeOfLocAll="Юниты в Диапазоне"
GetUnitsInRangeOfLocAll="Юниты в ",~Radius," ",~Point
GetUnitsInRangeOfLocAllHint=

GetUnitsInRangeOfLocMatching="Юниты В Условии Сопоставления Диапазонов"
GetUnitsInRangeOfLocMatching="Юниты в ",~Radius," ",~Point," сопоставляемого ",~Condition
GetUnitsInRangeOfLocMatchingHint="Используйте 'Соответствующая боевая единица' для боевой единицы, которая соответствует условию."

GetUnitsOfPlayerAll="Боевые единицы игрока"
GetUnitsOfPlayerAll="Боевые единицы игрока ",~Player
GetUnitsOfPlayerAllHint=

GetUnitsOfPlayerAndTypeId="Типы Юнитов Принадлежащих Игроку"
GetUnitsOfPlayerAndTypeId="Типы юнитов принадлежащих ",~Player," ",~Unit-Type
GetUnitsOfPlayerAndTypeIdHint=

GetUnitsOfPlayerMatching="Боевые единицы игрока соответствуют условию"
GetUnitsOfPlayerMatching="Боевые единицы игрока ",~Player," соответствуют ",~Condition,"."
GetUnitsOfPlayerMatchingHint="Используйте 'Соответствующая боевая единица' для боевой единицы, которая соответствует условию."

GetUnitsOfTypeIdAll="Тип боевых единиц"
GetUnitsOfTypeIdAll="Тип боевых единиц ",~Unit-Type
GetUnitsOfTypeIdAllHint=

GetUnitsSelectedAll="Выделенные боевые единицы"
GetUnitsSelectedAll="Боевые единицы выделены игроком ",~Player
GetUnitsSelectedAllHint="Это не должно использоваться в триггерных условиях."


// returns force
GetPlayersAll="Все игроки"
GetPlayersAll="Все игроки"
GetPlayersAllHint="Включает нейтральных игроков."

GetPlayersByMapControl="Все игроки управляются игроком"
GetPlayersByMapControl="Все игроки управляются игроком ",~Control Type,"."
GetPlayersByMapControlHint=

GetPlayersMatching="Все игроки соответствуют условию"
GetPlayersMatching="Все игроки соответствуют ",~Condition
GetPlayersMatchingHint=

GetPlayersAllies="Союзники игрока"
GetPlayersAllies="Все союзники ",~Player
GetPlayersAlliesHint="Все союзники указанного игрока, включая его самого."

GetPlayersEnemies="Противники игрока"
GetPlayersEnemies="Все противники ",~Player
GetPlayersEnemiesHint="Все противники указанного игрока."

GetForceOfPlayer="Преобразование игрока в группу игроков"
GetForceOfPlayer="Группа игроков(",~Player,")"
GetForceOfPlayerHint=


// returns race
GetPlayerRace="Раса игрока"
GetPlayerRace="Раса ",~Player
GetPlayerRaceHint=

GetUnitRace="Раса боевой единицы"
GetUnitRace="Раса ",~Unit
GetUnitRaceHint=


// returns camerasetup	
GetCurrentCameraSetup="Текущая камера"
GetCurrentCameraSetup="Текущая камера"
GetCurrentCameraSetupHint=


// returns fogmodifier
GetLastCreatedFogModifier="Последняя созданная видимость"
GetLastCreatedFogModifier="Последняя созданная видимость"
GetLastCreatedFogModifierHint="Это последняя видимость, созданная действием триггера 'Видимость - Создать видимость'."


// returns trigger
GetTriggeringTrigger="Этот триггер"
GetTriggeringTrigger="Этот триггер"
GetTriggeringTriggerHint=


// returns gamedifficulty
GetGameDifficulty="Уровень сложности"
GetGameDifficulty="Уровень сложности"
GetGameDifficultyHint=


// returns aidifficulty
GetAIDifficulty="Интерфейс Атаки Игрока"
GetAIDifficulty="Интерфейс Атаки ",~Player
GetAIDifficultyHint=


// returns gamespeed
GetGameSpeed="Текущая скорость игры"
GetGameSpeed="Текущая скорость игры"
GetGameSpeedHint=


// returns mapcontrol
GetPlayerController="Управление игроком"
GetPlayerController=~Player," управляет"
GetPlayerControllerHint=


// returns playercolor
GetPlayerColor="Цвет Игрока"
GetPlayerColor="Цвет ",~Player
GetPlayerColorHint=


// returns playerslotstate
GetPlayerSlotState="Статус слота игрока"
GetPlayerSlotState=~Player," статус слота"
GetPlayerSlotStateHint=


// returns effect
GetLastCreatedEffectBJ="Последний созданный спецэффект"
GetLastCreatedEffectBJ="Последний созданный спецэффект"
GetLastCreatedEffectBJHint=


// returns lightning
GetLastCreatedLightningBJ="Последний созданный эффект молнии"
GetLastCreatedLightningBJ="Последний созданный эффект молнии"
GetLastCreatedLightningBJHint=


// returns image
GetLastCreatedImage="Последнее созданное изображение"
GetLastCreatedImage="Последнее созданное изображение"
GetLastCreatedImageHint=


// returns ubersplat
GetLastCreatedUbersplat="Последняя созданная текстура земли"
GetLastCreatedUbersplat="Последняя созданная текстура земли"
GetLastCreatedUbersplatHint=


// returns weathereffect
GetLastCreatedWeatherEffect="Последний созданный погодный эффект"
GetLastCreatedWeatherEffect="Последний созданный погодный эффект"
GetLastCreatedWeatherEffectHint="Это последний погодный эффект, созданный действием триггера 'Окружающая среда - Создать погодный эффект'."


// returns terraindeformation
GetLastCreatedTerrainDeformation="Последняя созданная деформация рельефа"
GetLastCreatedTerrainDeformation="Последняя созданная деформация рельефа"
GetLastCreatedTerrainDeformationHint="Это последняя деформация рельефа, созданная через действие триггера 'Окружающая среда - Создать деформацию рельефа'."


// returns terraintype
GetTerrainTypeBJ="Тип рельефа"
GetTerrainTypeBJ="Тип рельефа ",~Location
GetTerrainTypeBJHint=


// returns sound
GetLastPlayedSound="Последний воспроизведённый звук"
GetLastPlayedSound="Последний воспроизведённый звук"
GetLastPlayedSoundHint="Это последний звук, воспроизведённый действием триггера 'Звук - Воспроизвести звук'."


// returns music
GetLastPlayedMusic="Последняя сыгранная музыка"
GetLastPlayedMusic="Последняя сыгранная музыка"
GetLastPlayedMusicHint="Это последняя музыка, сыгранная действием триггера 'Звук - Воспроизвести музыку'."


// returns quest
GetLastCreatedQuestBJ="Последнее созданное задание"
GetLastCreatedQuestBJ="Последнее созданное задание"
GetLastCreatedQuestBJHint="Это последнее задание, созданное действием триггера 'Задание - Создать задание'."


// returns questitem
GetLastCreatedQuestItemBJ="Последнее созданное требование задания"
GetLastCreatedQuestItemBJ="Последнее созданное требование задания"
GetLastCreatedQuestItemBJHint="Это последнее требование задания, созданное действием триггера 'Задание - Создать требование задания'."


// returns defeatcondition
GetLastCreatedDefeatConditionBJ="Последнее созданное условие поражения"
GetLastCreatedDefeatConditionBJ="Последнее созданное условие поражения"
GetLastCreatedDefeatConditionBJHint="Это последнее условие поражения, созданное действием триггера 'Задание - Создать условие поражения'."


// returns dialog
GetClickedDialogBJ="Нажатое диалоговое окно"
GetClickedDialogBJ="Нажатое диалоговое окно"
GetClickedDialogBJHint="Имеет отношение к диалоговому окну с нажатой кнопкой - при ответе на событие 'Диалоговое окно - Нажатая кнопка диалогового окна'."


// returns button
GetLastCreatedButtonBJ="Последняя созданная кнопка диалогового окна"
GetLastCreatedButtonBJ="Последняя созданная кнопка диалогового окна"
GetLastCreatedButtonBJHint="Это последняя кнопка диалогового окна, созданная действием триггера 'Диалоговое окно - Создать кнопку диалогового окна'."

GetClickedButtonBJ="Нажатая кнопка диалогового окна"
GetClickedButtonBJ="Нажатая кнопка диалогового окна"
GetClickedButtonBJHint="Ссылается на кнопку диалога, которая находится в нажатом состоянии при ответе на событие 'Диалоговое окно - Нажата кнопка диалогового окна'."


// returns leaderboard
GetLastCreatedLeaderboard="Последняя созданная таблица рекордов"
GetLastCreatedLeaderboard="Последняя созданная таблица рекордов"
GetLastCreatedLeaderboardHint="Это последняя созданная таблица рекордов, созданная действием триггера 'Таблица рекордов - Создать'."

PlayerGetLeaderboardBJ="Таблица рекордов игрока"
PlayerGetLeaderboardBJ="Таблица рекордов ",~Player
PlayerGetLeaderboardBJHint="У каждого игрока может быть максимум одна таблица рекордов."


// returns multiboard
GetLastCreatedMultiboard="Последняя созданная статистическая таблица"
GetLastCreatedMultiboard="Последняя созданная статистическая таблица"
GetLastCreatedMultiboardHint="Обращается к последней статистической таблице, созданной командой - 'Статистическая таблица - Создать'"


// returns timer
GetLastCreatedTimerBJ="Последний запущенный Таймер"
GetLastCreatedTimerBJ="Последний запущенный Таймер"
GetLastCreatedTimerBJHint="Это последний таймер, запущенный действием триггера 'Таймер - Запустить таймер'."

GetExpiredTimer="Истекающий таймер"
GetExpiredTimer="Истекающий таймер"
GetExpiredTimerHint="Имеет отношение к таймеру, время которого истекает, - при ответе на событие 'Время - Таймер истекает'."


// returns timerdialog
GetLastCreatedTimerDialogBJ="Последнее созданное окно таймера"
GetLastCreatedTimerDialogBJ="Последнее созданное окно таймера"
GetLastCreatedTimerDialogBJHint="Это последнее окно таймера, созданное действием триггера 'Таймер - Создать окно таймера'."


// returns gamecache
GetLastCreatedGameCacheBJ="Последний созданный кэш игры"
GetLastCreatedGameCacheBJ="Последний созданный кэш игры"
GetLastCreatedGameCacheBJHint="Это последний кэш игры, созданный действием триггера 'Буфер игры - Создать кэш игры'."


// returns texttag
GetLastCreatedTextTag="Последний созданный парящий текст"
GetLastCreatedTextTag="Последний созданный парящий текст"
GetLastCreatedTextTagHint="Это последний парящий текст, созданный действием триггера 'Парящий текст - Создать парящий текст'."



//***************************************************************************
[AIFunctionStrings]
// These functions are defined in AIEditorData.txt

// --- Boolean

TownThreatened="Атака На Город"
TownThreatened="Атака на город"
TownThreatenedHint=""

TownHasMine="В Городе Есть Шахта"
TownHasMine="В городе #",~Town," есть действующая золотая шахта"

TownHasHall="В Городе Есть Ратуша"
TownHasHall="В городе #",~Town," есть ратуша"

CaptainIsHome="Капитан Группы Дома"
CaptainIsHome="Капитан группы дома"

CaptainIsFull="Группа Нападения Укомплектована"
CaptainIsFull="Группа нападения укомплектована"

CaptainIsEmpty="Группа Нападения Несформирована"
CaptainIsEmpty="Группа нападения несформирована"

CaptainRetreating="Капитан Группы Отступает"
CaptainRetreating="Капитан группы отступает"

CaptainAtGoal="Капитан Группы У Цели"
CaptainAtGoal="Капитан группы у цели"

CaptainInCombat="Капитан В Поединке"
CaptainInCombat=~Captain Type," капитан в поединке"

CreepsOnMap="Нечисть Есть Везде"
CreepsOnMap="Нечисть есть везде на карте"

ExpansionNeeded="Необходимо Расширение"
ExpansionNeeded="Необходимо расширение"
ExpansionNeededHint="Возвращает подтверждение, если есть необходимость в расширении, но в настоящее время нет открытых мест."

// --- Integer

GetUnitCount="Все Юниты Типа"
GetUnitCount="Общее количество ",~Unit Type," юнитов"
GetUnitCountHint="Показатель включает юниты, которые в настоящее время проходят подготовку или конструируются."

GetUnitCountDone="Все Юниты Типа - Только Законченные"
GetUnitCountDone="Общее количество ",~Unit Type," законченных юнитов"
GetUnitCountDoneHint="Показатель НЕ включает юниты, которые в настоящее время проходят подготовку или конструируются."

GetTownUnitCount="Все Юниты Типа - У Города"
GetTownUnitCount="Общее количество ",~Unit Type," юнитов в городе #",~Town," (только законченные: ",~Option,")"
GetTownUnitCountHint=""

GetMinesOwned="Количество Имеющихся Шахт"
GetMinesOwned="Количество имеющихся шахт"
GetMinesOwnedHint="Общее количество шахт, используемых в настоящее время игроком."

GetGoldOwned="Количество Недобытого Золота"
GetGoldOwned="Количество недобытого золота"
GetGoldOwnedHint="Общее количество золота, оставшегося в используемых в настоящее время шахтах."

TownWithMine="Город С Шахтой"
TownWithMine="Город с золотой шахтой"
TownWithMineHint="Возвращает ID первого города с активной золотой шахтой"

GetGold="Текущее Количество Золота"
GetGold="Текущее количество золота"
GetGoldHint="Количество золота, принадлежащего игроку"

GetWood="Текущее Количество Древесины"
GetWood="Текущее количество древесины"
GetWoodHint="Количество древесины, принадлежащей игроку"

GetUnitGoldCost="Стоимость Юнита в Золоте"
GetUnitGoldCost="Стоимость в золоте",~Unit Type

GetUnitWoodCost="Общая стоимость Юнита"
GetUnitWoodCost="Общая стоимость" ,~Unit Type

GetUnitBuildTime="Время Создания Юнита"
GetUnitBuildTime="Время создания ",~Unit Type
GetUnitBuildTimeHint="Время создания в секундах."

GetUpgradeLevel="Текущий Уровень Обновления"
GetUpgradeLevel="Уровень обновления ",~Upgrade Type

GetUpgradeGoldCost="Стоимость Обновления В Золоте"
GetUpgradeGoldCost="Стоимость в золоте следующего",~Upgrade Type," обновления"

GetUpgradeWoodCost="Стоимость Обновления В Лесоматериалах"
GetUpgradeWoodCost="Стоимость, в лесоматериалах, следующего",~Upgrade Type," обновления"

GetNextExpansion="Следующий Город"
GetNextExpansion="Следующий город"
GetNextExpansionHint="Возвращает ID города для последующего расширения"

FoodUsed="Потребляемая Пища"
FoodUsed="Потребляемая пища"
FoodUsedHint="Общее количество пищи, потребляемое игроком"

TotalFoodProduced="Производимая Пища"
TotalFoodProduced="Производимая пища"
TotalFoodProducedHint="Общее количество пищи, производимое в настоящее время игроком"

GetFoodMade="Пища производимая Юнитом"
GetFoodMade="Пища производимая",~Unit Type," юнитами"

CommandsWaiting="Ожидающие Команды"
CommandsWaiting="Количество ожидающих команд"
CommandsWaitingHint="Команды можно отдавать триггерами карты 'Прикладной Интерфейс AI - Отдать Команду'."

CheckLastCommand="Последняя Команда"
CheckLastCommand="Последняя отданная команда, ",~Option," команда"
CheckLastCommandHint="Команды можно отдавать триггерами карты 'Прикладной Интерфейс AI - Отдать Команду'."

CheckLastCommandData="Последние Данные Команды"
CheckLastCommandData="Последние отправленные данные команды, ",~Option," команда"
CheckLastCommandDataHint="Команды можно отдавать триггерами карты 'Прикладной Интерфейс AI - Отдать Команду'."

CaptainGroupSize="Состав Группы Нападения"
CaptainGroupSize="Состав группы нападения"
CaptainGroupSizeHint="Текущее количество юнитов в группе нападения."

CaptainReadinessHP="Степень Здоровья Группы Нападения"
CaptainReadinessHP="Степень здоровья группы нападения"
CaptainReadinessHPHint="Уровень здоровья определяется средним показателем здоровья группы, полное здоровье равно 100."

CaptainReadinessMa="Уровень Маны Группы Нападения"
CaptainReadinessMa="Уровень маны группы нападения"
CaptainReadinessMaHint="Уровень маны определяется средним показателем маны группы, полная мана равна 100."

CurrentAttackWave="Текущая Волна Атаки"
CurrentAttackWave="Текущая волна атаки"
CurrentAttackWaveHint="Волны атаки определены в списке атак."

MeleeDifficulty="Уровень Сложности Нападения"
MeleeDifficulty="Уровень сложности Нападения"